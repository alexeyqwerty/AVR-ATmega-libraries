
MatrixKeyboard_Example.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000b44  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001e  00800060  00000b44  00000bd8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000005  0080007e  0080007e  00000bf6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000bf6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000c28  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000180  00000000  00000000  00000c64  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000031db  00000000  00000000  00000de4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f19  00000000  00000000  00003fbf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000fa5  00000000  00000000  00004ed8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000440  00000000  00000000  00005e80  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a8a  00000000  00000000  000062c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000157e  00000000  00000000  00006d4a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000158  00000000  00000000  000082c8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	1e c0       	rjmp	.+60     	; 0x3e <__ctors_end>
   2:	38 c0       	rjmp	.+112    	; 0x74 <__bad_interrupt>
   4:	37 c0       	rjmp	.+110    	; 0x74 <__bad_interrupt>
   6:	36 c0       	rjmp	.+108    	; 0x74 <__bad_interrupt>
   8:	35 c0       	rjmp	.+106    	; 0x74 <__bad_interrupt>
   a:	34 c0       	rjmp	.+104    	; 0x74 <__bad_interrupt>
   c:	33 c0       	rjmp	.+102    	; 0x74 <__bad_interrupt>
   e:	32 c0       	rjmp	.+100    	; 0x74 <__bad_interrupt>
  10:	31 c0       	rjmp	.+98     	; 0x74 <__bad_interrupt>
  12:	aa c1       	rjmp	.+852    	; 0x368 <__vector_9>
  14:	2f c0       	rjmp	.+94     	; 0x74 <__bad_interrupt>
  16:	2e c0       	rjmp	.+92     	; 0x74 <__bad_interrupt>
  18:	2d c0       	rjmp	.+90     	; 0x74 <__bad_interrupt>
  1a:	2c c0       	rjmp	.+88     	; 0x74 <__bad_interrupt>
  1c:	2b c0       	rjmp	.+86     	; 0x74 <__bad_interrupt>
  1e:	2a c0       	rjmp	.+84     	; 0x74 <__bad_interrupt>
  20:	29 c0       	rjmp	.+82     	; 0x74 <__bad_interrupt>
  22:	28 c0       	rjmp	.+80     	; 0x74 <__bad_interrupt>
  24:	27 c0       	rjmp	.+78     	; 0x74 <__bad_interrupt>
  26:	f0 c2       	rjmp	.+1504   	; 0x608 <__stack+0x1a9>
  28:	97 c2       	rjmp	.+1326   	; 0x558 <__stack+0xf9>
  2a:	e6 c2       	rjmp	.+1484   	; 0x5f8 <__stack+0x199>
  2c:	dd c2       	rjmp	.+1466   	; 0x5e8 <__stack+0x189>
  2e:	d4 c2       	rjmp	.+1448   	; 0x5d8 <__stack+0x179>
  30:	cb c2       	rjmp	.+1430   	; 0x5c8 <__stack+0x169>
  32:	c2 c2       	rjmp	.+1412   	; 0x5b8 <__stack+0x159>
  34:	b9 c2       	rjmp	.+1394   	; 0x5a8 <__stack+0x149>
  36:	b0 c2       	rjmp	.+1376   	; 0x598 <__stack+0x139>
  38:	a7 c2       	rjmp	.+1358   	; 0x588 <__stack+0x129>
  3a:	9e c2       	rjmp	.+1340   	; 0x578 <__stack+0x119>
  3c:	95 c2       	rjmp	.+1322   	; 0x568 <__stack+0x109>

0000003e <__ctors_end>:
  3e:	11 24       	eor	r1, r1
  40:	1f be       	out	0x3f, r1	; 63
  42:	cf e5       	ldi	r28, 0x5F	; 95
  44:	d4 e0       	ldi	r29, 0x04	; 4
  46:	de bf       	out	0x3e, r29	; 62
  48:	cd bf       	out	0x3d, r28	; 61

0000004a <__do_copy_data>:
  4a:	10 e0       	ldi	r17, 0x00	; 0
  4c:	a0 e6       	ldi	r26, 0x60	; 96
  4e:	b0 e0       	ldi	r27, 0x00	; 0
  50:	e4 e4       	ldi	r30, 0x44	; 68
  52:	fb e0       	ldi	r31, 0x0B	; 11
  54:	02 c0       	rjmp	.+4      	; 0x5a <__do_copy_data+0x10>
  56:	05 90       	lpm	r0, Z+
  58:	0d 92       	st	X+, r0
  5a:	ae 37       	cpi	r26, 0x7E	; 126
  5c:	b1 07       	cpc	r27, r17
  5e:	d9 f7       	brne	.-10     	; 0x56 <__do_copy_data+0xc>

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	ae e7       	ldi	r26, 0x7E	; 126
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a3 38       	cpi	r26, 0x83	; 131
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	8e d1       	rcall	.+796    	; 0x38e <main>
  72:	66 c5       	rjmp	.+2764   	; 0xb40 <_exit>

00000074 <__bad_interrupt>:
  74:	c5 cf       	rjmp	.-118    	; 0x0 <__vectors>

00000076 <_ZN7HD4478012SelectDeviceEv>:
	}
	
	PrintText(text, slot, line);
}

HD44780::~HD44780(){}
  76:	fc 01       	movw	r30, r24
  78:	84 81       	ldd	r24, Z+4	; 0x04
  7a:	95 81       	ldd	r25, Z+5	; 0x05
  7c:	dc d3       	rcall	.+1976   	; 0x836 <_ZN4Port3SetEv>
  7e:	08 95       	ret

00000080 <_ZN7HD447809LatchDataEv>:
  80:	fc 01       	movw	r30, r24
  82:	84 81       	ldd	r24, Z+4	; 0x04
  84:	95 81       	ldd	r25, Z+5	; 0x05
  86:	e9 d3       	rcall	.+2002   	; 0x85a <_ZN4Port5ClearEv>
  88:	08 95       	ret

0000008a <_ZN7HD447804WaitEv>:
  8a:	ff 92       	push	r15
  8c:	0f 93       	push	r16
  8e:	1f 93       	push	r17
  90:	cf 93       	push	r28
  92:	df 93       	push	r29
  94:	ec 01       	movw	r28, r24
  96:	f1 2c       	mov	r15, r1
  98:	83 e0       	ldi	r24, 0x03	; 3
  9a:	8f 15       	cp	r24, r15
  9c:	90 f0       	brcs	.+36     	; 0xc2 <_ZN7HD447804WaitEv+0x38>
  9e:	0f 2d       	mov	r16, r15
  a0:	10 e0       	ldi	r17, 0x00	; 0
  a2:	0d 5f       	subi	r16, 0xFD	; 253
  a4:	1f 4f       	sbci	r17, 0xFF	; 255
  a6:	00 0f       	add	r16, r16
  a8:	11 1f       	adc	r17, r17
  aa:	0c 0f       	add	r16, r28
  ac:	1d 1f       	adc	r17, r29
  ae:	f8 01       	movw	r30, r16
  b0:	80 81       	ld	r24, Z
  b2:	91 81       	ldd	r25, Z+1	; 0x01
  b4:	c0 d3       	rcall	.+1920   	; 0x836 <_ZN4Port3SetEv>
  b6:	f8 01       	movw	r30, r16
  b8:	80 81       	ld	r24, Z
  ba:	91 81       	ldd	r25, Z+1	; 0x01
  bc:	94 d3       	rcall	.+1832   	; 0x7e6 <_ZN4Port10SetAsInputEv>
  be:	f3 94       	inc	r15
  c0:	eb cf       	rjmp	.-42     	; 0x98 <_ZN7HD447804WaitEv+0xe>
  c2:	8a 81       	ldd	r24, Y+2	; 0x02
  c4:	9b 81       	ldd	r25, Y+3	; 0x03
  c6:	b7 d3       	rcall	.+1902   	; 0x836 <_ZN4Port3SetEv>
  c8:	88 81       	ld	r24, Y
  ca:	99 81       	ldd	r25, Y+1	; 0x01
  cc:	c6 d3       	rcall	.+1932   	; 0x85a <_ZN4Port5ClearEv>
  ce:	ce 01       	movw	r24, r28
  d0:	d2 df       	rcall	.-92     	; 0x76 <_ZN7HD4478012SelectDeviceEv>
  d2:	8c 85       	ldd	r24, Y+12	; 0x0c
  d4:	9d 85       	ldd	r25, Y+13	; 0x0d
  d6:	e7 d3       	rcall	.+1998   	; 0x8a6 <_ZN4Port5IsSetEv>
  d8:	18 2f       	mov	r17, r24
  da:	ce 01       	movw	r24, r28
  dc:	d1 df       	rcall	.-94     	; 0x80 <_ZN7HD447809LatchDataEv>
  de:	ce 01       	movw	r24, r28
  e0:	ca df       	rcall	.-108    	; 0x76 <_ZN7HD4478012SelectDeviceEv>
  e2:	ce 01       	movw	r24, r28
  e4:	cd df       	rcall	.-102    	; 0x80 <_ZN7HD447809LatchDataEv>
  e6:	11 11       	cpse	r17, r1
  e8:	f2 cf       	rjmp	.-28     	; 0xce <_ZN7HD447804WaitEv+0x44>
  ea:	f1 2c       	mov	r15, r1
  ec:	f3 e0       	ldi	r31, 0x03	; 3
  ee:	ff 15       	cp	r31, r15
  f0:	90 f0       	brcs	.+36     	; 0x116 <_ZN7HD447804WaitEv+0x8c>
  f2:	0f 2d       	mov	r16, r15
  f4:	10 e0       	ldi	r17, 0x00	; 0
  f6:	0d 5f       	subi	r16, 0xFD	; 253
  f8:	1f 4f       	sbci	r17, 0xFF	; 255
  fa:	00 0f       	add	r16, r16
  fc:	11 1f       	adc	r17, r17
  fe:	0c 0f       	add	r16, r28
 100:	1d 1f       	adc	r17, r29
 102:	f8 01       	movw	r30, r16
 104:	80 81       	ld	r24, Z
 106:	91 81       	ldd	r25, Z+1	; 0x01
 108:	83 d3       	rcall	.+1798   	; 0x810 <_ZN4Port11SetAsOutputEv>
 10a:	f8 01       	movw	r30, r16
 10c:	80 81       	ld	r24, Z
 10e:	91 81       	ldd	r25, Z+1	; 0x01
 110:	a4 d3       	rcall	.+1864   	; 0x85a <_ZN4Port5ClearEv>
 112:	f3 94       	inc	r15
 114:	eb cf       	rjmp	.-42     	; 0xec <_ZN7HD447804WaitEv+0x62>
 116:	8a 81       	ldd	r24, Y+2	; 0x02
 118:	9b 81       	ldd	r25, Y+3	; 0x03
 11a:	9f d3       	rcall	.+1854   	; 0x85a <_ZN4Port5ClearEv>
 11c:	df 91       	pop	r29
 11e:	cf 91       	pop	r28
 120:	1f 91       	pop	r17
 122:	0f 91       	pop	r16
 124:	ff 90       	pop	r15
 126:	08 95       	ret

00000128 <_ZN7HD447808SendByteEc8DataType>:
 128:	ef 92       	push	r14
 12a:	ff 92       	push	r15
 12c:	0f 93       	push	r16
 12e:	1f 93       	push	r17
 130:	cf 93       	push	r28
 132:	df 93       	push	r29
 134:	ec 01       	movw	r28, r24
 136:	e6 2e       	mov	r14, r22
 138:	14 2f       	mov	r17, r20
 13a:	a7 df       	rcall	.-178    	; 0x8a <_ZN7HD447804WaitEv>
 13c:	11 30       	cpi	r17, 0x01	; 1
 13e:	21 f4       	brne	.+8      	; 0x148 <_ZN7HD447808SendByteEc8DataType+0x20>
 140:	88 81       	ld	r24, Y
 142:	99 81       	ldd	r25, Y+1	; 0x01
 144:	8a d3       	rcall	.+1812   	; 0x85a <_ZN4Port5ClearEv>
 146:	05 c0       	rjmp	.+10     	; 0x152 <_ZN7HD447808SendByteEc8DataType+0x2a>
 148:	11 11       	cpse	r17, r1
 14a:	03 c0       	rjmp	.+6      	; 0x152 <_ZN7HD447808SendByteEc8DataType+0x2a>
 14c:	88 81       	ld	r24, Y
 14e:	99 81       	ldd	r25, Y+1	; 0x01
 150:	72 d3       	rcall	.+1764   	; 0x836 <_ZN4Port3SetEv>
 152:	0e 2d       	mov	r16, r14
 154:	10 e0       	ldi	r17, 0x00	; 0
 156:	15 95       	asr	r17
 158:	07 95       	ror	r16
 15a:	15 95       	asr	r17
 15c:	07 95       	ror	r16
 15e:	15 95       	asr	r17
 160:	07 95       	ror	r16
 162:	15 95       	asr	r17
 164:	07 95       	ror	r16
 166:	f1 2c       	mov	r15, r1
 168:	81 e0       	ldi	r24, 0x01	; 1
 16a:	8f 15       	cp	r24, r15
 16c:	58 f1       	brcs	.+86     	; 0x1c4 <_ZN7HD447808SendByteEc8DataType+0x9c>
 16e:	ce 01       	movw	r24, r28
 170:	82 df       	rcall	.-252    	; 0x76 <_ZN7HD4478012SelectDeviceEv>
 172:	10 e0       	ldi	r17, 0x00	; 0
 174:	14 30       	cpi	r17, 0x04	; 4
 176:	08 f5       	brcc	.+66     	; 0x1ba <_ZN7HD447808SendByteEc8DataType+0x92>
 178:	81 2f       	mov	r24, r17
 17a:	90 e0       	ldi	r25, 0x00	; 0
 17c:	20 2f       	mov	r18, r16
 17e:	30 e0       	ldi	r19, 0x00	; 0
 180:	01 2e       	mov	r0, r17
 182:	02 c0       	rjmp	.+4      	; 0x188 <_ZN7HD447808SendByteEc8DataType+0x60>
 184:	35 95       	asr	r19
 186:	27 95       	ror	r18
 188:	0a 94       	dec	r0
 18a:	e2 f7       	brpl	.-8      	; 0x184 <_ZN7HD447808SendByteEc8DataType+0x5c>
 18c:	20 ff       	sbrs	r18, 0
 18e:	0a c0       	rjmp	.+20     	; 0x1a4 <_ZN7HD447808SendByteEc8DataType+0x7c>
 190:	fc 01       	movw	r30, r24
 192:	33 96       	adiw	r30, 0x03	; 3
 194:	ee 0f       	add	r30, r30
 196:	ff 1f       	adc	r31, r31
 198:	ec 0f       	add	r30, r28
 19a:	fd 1f       	adc	r31, r29
 19c:	80 81       	ld	r24, Z
 19e:	91 81       	ldd	r25, Z+1	; 0x01
 1a0:	4a d3       	rcall	.+1684   	; 0x836 <_ZN4Port3SetEv>
 1a2:	09 c0       	rjmp	.+18     	; 0x1b6 <_ZN7HD447808SendByteEc8DataType+0x8e>
 1a4:	fc 01       	movw	r30, r24
 1a6:	33 96       	adiw	r30, 0x03	; 3
 1a8:	ee 0f       	add	r30, r30
 1aa:	ff 1f       	adc	r31, r31
 1ac:	ec 0f       	add	r30, r28
 1ae:	fd 1f       	adc	r31, r29
 1b0:	80 81       	ld	r24, Z
 1b2:	91 81       	ldd	r25, Z+1	; 0x01
 1b4:	52 d3       	rcall	.+1700   	; 0x85a <_ZN4Port5ClearEv>
 1b6:	1f 5f       	subi	r17, 0xFF	; 255
 1b8:	dd cf       	rjmp	.-70     	; 0x174 <_ZN7HD447808SendByteEc8DataType+0x4c>
 1ba:	ce 01       	movw	r24, r28
 1bc:	61 df       	rcall	.-318    	; 0x80 <_ZN7HD447809LatchDataEv>
 1be:	f3 94       	inc	r15
 1c0:	0e 2d       	mov	r16, r14
 1c2:	d2 cf       	rjmp	.-92     	; 0x168 <_ZN7HD447808SendByteEc8DataType+0x40>
 1c4:	df 91       	pop	r29
 1c6:	cf 91       	pop	r28
 1c8:	1f 91       	pop	r17
 1ca:	0f 91       	pop	r16
 1cc:	ff 90       	pop	r15
 1ce:	ef 90       	pop	r14
 1d0:	08 95       	ret

000001d2 <_ZN7HD4478017SetCursorPositionEhh>:
 1d2:	42 30       	cpi	r20, 0x02	; 2
 1d4:	20 f0       	brcs	.+8      	; 0x1de <_ZN7HD4478017SetCursorPositionEhh+0xc>
 1d6:	41 70       	andi	r20, 0x01	; 1
 1d8:	fc 01       	movw	r30, r24
 1da:	26 85       	ldd	r18, Z+14	; 0x0e
 1dc:	62 0f       	add	r22, r18
 1de:	f0 e4       	ldi	r31, 0x40	; 64
 1e0:	4f 9f       	mul	r20, r31
 1e2:	60 0d       	add	r22, r0
 1e4:	11 24       	eor	r1, r1
 1e6:	60 68       	ori	r22, 0x80	; 128
 1e8:	41 e0       	ldi	r20, 0x01	; 1
 1ea:	9e df       	rcall	.-196    	; 0x128 <_ZN7HD447808SendByteEc8DataType>
 1ec:	08 95       	ret

000001ee <_ZN7HD447802OnEv>:
 1ee:	41 e0       	ldi	r20, 0x01	; 1
 1f0:	6c e0       	ldi	r22, 0x0C	; 12
 1f2:	9a df       	rcall	.-204    	; 0x128 <_ZN7HD447808SendByteEc8DataType>
 1f4:	08 95       	ret

000001f6 <_ZN7HD447803OffEv>:
 1f6:	41 e0       	ldi	r20, 0x01	; 1
 1f8:	68 e0       	ldi	r22, 0x08	; 8
 1fa:	96 df       	rcall	.-212    	; 0x128 <_ZN7HD447808SendByteEc8DataType>
 1fc:	08 95       	ret

000001fe <_ZN7HD447805ClearEv>:
 1fe:	41 e0       	ldi	r20, 0x01	; 1
 200:	61 e0       	ldi	r22, 0x01	; 1
 202:	92 df       	rcall	.-220    	; 0x128 <_ZN7HD447808SendByteEc8DataType>
 204:	08 95       	ret

00000206 <_ZN7HD44780C1EP4PortS1_S1_S1_S1_S1_S1_h>:
 206:	6f 92       	push	r6
 208:	7f 92       	push	r7
 20a:	8f 92       	push	r8
 20c:	af 92       	push	r10
 20e:	bf 92       	push	r11
 210:	cf 92       	push	r12
 212:	df 92       	push	r13
 214:	ef 92       	push	r14
 216:	ff 92       	push	r15
 218:	0f 93       	push	r16
 21a:	1f 93       	push	r17
 21c:	cf 93       	push	r28
 21e:	df 93       	push	r29
 220:	cd b7       	in	r28, 0x3d	; 61
 222:	de b7       	in	r29, 0x3e	; 62
 224:	3c 01       	movw	r6, r24
 226:	cb 01       	movw	r24, r22
 228:	f3 01       	movw	r30, r6
 22a:	86 86       	std	Z+14, r8	; 0x0e
 22c:	71 83       	std	Z+1, r23	; 0x01
 22e:	60 83       	st	Z, r22
 230:	53 83       	std	Z+3, r21	; 0x03
 232:	42 83       	std	Z+2, r20	; 0x02
 234:	35 83       	std	Z+5, r19	; 0x05
 236:	24 83       	std	Z+4, r18	; 0x04
 238:	17 83       	std	Z+7, r17	; 0x07
 23a:	06 83       	std	Z+6, r16	; 0x06
 23c:	f1 86       	std	Z+9, r15	; 0x09
 23e:	e0 86       	std	Z+8, r14	; 0x08
 240:	d3 86       	std	Z+11, r13	; 0x0b
 242:	c2 86       	std	Z+10, r12	; 0x0a
 244:	b5 86       	std	Z+13, r11	; 0x0d
 246:	a4 86       	std	Z+12, r10	; 0x0c
 248:	e3 d2       	rcall	.+1478   	; 0x810 <_ZN4Port11SetAsOutputEv>
 24a:	f3 01       	movw	r30, r6
 24c:	82 81       	ldd	r24, Z+2	; 0x02
 24e:	93 81       	ldd	r25, Z+3	; 0x03
 250:	df d2       	rcall	.+1470   	; 0x810 <_ZN4Port11SetAsOutputEv>
 252:	f3 01       	movw	r30, r6
 254:	84 81       	ldd	r24, Z+4	; 0x04
 256:	95 81       	ldd	r25, Z+5	; 0x05
 258:	db d2       	rcall	.+1462   	; 0x810 <_ZN4Port11SetAsOutputEv>
 25a:	f3 01       	movw	r30, r6
 25c:	82 81       	ldd	r24, Z+2	; 0x02
 25e:	93 81       	ldd	r25, Z+3	; 0x03
 260:	fc d2       	rcall	.+1528   	; 0x85a <_ZN4Port5ClearEv>
 262:	f1 2c       	mov	r15, r1
 264:	f3 e0       	ldi	r31, 0x03	; 3
 266:	ff 15       	cp	r31, r15
 268:	90 f0       	brcs	.+36     	; 0x28e <_ZN7HD44780C1EP4PortS1_S1_S1_S1_S1_S1_h+0x88>
 26a:	0f 2d       	mov	r16, r15
 26c:	10 e0       	ldi	r17, 0x00	; 0
 26e:	0d 5f       	subi	r16, 0xFD	; 253
 270:	1f 4f       	sbci	r17, 0xFF	; 255
 272:	00 0f       	add	r16, r16
 274:	11 1f       	adc	r17, r17
 276:	06 0d       	add	r16, r6
 278:	17 1d       	adc	r17, r7
 27a:	f8 01       	movw	r30, r16
 27c:	80 81       	ld	r24, Z
 27e:	91 81       	ldd	r25, Z+1	; 0x01
 280:	c7 d2       	rcall	.+1422   	; 0x810 <_ZN4Port11SetAsOutputEv>
 282:	f8 01       	movw	r30, r16
 284:	80 81       	ld	r24, Z
 286:	91 81       	ldd	r25, Z+1	; 0x01
 288:	e8 d2       	rcall	.+1488   	; 0x85a <_ZN4Port5ClearEv>
 28a:	f3 94       	inc	r15
 28c:	eb cf       	rjmp	.-42     	; 0x264 <_ZN7HD44780C1EP4PortS1_S1_S1_S1_S1_S1_h+0x5e>
 28e:	f3 01       	movw	r30, r6
 290:	86 81       	ldd	r24, Z+6	; 0x06
 292:	97 81       	ldd	r25, Z+7	; 0x07
 294:	d0 d2       	rcall	.+1440   	; 0x836 <_ZN4Port3SetEv>
 296:	f3 01       	movw	r30, r6
 298:	80 85       	ldd	r24, Z+8	; 0x08
 29a:	91 85       	ldd	r25, Z+9	; 0x09
 29c:	cc d2       	rcall	.+1432   	; 0x836 <_ZN4Port3SetEv>
 29e:	10 e0       	ldi	r17, 0x00	; 0
 2a0:	12 30       	cpi	r17, 0x02	; 2
 2a2:	90 f4       	brcc	.+36     	; 0x2c8 <_ZN7HD44780C1EP4PortS1_S1_S1_S1_S1_S1_h+0xc2>
 2a4:	c3 01       	movw	r24, r6
 2a6:	e7 de       	rcall	.-562    	; 0x76 <_ZN7HD4478012SelectDeviceEv>
 2a8:	8f e9       	ldi	r24, 0x9F	; 159
 2aa:	9f e0       	ldi	r25, 0x0F	; 15
 2ac:	01 97       	sbiw	r24, 0x01	; 1
 2ae:	f1 f7       	brne	.-4      	; 0x2ac <_ZN7HD44780C1EP4PortS1_S1_S1_S1_S1_S1_h+0xa6>
 2b0:	00 c0       	rjmp	.+0      	; 0x2b2 <_ZN7HD44780C1EP4PortS1_S1_S1_S1_S1_S1_h+0xac>
 2b2:	00 00       	nop
 2b4:	c3 01       	movw	r24, r6
 2b6:	e4 de       	rcall	.-568    	; 0x80 <_ZN7HD447809LatchDataEv>
 2b8:	ef e9       	ldi	r30, 0x9F	; 159
 2ba:	ff e0       	ldi	r31, 0x0F	; 15
 2bc:	31 97       	sbiw	r30, 0x01	; 1
 2be:	f1 f7       	brne	.-4      	; 0x2bc <_ZN7HD44780C1EP4PortS1_S1_S1_S1_S1_S1_h+0xb6>
 2c0:	00 c0       	rjmp	.+0      	; 0x2c2 <_ZN7HD44780C1EP4PortS1_S1_S1_S1_S1_S1_h+0xbc>
 2c2:	00 00       	nop
 2c4:	1f 5f       	subi	r17, 0xFF	; 255
 2c6:	ec cf       	rjmp	.-40     	; 0x2a0 <_ZN7HD44780C1EP4PortS1_S1_S1_S1_S1_S1_h+0x9a>
 2c8:	f3 01       	movw	r30, r6
 2ca:	86 81       	ldd	r24, Z+6	; 0x06
 2cc:	97 81       	ldd	r25, Z+7	; 0x07
 2ce:	c5 d2       	rcall	.+1418   	; 0x85a <_ZN4Port5ClearEv>
 2d0:	c3 01       	movw	r24, r6
 2d2:	d1 de       	rcall	.-606    	; 0x76 <_ZN7HD4478012SelectDeviceEv>
 2d4:	8f e9       	ldi	r24, 0x9F	; 159
 2d6:	9f e0       	ldi	r25, 0x0F	; 15
 2d8:	01 97       	sbiw	r24, 0x01	; 1
 2da:	f1 f7       	brne	.-4      	; 0x2d8 <_ZN7HD44780C1EP4PortS1_S1_S1_S1_S1_S1_h+0xd2>
 2dc:	00 c0       	rjmp	.+0      	; 0x2de <_ZN7HD44780C1EP4PortS1_S1_S1_S1_S1_S1_h+0xd8>
 2de:	00 00       	nop
 2e0:	c3 01       	movw	r24, r6
 2e2:	ce de       	rcall	.-612    	; 0x80 <_ZN7HD447809LatchDataEv>
 2e4:	ef e9       	ldi	r30, 0x9F	; 159
 2e6:	ff e0       	ldi	r31, 0x0F	; 15
 2e8:	31 97       	sbiw	r30, 0x01	; 1
 2ea:	f1 f7       	brne	.-4      	; 0x2e8 <_ZN7HD44780C1EP4PortS1_S1_S1_S1_S1_S1_h+0xe2>
 2ec:	00 c0       	rjmp	.+0      	; 0x2ee <_ZN7HD44780C1EP4PortS1_S1_S1_S1_S1_S1_h+0xe8>
 2ee:	00 00       	nop
 2f0:	41 e0       	ldi	r20, 0x01	; 1
 2f2:	68 e2       	ldi	r22, 0x28	; 40
 2f4:	c3 01       	movw	r24, r6
 2f6:	18 df       	rcall	.-464    	; 0x128 <_ZN7HD447808SendByteEc8DataType>
 2f8:	c3 01       	movw	r24, r6
 2fa:	7d df       	rcall	.-262    	; 0x1f6 <_ZN7HD447803OffEv>
 2fc:	c3 01       	movw	r24, r6
 2fe:	7f df       	rcall	.-258    	; 0x1fe <_ZN7HD447805ClearEv>
 300:	41 e0       	ldi	r20, 0x01	; 1
 302:	66 e0       	ldi	r22, 0x06	; 6
 304:	c3 01       	movw	r24, r6
 306:	10 df       	rcall	.-480    	; 0x128 <_ZN7HD447808SendByteEc8DataType>
 308:	c3 01       	movw	r24, r6
 30a:	71 df       	rcall	.-286    	; 0x1ee <_ZN7HD447802OnEv>
 30c:	df 91       	pop	r29
 30e:	cf 91       	pop	r28
 310:	1f 91       	pop	r17
 312:	0f 91       	pop	r16
 314:	ff 90       	pop	r15
 316:	ef 90       	pop	r14
 318:	df 90       	pop	r13
 31a:	cf 90       	pop	r12
 31c:	bf 90       	pop	r11
 31e:	af 90       	pop	r10
 320:	8f 90       	pop	r8
 322:	7f 90       	pop	r7
 324:	6f 90       	pop	r6
 326:	08 95       	ret

00000328 <_ZN7HD447809PrintTextEPKchh>:
 328:	0f 93       	push	r16
 32a:	1f 93       	push	r17
 32c:	cf 93       	push	r28
 32e:	df 93       	push	r29
 330:	8c 01       	movw	r16, r24
 332:	eb 01       	movw	r28, r22
 334:	64 2f       	mov	r22, r20
 336:	42 2f       	mov	r20, r18
 338:	4c df       	rcall	.-360    	; 0x1d2 <_ZN7HD4478017SetCursorPositionEhh>
 33a:	68 81       	ld	r22, Y
 33c:	66 23       	and	r22, r22
 33e:	29 f0       	breq	.+10     	; 0x34a <_ZN7HD447809PrintTextEPKchh+0x22>
 340:	21 96       	adiw	r28, 0x01	; 1
 342:	40 e0       	ldi	r20, 0x00	; 0
 344:	c8 01       	movw	r24, r16
 346:	f0 de       	rcall	.-544    	; 0x128 <_ZN7HD447808SendByteEc8DataType>
 348:	f8 cf       	rjmp	.-16     	; 0x33a <_ZN7HD447809PrintTextEPKchh+0x12>
 34a:	df 91       	pop	r29
 34c:	cf 91       	pop	r28
 34e:	1f 91       	pop	r17
 350:	0f 91       	pop	r16
 352:	08 95       	ret

00000354 <_ZN7HD44780nwEj>:

void* HD44780::operator new(size_t size)
{
 354:	cf 93       	push	r28
 356:	df 93       	push	r29
 358:	ec 01       	movw	r28, r24
	void* ptr;
	do
	{
		ptr = malloc(size);
 35a:	ce 01       	movw	r24, r28
 35c:	d0 d2       	rcall	.+1440   	; 0x8fe <malloc>
	}while(ptr == nullptr);
 35e:	00 97       	sbiw	r24, 0x00	; 0
 360:	e1 f3       	breq	.-8      	; 0x35a <_ZN7HD44780nwEj+0x6>
	
	return ptr;
}
 362:	df 91       	pop	r29
 364:	cf 91       	pop	r28
 366:	08 95       	ret

00000368 <__vector_9>:
#include "MatrixKeyboard.h"

bool allowCheckKeyboard = false;

ISR(TIMER0_OVF_vect)
{
 368:	1f 92       	push	r1
 36a:	0f 92       	push	r0
 36c:	0f b6       	in	r0, 0x3f	; 63
 36e:	0f 92       	push	r0
 370:	11 24       	eor	r1, r1
 372:	8f 93       	push	r24
	if(allowCheckKeyboard == false) allowCheckKeyboard = true;
 374:	80 91 7e 00 	lds	r24, 0x007E	; 0x80007e <__data_end>
 378:	81 11       	cpse	r24, r1
 37a:	03 c0       	rjmp	.+6      	; 0x382 <__vector_9+0x1a>
 37c:	81 e0       	ldi	r24, 0x01	; 1
 37e:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__data_end>
}
 382:	8f 91       	pop	r24
 384:	0f 90       	pop	r0
 386:	0f be       	out	0x3f, r0	; 63
 388:	0f 90       	pop	r0
 38a:	1f 90       	pop	r1
 38c:	18 95       	reti

0000038e <main>:


int main(void)
{
 38e:	cf 93       	push	r28
 390:	df 93       	push	r29
 392:	00 d0       	rcall	.+0      	; 0x394 <main+0x6>
 394:	00 d0       	rcall	.+0      	; 0x396 <main+0x8>
 396:	cd b7       	in	r28, 0x3d	; 61
 398:	de b7       	in	r29, 0x3e	; 62
	//T0
	TCCR0|=(1<<CS02);//|(1<<CS00);	//prescaler 1024
 39a:	83 b7       	in	r24, 0x33	; 51
 39c:	84 60       	ori	r24, 0x04	; 4
 39e:	83 bf       	out	0x33, r24	; 51
	TIMSK|=(1<<TOIE0);			//enable interrupt OVF
 3a0:	89 b7       	in	r24, 0x39	; 57
 3a2:	81 60       	ori	r24, 0x01	; 1
 3a4:	89 bf       	out	0x39, r24	; 57
	
	Port *rs = new Port(&PORTB, &DDRB, &PINB, 0);
 3a6:	87 e0       	ldi	r24, 0x07	; 7
 3a8:	90 e0       	ldi	r25, 0x00	; 0
 3aa:	9f d2       	rcall	.+1342   	; 0x8ea <_ZN4PortnwEj>
 3ac:	3c 01       	movw	r6, r24
 3ae:	00 e0       	ldi	r16, 0x00	; 0
 3b0:	26 e3       	ldi	r18, 0x36	; 54
 3b2:	30 e0       	ldi	r19, 0x00	; 0
 3b4:	47 e3       	ldi	r20, 0x37	; 55
 3b6:	50 e0       	ldi	r21, 0x00	; 0
 3b8:	68 e3       	ldi	r22, 0x38	; 56
 3ba:	70 e0       	ldi	r23, 0x00	; 0
 3bc:	62 d2       	rcall	.+1220   	; 0x882 <_ZN4PortC1EPVhS1_S1_h>
	Port *rw = new Port(&PORTB, &DDRB, &PINB, 1);
 3be:	87 e0       	ldi	r24, 0x07	; 7
 3c0:	90 e0       	ldi	r25, 0x00	; 0
 3c2:	93 d2       	rcall	.+1318   	; 0x8ea <_ZN4PortnwEj>
 3c4:	2c 01       	movw	r4, r24
 3c6:	01 e0       	ldi	r16, 0x01	; 1
 3c8:	26 e3       	ldi	r18, 0x36	; 54
 3ca:	30 e0       	ldi	r19, 0x00	; 0
 3cc:	47 e3       	ldi	r20, 0x37	; 55
 3ce:	50 e0       	ldi	r21, 0x00	; 0
 3d0:	68 e3       	ldi	r22, 0x38	; 56
 3d2:	70 e0       	ldi	r23, 0x00	; 0
 3d4:	56 d2       	rcall	.+1196   	; 0x882 <_ZN4PortC1EPVhS1_S1_h>
	Port *e = new Port(&PORTB, &DDRB, &PINB, 2);
 3d6:	87 e0       	ldi	r24, 0x07	; 7
 3d8:	90 e0       	ldi	r25, 0x00	; 0
 3da:	87 d2       	rcall	.+1294   	; 0x8ea <_ZN4PortnwEj>
 3dc:	1c 01       	movw	r2, r24
 3de:	02 e0       	ldi	r16, 0x02	; 2
 3e0:	26 e3       	ldi	r18, 0x36	; 54
 3e2:	30 e0       	ldi	r19, 0x00	; 0
 3e4:	47 e3       	ldi	r20, 0x37	; 55
 3e6:	50 e0       	ldi	r21, 0x00	; 0
 3e8:	68 e3       	ldi	r22, 0x38	; 56
 3ea:	70 e0       	ldi	r23, 0x00	; 0
 3ec:	4a d2       	rcall	.+1172   	; 0x882 <_ZN4PortC1EPVhS1_S1_h>
	Port *d4 = new Port(&PORTB, &DDRB, &PINB, 3);
 3ee:	87 e0       	ldi	r24, 0x07	; 7
 3f0:	90 e0       	ldi	r25, 0x00	; 0
 3f2:	7b d2       	rcall	.+1270   	; 0x8ea <_ZN4PortnwEj>
 3f4:	9a 83       	std	Y+2, r25	; 0x02
 3f6:	89 83       	std	Y+1, r24	; 0x01
 3f8:	03 e0       	ldi	r16, 0x03	; 3
 3fa:	26 e3       	ldi	r18, 0x36	; 54
 3fc:	30 e0       	ldi	r19, 0x00	; 0
 3fe:	47 e3       	ldi	r20, 0x37	; 55
 400:	50 e0       	ldi	r21, 0x00	; 0
 402:	68 e3       	ldi	r22, 0x38	; 56
 404:	70 e0       	ldi	r23, 0x00	; 0
 406:	3d d2       	rcall	.+1146   	; 0x882 <_ZN4PortC1EPVhS1_S1_h>
	Port *d5 = new Port(&PORTB, &DDRB, &PINB, 4);
 408:	87 e0       	ldi	r24, 0x07	; 7
 40a:	90 e0       	ldi	r25, 0x00	; 0
 40c:	6e d2       	rcall	.+1244   	; 0x8ea <_ZN4PortnwEj>
 40e:	7c 01       	movw	r14, r24
 410:	04 e0       	ldi	r16, 0x04	; 4
 412:	26 e3       	ldi	r18, 0x36	; 54
 414:	30 e0       	ldi	r19, 0x00	; 0
 416:	47 e3       	ldi	r20, 0x37	; 55
 418:	50 e0       	ldi	r21, 0x00	; 0
 41a:	68 e3       	ldi	r22, 0x38	; 56
 41c:	70 e0       	ldi	r23, 0x00	; 0
 41e:	31 d2       	rcall	.+1122   	; 0x882 <_ZN4PortC1EPVhS1_S1_h>
	Port *d6 = new Port(&PORTB, &DDRB, &PINB, 5);
 420:	87 e0       	ldi	r24, 0x07	; 7
 422:	90 e0       	ldi	r25, 0x00	; 0
 424:	62 d2       	rcall	.+1220   	; 0x8ea <_ZN4PortnwEj>
 426:	6c 01       	movw	r12, r24
 428:	05 e0       	ldi	r16, 0x05	; 5
 42a:	26 e3       	ldi	r18, 0x36	; 54
 42c:	30 e0       	ldi	r19, 0x00	; 0
 42e:	47 e3       	ldi	r20, 0x37	; 55
 430:	50 e0       	ldi	r21, 0x00	; 0
 432:	68 e3       	ldi	r22, 0x38	; 56
 434:	70 e0       	ldi	r23, 0x00	; 0
 436:	25 d2       	rcall	.+1098   	; 0x882 <_ZN4PortC1EPVhS1_S1_h>
	Port *d7 = new Port(&PORTB, &DDRB, &PINB, 6);
 438:	87 e0       	ldi	r24, 0x07	; 7
 43a:	90 e0       	ldi	r25, 0x00	; 0
 43c:	56 d2       	rcall	.+1196   	; 0x8ea <_ZN4PortnwEj>
 43e:	5c 01       	movw	r10, r24
 440:	06 e0       	ldi	r16, 0x06	; 6
 442:	26 e3       	ldi	r18, 0x36	; 54
 444:	30 e0       	ldi	r19, 0x00	; 0
 446:	47 e3       	ldi	r20, 0x37	; 55
 448:	50 e0       	ldi	r21, 0x00	; 0
 44a:	68 e3       	ldi	r22, 0x38	; 56
 44c:	70 e0       	ldi	r23, 0x00	; 0
 44e:	19 d2       	rcall	.+1074   	; 0x882 <_ZN4PortC1EPVhS1_S1_h>
	
	HD44780 *lcd = new HD44780(rs, rw, e, d4, d5, d6, d7, 16);
 450:	8f e0       	ldi	r24, 0x0F	; 15
 452:	90 e0       	ldi	r25, 0x00	; 0
 454:	7f df       	rcall	.-258    	; 0x354 <_ZN7HD44780nwEj>
 456:	9c 83       	std	Y+4, r25	; 0x04
 458:	8b 83       	std	Y+3, r24	; 0x03
 45a:	68 94       	set
 45c:	88 24       	eor	r8, r8
 45e:	84 f8       	bld	r8, 4
 460:	09 81       	ldd	r16, Y+1	; 0x01
 462:	1a 81       	ldd	r17, Y+2	; 0x02
 464:	91 01       	movw	r18, r2
 466:	a2 01       	movw	r20, r4
 468:	b3 01       	movw	r22, r6
 46a:	cd de       	rcall	.-614    	; 0x206 <_ZN7HD44780C1EP4PortS1_S1_S1_S1_S1_S1_h>
	
	Port *r0 = new Port(&PORTD, &DDRD, &PIND, 0);
 46c:	87 e0       	ldi	r24, 0x07	; 7
 46e:	90 e0       	ldi	r25, 0x00	; 0
 470:	3c d2       	rcall	.+1144   	; 0x8ea <_ZN4PortnwEj>
 472:	3c 01       	movw	r6, r24
 474:	00 e0       	ldi	r16, 0x00	; 0
 476:	20 e3       	ldi	r18, 0x30	; 48
 478:	30 e0       	ldi	r19, 0x00	; 0
 47a:	41 e3       	ldi	r20, 0x31	; 49
 47c:	50 e0       	ldi	r21, 0x00	; 0
 47e:	62 e3       	ldi	r22, 0x32	; 50
 480:	70 e0       	ldi	r23, 0x00	; 0
 482:	ff d1       	rcall	.+1022   	; 0x882 <_ZN4PortC1EPVhS1_S1_h>
	Port *r1 = new Port(&PORTD, &DDRD, &PIND, 1);
 484:	87 e0       	ldi	r24, 0x07	; 7
 486:	90 e0       	ldi	r25, 0x00	; 0
 488:	30 d2       	rcall	.+1120   	; 0x8ea <_ZN4PortnwEj>
 48a:	2c 01       	movw	r4, r24
 48c:	01 e0       	ldi	r16, 0x01	; 1
 48e:	20 e3       	ldi	r18, 0x30	; 48
 490:	30 e0       	ldi	r19, 0x00	; 0
 492:	41 e3       	ldi	r20, 0x31	; 49
 494:	50 e0       	ldi	r21, 0x00	; 0
 496:	62 e3       	ldi	r22, 0x32	; 50
 498:	70 e0       	ldi	r23, 0x00	; 0
 49a:	f3 d1       	rcall	.+998    	; 0x882 <_ZN4PortC1EPVhS1_S1_h>
	Port *r2 = new Port(&PORTD, &DDRD, &PIND, 2);
 49c:	87 e0       	ldi	r24, 0x07	; 7
 49e:	90 e0       	ldi	r25, 0x00	; 0
 4a0:	24 d2       	rcall	.+1096   	; 0x8ea <_ZN4PortnwEj>
 4a2:	1c 01       	movw	r2, r24
 4a4:	02 e0       	ldi	r16, 0x02	; 2
 4a6:	20 e3       	ldi	r18, 0x30	; 48
 4a8:	30 e0       	ldi	r19, 0x00	; 0
 4aa:	41 e3       	ldi	r20, 0x31	; 49
 4ac:	50 e0       	ldi	r21, 0x00	; 0
 4ae:	62 e3       	ldi	r22, 0x32	; 50
 4b0:	70 e0       	ldi	r23, 0x00	; 0
 4b2:	e7 d1       	rcall	.+974    	; 0x882 <_ZN4PortC1EPVhS1_S1_h>
	Port *r3 = new Port(&PORTD, &DDRD, &PIND, 3);
 4b4:	87 e0       	ldi	r24, 0x07	; 7
 4b6:	90 e0       	ldi	r25, 0x00	; 0
 4b8:	18 d2       	rcall	.+1072   	; 0x8ea <_ZN4PortnwEj>
 4ba:	9a 83       	std	Y+2, r25	; 0x02
 4bc:	89 83       	std	Y+1, r24	; 0x01
 4be:	03 e0       	ldi	r16, 0x03	; 3
 4c0:	20 e3       	ldi	r18, 0x30	; 48
 4c2:	30 e0       	ldi	r19, 0x00	; 0
 4c4:	41 e3       	ldi	r20, 0x31	; 49
 4c6:	50 e0       	ldi	r21, 0x00	; 0
 4c8:	62 e3       	ldi	r22, 0x32	; 50
 4ca:	70 e0       	ldi	r23, 0x00	; 0
 4cc:	da d1       	rcall	.+948    	; 0x882 <_ZN4PortC1EPVhS1_S1_h>
	
	Port *c0 = new Port(&PORTD, &DDRD, &PIND, 4);
 4ce:	87 e0       	ldi	r24, 0x07	; 7
 4d0:	90 e0       	ldi	r25, 0x00	; 0
 4d2:	0b d2       	rcall	.+1046   	; 0x8ea <_ZN4PortnwEj>
 4d4:	7c 01       	movw	r14, r24
 4d6:	04 e0       	ldi	r16, 0x04	; 4
 4d8:	20 e3       	ldi	r18, 0x30	; 48
 4da:	30 e0       	ldi	r19, 0x00	; 0
 4dc:	41 e3       	ldi	r20, 0x31	; 49
 4de:	50 e0       	ldi	r21, 0x00	; 0
 4e0:	62 e3       	ldi	r22, 0x32	; 50
 4e2:	70 e0       	ldi	r23, 0x00	; 0
 4e4:	ce d1       	rcall	.+924    	; 0x882 <_ZN4PortC1EPVhS1_S1_h>
	Port *c1 = new Port(&PORTD, &DDRD, &PIND, 5);
 4e6:	87 e0       	ldi	r24, 0x07	; 7
 4e8:	90 e0       	ldi	r25, 0x00	; 0
 4ea:	ff d1       	rcall	.+1022   	; 0x8ea <_ZN4PortnwEj>
 4ec:	6c 01       	movw	r12, r24
 4ee:	05 e0       	ldi	r16, 0x05	; 5
 4f0:	20 e3       	ldi	r18, 0x30	; 48
 4f2:	30 e0       	ldi	r19, 0x00	; 0
 4f4:	41 e3       	ldi	r20, 0x31	; 49
 4f6:	50 e0       	ldi	r21, 0x00	; 0
 4f8:	62 e3       	ldi	r22, 0x32	; 50
 4fa:	70 e0       	ldi	r23, 0x00	; 0
 4fc:	c2 d1       	rcall	.+900    	; 0x882 <_ZN4PortC1EPVhS1_S1_h>
	Port *c2 = new Port(&PORTD, &DDRD, &PIND, 6);
 4fe:	87 e0       	ldi	r24, 0x07	; 7
 500:	90 e0       	ldi	r25, 0x00	; 0
 502:	f3 d1       	rcall	.+998    	; 0x8ea <_ZN4PortnwEj>
 504:	5c 01       	movw	r10, r24
 506:	06 e0       	ldi	r16, 0x06	; 6
 508:	20 e3       	ldi	r18, 0x30	; 48
 50a:	30 e0       	ldi	r19, 0x00	; 0
 50c:	41 e3       	ldi	r20, 0x31	; 49
 50e:	50 e0       	ldi	r21, 0x00	; 0
 510:	62 e3       	ldi	r22, 0x32	; 50
 512:	70 e0       	ldi	r23, 0x00	; 0
 514:	b6 d1       	rcall	.+876    	; 0x882 <_ZN4PortC1EPVhS1_S1_h>
	
	MatrixKeyboard *keyb = new MatrixKeyboard(r0, r1, r2, r3, c0, c1, c2);
 516:	83 e1       	ldi	r24, 0x13	; 19
 518:	90 e0       	ldi	r25, 0x00	; 0
 51a:	5b d1       	rcall	.+694    	; 0x7d2 <_ZN14MatrixKeyboardnwEj>
 51c:	4c 01       	movw	r8, r24
 51e:	09 81       	ldd	r16, Y+1	; 0x01
 520:	1a 81       	ldd	r17, Y+2	; 0x02
 522:	91 01       	movw	r18, r2
 524:	a2 01       	movw	r20, r4
 526:	b3 01       	movw	r22, r6
 528:	8d d0       	rcall	.+282    	; 0x644 <_ZN14MatrixKeyboardC1EP4PortS1_S1_S1_S1_S1_S1_>
	
	sei();
 52a:	78 94       	sei
	
    /* Replace with your application code */
    while (1) 
    {
		if(allowCheckKeyboard == true)
 52c:	80 91 7e 00 	lds	r24, 0x007E	; 0x80007e <__data_end>
 530:	88 23       	and	r24, r24
 532:	e1 f3       	breq	.-8      	; 0x52c <__stack+0xcd>
		{
			allowCheckKeyboard = false;
 534:	10 92 7e 00 	sts	0x007E, r1	; 0x80007e <__data_end>
			
			uint8_t bl = keyb->GetPressedButton();
 538:	c4 01       	movw	r24, r8
 53a:	3f d1       	rcall	.+638    	; 0x7ba <_ZN14MatrixKeyboard16GetPressedButtonEv>
 53c:	18 2f       	mov	r17, r24
			
			if(bl < ButtonsNum)
 53e:	8c 30       	cpi	r24, 0x0C	; 12
 540:	a8 f7       	brcc	.-22     	; 0x52c <__stack+0xcd>
			{
				lcd->Clear();
 542:	8b 81       	ldd	r24, Y+3	; 0x03
 544:	9c 81       	ldd	r25, Y+4	; 0x04
 546:	5b de       	rcall	.-842    	; 0x1fe <_ZN7HD447805ClearEv>
				
				switch((ButtonsLayout)bl)
 548:	e1 2f       	mov	r30, r17
 54a:	f0 e0       	ldi	r31, 0x00	; 0
 54c:	ec 30       	cpi	r30, 0x0C	; 12
 54e:	f1 05       	cpc	r31, r1
 550:	68 f7       	brcc	.-38     	; 0x52c <__stack+0xcd>
 552:	ed 5e       	subi	r30, 0xED	; 237
 554:	ff 4f       	sbci	r31, 0xFF	; 255
 556:	09 94       	ijmp
				{
					case D0: lcd->PrintText("0", 0, 0); break;
 558:	20 e0       	ldi	r18, 0x00	; 0
 55a:	40 e0       	ldi	r20, 0x00	; 0
 55c:	66 e6       	ldi	r22, 0x66	; 102
 55e:	70 e0       	ldi	r23, 0x00	; 0
 560:	8b 81       	ldd	r24, Y+3	; 0x03
 562:	9c 81       	ldd	r25, Y+4	; 0x04
 564:	e1 de       	rcall	.-574    	; 0x328 <_ZN7HD447809PrintTextEPKchh>
 566:	e2 cf       	rjmp	.-60     	; 0x52c <__stack+0xcd>
					case D1: lcd->PrintText("1", 0, 0); break;
 568:	20 e0       	ldi	r18, 0x00	; 0
 56a:	40 e0       	ldi	r20, 0x00	; 0
 56c:	68 e6       	ldi	r22, 0x68	; 104
 56e:	70 e0       	ldi	r23, 0x00	; 0
 570:	8b 81       	ldd	r24, Y+3	; 0x03
 572:	9c 81       	ldd	r25, Y+4	; 0x04
 574:	d9 de       	rcall	.-590    	; 0x328 <_ZN7HD447809PrintTextEPKchh>
 576:	da cf       	rjmp	.-76     	; 0x52c <__stack+0xcd>
					case D2: lcd->PrintText("2", 0, 0); break;
 578:	20 e0       	ldi	r18, 0x00	; 0
 57a:	40 e0       	ldi	r20, 0x00	; 0
 57c:	6a e6       	ldi	r22, 0x6A	; 106
 57e:	70 e0       	ldi	r23, 0x00	; 0
 580:	8b 81       	ldd	r24, Y+3	; 0x03
 582:	9c 81       	ldd	r25, Y+4	; 0x04
 584:	d1 de       	rcall	.-606    	; 0x328 <_ZN7HD447809PrintTextEPKchh>
 586:	d2 cf       	rjmp	.-92     	; 0x52c <__stack+0xcd>
					case D3: lcd->PrintText("3", 0, 0); break;
 588:	20 e0       	ldi	r18, 0x00	; 0
 58a:	40 e0       	ldi	r20, 0x00	; 0
 58c:	6c e6       	ldi	r22, 0x6C	; 108
 58e:	70 e0       	ldi	r23, 0x00	; 0
 590:	8b 81       	ldd	r24, Y+3	; 0x03
 592:	9c 81       	ldd	r25, Y+4	; 0x04
 594:	c9 de       	rcall	.-622    	; 0x328 <_ZN7HD447809PrintTextEPKchh>
 596:	ca cf       	rjmp	.-108    	; 0x52c <__stack+0xcd>
					case D4: lcd->PrintText("4", 0, 0); break;
 598:	20 e0       	ldi	r18, 0x00	; 0
 59a:	40 e0       	ldi	r20, 0x00	; 0
 59c:	6e e6       	ldi	r22, 0x6E	; 110
 59e:	70 e0       	ldi	r23, 0x00	; 0
 5a0:	8b 81       	ldd	r24, Y+3	; 0x03
 5a2:	9c 81       	ldd	r25, Y+4	; 0x04
 5a4:	c1 de       	rcall	.-638    	; 0x328 <_ZN7HD447809PrintTextEPKchh>
 5a6:	c2 cf       	rjmp	.-124    	; 0x52c <__stack+0xcd>
					case D5: lcd->PrintText("5", 0, 0); break;
 5a8:	20 e0       	ldi	r18, 0x00	; 0
 5aa:	40 e0       	ldi	r20, 0x00	; 0
 5ac:	60 e7       	ldi	r22, 0x70	; 112
 5ae:	70 e0       	ldi	r23, 0x00	; 0
 5b0:	8b 81       	ldd	r24, Y+3	; 0x03
 5b2:	9c 81       	ldd	r25, Y+4	; 0x04
 5b4:	b9 de       	rcall	.-654    	; 0x328 <_ZN7HD447809PrintTextEPKchh>
 5b6:	ba cf       	rjmp	.-140    	; 0x52c <__stack+0xcd>
					case D6: lcd->PrintText("6", 0, 0); break;
 5b8:	20 e0       	ldi	r18, 0x00	; 0
 5ba:	40 e0       	ldi	r20, 0x00	; 0
 5bc:	62 e7       	ldi	r22, 0x72	; 114
 5be:	70 e0       	ldi	r23, 0x00	; 0
 5c0:	8b 81       	ldd	r24, Y+3	; 0x03
 5c2:	9c 81       	ldd	r25, Y+4	; 0x04
 5c4:	b1 de       	rcall	.-670    	; 0x328 <_ZN7HD447809PrintTextEPKchh>
 5c6:	b2 cf       	rjmp	.-156    	; 0x52c <__stack+0xcd>
					case D7: lcd->PrintText("7", 0, 0); break;
 5c8:	20 e0       	ldi	r18, 0x00	; 0
 5ca:	40 e0       	ldi	r20, 0x00	; 0
 5cc:	64 e7       	ldi	r22, 0x74	; 116
 5ce:	70 e0       	ldi	r23, 0x00	; 0
 5d0:	8b 81       	ldd	r24, Y+3	; 0x03
 5d2:	9c 81       	ldd	r25, Y+4	; 0x04
 5d4:	a9 de       	rcall	.-686    	; 0x328 <_ZN7HD447809PrintTextEPKchh>
 5d6:	aa cf       	rjmp	.-172    	; 0x52c <__stack+0xcd>
					case D8: lcd->PrintText("8", 0, 0); break;
 5d8:	20 e0       	ldi	r18, 0x00	; 0
 5da:	40 e0       	ldi	r20, 0x00	; 0
 5dc:	66 e7       	ldi	r22, 0x76	; 118
 5de:	70 e0       	ldi	r23, 0x00	; 0
 5e0:	8b 81       	ldd	r24, Y+3	; 0x03
 5e2:	9c 81       	ldd	r25, Y+4	; 0x04
 5e4:	a1 de       	rcall	.-702    	; 0x328 <_ZN7HD447809PrintTextEPKchh>
 5e6:	a2 cf       	rjmp	.-188    	; 0x52c <__stack+0xcd>
					case D9: lcd->PrintText("9", 0, 0); break;
 5e8:	20 e0       	ldi	r18, 0x00	; 0
 5ea:	40 e0       	ldi	r20, 0x00	; 0
 5ec:	68 e7       	ldi	r22, 0x78	; 120
 5ee:	70 e0       	ldi	r23, 0x00	; 0
 5f0:	8b 81       	ldd	r24, Y+3	; 0x03
 5f2:	9c 81       	ldd	r25, Y+4	; 0x04
 5f4:	99 de       	rcall	.-718    	; 0x328 <_ZN7HD447809PrintTextEPKchh>
 5f6:	9a cf       	rjmp	.-204    	; 0x52c <__stack+0xcd>
					case STAR: lcd->PrintText("*", 0, 0); break;
 5f8:	20 e0       	ldi	r18, 0x00	; 0
 5fa:	40 e0       	ldi	r20, 0x00	; 0
 5fc:	6a e7       	ldi	r22, 0x7A	; 122
 5fe:	70 e0       	ldi	r23, 0x00	; 0
 600:	8b 81       	ldd	r24, Y+3	; 0x03
 602:	9c 81       	ldd	r25, Y+4	; 0x04
 604:	91 de       	rcall	.-734    	; 0x328 <_ZN7HD447809PrintTextEPKchh>
 606:	92 cf       	rjmp	.-220    	; 0x52c <__stack+0xcd>
					case HASH: lcd->PrintText("#", 0, 0); break;
 608:	20 e0       	ldi	r18, 0x00	; 0
 60a:	40 e0       	ldi	r20, 0x00	; 0
 60c:	6c e7       	ldi	r22, 0x7C	; 124
 60e:	70 e0       	ldi	r23, 0x00	; 0
 610:	8b 81       	ldd	r24, Y+3	; 0x03
 612:	9c 81       	ldd	r25, Y+4	; 0x04
 614:	89 de       	rcall	.-750    	; 0x328 <_ZN7HD447809PrintTextEPKchh>
 616:	8a cf       	rjmp	.-236    	; 0x52c <__stack+0xcd>

00000618 <_ZN14MatrixKeyboard7SetRowsEv>:
	
	for(uint8_t i = 0; i < ColumnsNum; i++)
	{
		delete Columns[i];
	}
}
 618:	0f 93       	push	r16
 61a:	1f 93       	push	r17
 61c:	cf 93       	push	r28
 61e:	8c 01       	movw	r16, r24
 620:	c0 e0       	ldi	r28, 0x00	; 0
 622:	c4 30       	cpi	r28, 0x04	; 4
 624:	58 f4       	brcc	.+22     	; 0x63c <_ZN14MatrixKeyboard7SetRowsEv+0x24>
 626:	ec 2f       	mov	r30, r28
 628:	f0 e0       	ldi	r31, 0x00	; 0
 62a:	ee 0f       	add	r30, r30
 62c:	ff 1f       	adc	r31, r31
 62e:	e0 0f       	add	r30, r16
 630:	f1 1f       	adc	r31, r17
 632:	80 81       	ld	r24, Z
 634:	91 81       	ldd	r25, Z+1	; 0x01
 636:	ff d0       	rcall	.+510    	; 0x836 <_ZN4Port3SetEv>
 638:	cf 5f       	subi	r28, 0xFF	; 255
 63a:	f3 cf       	rjmp	.-26     	; 0x622 <_ZN14MatrixKeyboard7SetRowsEv+0xa>
 63c:	cf 91       	pop	r28
 63e:	1f 91       	pop	r17
 640:	0f 91       	pop	r16
 642:	08 95       	ret

00000644 <_ZN14MatrixKeyboardC1EP4PortS1_S1_S1_S1_S1_S1_>:
 644:	af 92       	push	r10
 646:	bf 92       	push	r11
 648:	cf 92       	push	r12
 64a:	df 92       	push	r13
 64c:	ef 92       	push	r14
 64e:	ff 92       	push	r15
 650:	0f 93       	push	r16
 652:	1f 93       	push	r17
 654:	cf 93       	push	r28
 656:	df 93       	push	r29
 658:	ec 01       	movw	r28, r24
 65a:	79 83       	std	Y+1, r23	; 0x01
 65c:	68 83       	st	Y, r22
 65e:	5b 83       	std	Y+3, r21	; 0x03
 660:	4a 83       	std	Y+2, r20	; 0x02
 662:	3d 83       	std	Y+5, r19	; 0x05
 664:	2c 83       	std	Y+4, r18	; 0x04
 666:	1f 83       	std	Y+7, r17	; 0x07
 668:	0e 83       	std	Y+6, r16	; 0x06
 66a:	f9 86       	std	Y+9, r15	; 0x09
 66c:	e8 86       	std	Y+8, r14	; 0x08
 66e:	db 86       	std	Y+11, r13	; 0x0b
 670:	ca 86       	std	Y+10, r12	; 0x0a
 672:	bd 86       	std	Y+13, r11	; 0x0d
 674:	ac 86       	std	Y+12, r10	; 0x0c
 676:	1e 86       	std	Y+14, r1	; 0x0e
 678:	1f 86       	std	Y+15, r1	; 0x0f
 67a:	18 8a       	std	Y+16, r1	; 0x10
 67c:	8c e0       	ldi	r24, 0x0C	; 12
 67e:	89 8b       	std	Y+17, r24	; 0x11
 680:	8a 8b       	std	Y+18, r24	; 0x12
 682:	10 e0       	ldi	r17, 0x00	; 0
 684:	14 30       	cpi	r17, 0x04	; 4
 686:	58 f4       	brcc	.+22     	; 0x69e <_ZN14MatrixKeyboardC1EP4PortS1_S1_S1_S1_S1_S1_+0x5a>
 688:	e1 2f       	mov	r30, r17
 68a:	f0 e0       	ldi	r31, 0x00	; 0
 68c:	ee 0f       	add	r30, r30
 68e:	ff 1f       	adc	r31, r31
 690:	ec 0f       	add	r30, r28
 692:	fd 1f       	adc	r31, r29
 694:	80 81       	ld	r24, Z
 696:	91 81       	ldd	r25, Z+1	; 0x01
 698:	bb d0       	rcall	.+374    	; 0x810 <_ZN4Port11SetAsOutputEv>
 69a:	1f 5f       	subi	r17, 0xFF	; 255
 69c:	f3 cf       	rjmp	.-26     	; 0x684 <_ZN14MatrixKeyboardC1EP4PortS1_S1_S1_S1_S1_S1_+0x40>
 69e:	ce 01       	movw	r24, r28
 6a0:	bb df       	rcall	.-138    	; 0x618 <_ZN14MatrixKeyboard7SetRowsEv>
 6a2:	10 e0       	ldi	r17, 0x00	; 0
 6a4:	13 30       	cpi	r17, 0x03	; 3
 6a6:	60 f4       	brcc	.+24     	; 0x6c0 <_ZN14MatrixKeyboardC1EP4PortS1_S1_S1_S1_S1_S1_+0x7c>
 6a8:	e1 2f       	mov	r30, r17
 6aa:	f0 e0       	ldi	r31, 0x00	; 0
 6ac:	34 96       	adiw	r30, 0x04	; 4
 6ae:	ee 0f       	add	r30, r30
 6b0:	ff 1f       	adc	r31, r31
 6b2:	ec 0f       	add	r30, r28
 6b4:	fd 1f       	adc	r31, r29
 6b6:	80 81       	ld	r24, Z
 6b8:	91 81       	ldd	r25, Z+1	; 0x01
 6ba:	bd d0       	rcall	.+378    	; 0x836 <_ZN4Port3SetEv>
 6bc:	1f 5f       	subi	r17, 0xFF	; 255
 6be:	f2 cf       	rjmp	.-28     	; 0x6a4 <_ZN14MatrixKeyboardC1EP4PortS1_S1_S1_S1_S1_S1_+0x60>
 6c0:	df 91       	pop	r29
 6c2:	cf 91       	pop	r28
 6c4:	1f 91       	pop	r17
 6c6:	0f 91       	pop	r16
 6c8:	ff 90       	pop	r15
 6ca:	ef 90       	pop	r14
 6cc:	df 90       	pop	r13
 6ce:	cf 90       	pop	r12
 6d0:	bf 90       	pop	r11
 6d2:	af 90       	pop	r10
 6d4:	08 95       	ret

000006d6 <_ZN14MatrixKeyboard19SearchPressedButtonEh>:
 6d6:	ff 92       	push	r15
 6d8:	0f 93       	push	r16
 6da:	1f 93       	push	r17
 6dc:	cf 93       	push	r28
 6de:	df 93       	push	r29
 6e0:	8c 01       	movw	r16, r24
 6e2:	f6 2e       	mov	r15, r22
 6e4:	c0 e0       	ldi	r28, 0x00	; 0
 6e6:	c3 30       	cpi	r28, 0x03	; 3
 6e8:	70 f4       	brcc	.+28     	; 0x706 <_ZN14MatrixKeyboard19SearchPressedButtonEh+0x30>
 6ea:	ec 2f       	mov	r30, r28
 6ec:	f0 e0       	ldi	r31, 0x00	; 0
 6ee:	34 96       	adiw	r30, 0x04	; 4
 6f0:	ee 0f       	add	r30, r30
 6f2:	ff 1f       	adc	r31, r31
 6f4:	e0 0f       	add	r30, r16
 6f6:	f1 1f       	adc	r31, r17
 6f8:	80 81       	ld	r24, Z
 6fa:	91 81       	ldd	r25, Z+1	; 0x01
 6fc:	e6 d0       	rcall	.+460    	; 0x8ca <_ZN4Port7IsClearEv>
 6fe:	81 11       	cpse	r24, r1
 700:	04 c0       	rjmp	.+8      	; 0x70a <_ZN14MatrixKeyboard19SearchPressedButtonEh+0x34>
 702:	cf 5f       	subi	r28, 0xFF	; 255
 704:	f0 cf       	rjmp	.-32     	; 0x6e6 <_ZN14MatrixKeyboard19SearchPressedButtonEh+0x10>
 706:	80 e0       	ldi	r24, 0x00	; 0
 708:	02 c0       	rjmp	.+4      	; 0x70e <_ZN14MatrixKeyboard19SearchPressedButtonEh+0x38>
 70a:	dc 2f       	mov	r29, r28
 70c:	81 e0       	ldi	r24, 0x01	; 1
 70e:	88 23       	and	r24, r24
 710:	29 f0       	breq	.+10     	; 0x71c <_ZN14MatrixKeyboard19SearchPressedButtonEh+0x46>
 712:	8f 2d       	mov	r24, r15
 714:	88 0f       	add	r24, r24
 716:	8f 0d       	add	r24, r15
 718:	8d 0f       	add	r24, r29
 71a:	01 c0       	rjmp	.+2      	; 0x71e <_ZN14MatrixKeyboard19SearchPressedButtonEh+0x48>
 71c:	8c e0       	ldi	r24, 0x0C	; 12
 71e:	df 91       	pop	r29
 720:	cf 91       	pop	r28
 722:	1f 91       	pop	r17
 724:	0f 91       	pop	r16
 726:	ff 90       	pop	r15
 728:	08 95       	ret

0000072a <_ZN14MatrixKeyboard15ButtonIsPressedEv>:
 72a:	1f 93       	push	r17
 72c:	cf 93       	push	r28
 72e:	df 93       	push	r29
 730:	ec 01       	movw	r28, r24
 732:	10 e0       	ldi	r17, 0x00	; 0
 734:	14 30       	cpi	r17, 0x04	; 4
 736:	a0 f4       	brcc	.+40     	; 0x760 <_ZN14MatrixKeyboard15ButtonIsPressedEv+0x36>
 738:	e1 2f       	mov	r30, r17
 73a:	f0 e0       	ldi	r31, 0x00	; 0
 73c:	ee 0f       	add	r30, r30
 73e:	ff 1f       	adc	r31, r31
 740:	ec 0f       	add	r30, r28
 742:	fd 1f       	adc	r31, r29
 744:	80 81       	ld	r24, Z
 746:	91 81       	ldd	r25, Z+1	; 0x01
 748:	88 d0       	rcall	.+272    	; 0x85a <_ZN4Port5ClearEv>
 74a:	61 2f       	mov	r22, r17
 74c:	ce 01       	movw	r24, r28
 74e:	c3 df       	rcall	.-122    	; 0x6d6 <_ZN14MatrixKeyboard19SearchPressedButtonEh>
 750:	89 8b       	std	Y+17, r24	; 0x11
 752:	ce 01       	movw	r24, r28
 754:	61 df       	rcall	.-318    	; 0x618 <_ZN14MatrixKeyboard7SetRowsEv>
 756:	89 89       	ldd	r24, Y+17	; 0x11
 758:	8c 30       	cpi	r24, 0x0C	; 12
 75a:	10 f0       	brcs	.+4      	; 0x760 <_ZN14MatrixKeyboard15ButtonIsPressedEv+0x36>
 75c:	1f 5f       	subi	r17, 0xFF	; 255
 75e:	ea cf       	rjmp	.-44     	; 0x734 <_ZN14MatrixKeyboard15ButtonIsPressedEv+0xa>
 760:	99 89       	ldd	r25, Y+17	; 0x11
 762:	9c 30       	cpi	r25, 0x0C	; 12
 764:	88 f4       	brcc	.+34     	; 0x788 <_ZN14MatrixKeyboard15ButtonIsPressedEv+0x5e>
 766:	88 89       	ldd	r24, Y+16	; 0x10
 768:	81 11       	cpse	r24, r1
 76a:	20 c0       	rjmp	.+64     	; 0x7ac <_ZN14MatrixKeyboard15ButtonIsPressedEv+0x82>
 76c:	2a 89       	ldd	r18, Y+18	; 0x12
 76e:	92 13       	cpse	r25, r18
 770:	08 c0       	rjmp	.+16     	; 0x782 <_ZN14MatrixKeyboard15ButtonIsPressedEv+0x58>
 772:	9e 85       	ldd	r25, Y+14	; 0x0e
 774:	9f 5f       	subi	r25, 0xFF	; 255
 776:	9e 87       	std	Y+14, r25	; 0x0e
 778:	96 30       	cpi	r25, 0x06	; 6
 77a:	d8 f0       	brcs	.+54     	; 0x7b2 <_ZN14MatrixKeyboard15ButtonIsPressedEv+0x88>
 77c:	81 e0       	ldi	r24, 0x01	; 1
 77e:	88 8b       	std	Y+16, r24	; 0x10
 780:	18 c0       	rjmp	.+48     	; 0x7b2 <_ZN14MatrixKeyboard15ButtonIsPressedEv+0x88>
 782:	9a 8b       	std	Y+18, r25	; 0x12
 784:	1e 86       	std	Y+14, r1	; 0x0e
 786:	15 c0       	rjmp	.+42     	; 0x7b2 <_ZN14MatrixKeyboard15ButtonIsPressedEv+0x88>
 788:	88 89       	ldd	r24, Y+16	; 0x10
 78a:	88 23       	and	r24, r24
 78c:	91 f0       	breq	.+36     	; 0x7b2 <_ZN14MatrixKeyboard15ButtonIsPressedEv+0x88>
 78e:	8e 85       	ldd	r24, Y+14	; 0x0e
 790:	86 30       	cpi	r24, 0x06	; 6
 792:	70 f0       	brcs	.+28     	; 0x7b0 <_ZN14MatrixKeyboard15ButtonIsPressedEv+0x86>
 794:	8f 85       	ldd	r24, Y+15	; 0x0f
 796:	86 30       	cpi	r24, 0x06	; 6
 798:	28 f0       	brcs	.+10     	; 0x7a4 <_ZN14MatrixKeyboard15ButtonIsPressedEv+0x7a>
 79a:	1e 86       	std	Y+14, r1	; 0x0e
 79c:	1f 86       	std	Y+15, r1	; 0x0f
 79e:	18 8a       	std	Y+16, r1	; 0x10
 7a0:	80 e0       	ldi	r24, 0x00	; 0
 7a2:	07 c0       	rjmp	.+14     	; 0x7b2 <_ZN14MatrixKeyboard15ButtonIsPressedEv+0x88>
 7a4:	8f 5f       	subi	r24, 0xFF	; 255
 7a6:	8f 87       	std	Y+15, r24	; 0x0f
 7a8:	80 e0       	ldi	r24, 0x00	; 0
 7aa:	03 c0       	rjmp	.+6      	; 0x7b2 <_ZN14MatrixKeyboard15ButtonIsPressedEv+0x88>
 7ac:	80 e0       	ldi	r24, 0x00	; 0
 7ae:	01 c0       	rjmp	.+2      	; 0x7b2 <_ZN14MatrixKeyboard15ButtonIsPressedEv+0x88>
 7b0:	80 e0       	ldi	r24, 0x00	; 0
 7b2:	df 91       	pop	r29
 7b4:	cf 91       	pop	r28
 7b6:	1f 91       	pop	r17
 7b8:	08 95       	ret

000007ba <_ZN14MatrixKeyboard16GetPressedButtonEv>:
 7ba:	cf 93       	push	r28
 7bc:	df 93       	push	r29
 7be:	ec 01       	movw	r28, r24
 7c0:	b4 df       	rcall	.-152    	; 0x72a <_ZN14MatrixKeyboard15ButtonIsPressedEv>
 7c2:	88 23       	and	r24, r24
 7c4:	11 f0       	breq	.+4      	; 0x7ca <_ZN14MatrixKeyboard16GetPressedButtonEv+0x10>
 7c6:	8a 89       	ldd	r24, Y+18	; 0x12
 7c8:	01 c0       	rjmp	.+2      	; 0x7cc <_ZN14MatrixKeyboard16GetPressedButtonEv+0x12>
 7ca:	8c e0       	ldi	r24, 0x0C	; 12
 7cc:	df 91       	pop	r29
 7ce:	cf 91       	pop	r28
 7d0:	08 95       	ret

000007d2 <_ZN14MatrixKeyboardnwEj>:

void* MatrixKeyboard::operator new(size_t size)
{
 7d2:	cf 93       	push	r28
 7d4:	df 93       	push	r29
 7d6:	ec 01       	movw	r28, r24
	void* ptr;
	do
	{
		ptr = malloc(size);
 7d8:	ce 01       	movw	r24, r28
 7da:	91 d0       	rcall	.+290    	; 0x8fe <malloc>
	}while(ptr == nullptr);
 7dc:	00 97       	sbiw	r24, 0x00	; 0
 7de:	e1 f3       	breq	.-8      	; 0x7d8 <_ZN14MatrixKeyboardnwEj+0x6>
	
	return ptr;
}
 7e0:	df 91       	pop	r29
 7e2:	cf 91       	pop	r28
 7e4:	08 95       	ret

000007e6 <_ZN4Port10SetAsInputEv>:
bool Port::IsClear()
{
	return !(*this->PIN & (1<<this->pinNum));
}

Port::~Port(){}
 7e6:	dc 01       	movw	r26, r24
 7e8:	12 96       	adiw	r26, 0x02	; 2
 7ea:	ed 91       	ld	r30, X+
 7ec:	fc 91       	ld	r31, X
 7ee:	13 97       	sbiw	r26, 0x03	; 3
 7f0:	40 81       	ld	r20, Z
 7f2:	21 e0       	ldi	r18, 0x01	; 1
 7f4:	30 e0       	ldi	r19, 0x00	; 0
 7f6:	b9 01       	movw	r22, r18
 7f8:	16 96       	adiw	r26, 0x06	; 6
 7fa:	0c 90       	ld	r0, X
 7fc:	02 c0       	rjmp	.+4      	; 0x802 <_ZN4Port10SetAsInputEv+0x1c>
 7fe:	66 0f       	add	r22, r22
 800:	77 1f       	adc	r23, r23
 802:	0a 94       	dec	r0
 804:	e2 f7       	brpl	.-8      	; 0x7fe <_ZN4Port10SetAsInputEv+0x18>
 806:	cb 01       	movw	r24, r22
 808:	80 95       	com	r24
 80a:	84 23       	and	r24, r20
 80c:	80 83       	st	Z, r24
 80e:	08 95       	ret

00000810 <_ZN4Port11SetAsOutputEv>:
 810:	dc 01       	movw	r26, r24
 812:	12 96       	adiw	r26, 0x02	; 2
 814:	ed 91       	ld	r30, X+
 816:	fc 91       	ld	r31, X
 818:	13 97       	sbiw	r26, 0x03	; 3
 81a:	40 81       	ld	r20, Z
 81c:	21 e0       	ldi	r18, 0x01	; 1
 81e:	30 e0       	ldi	r19, 0x00	; 0
 820:	c9 01       	movw	r24, r18
 822:	16 96       	adiw	r26, 0x06	; 6
 824:	0c 90       	ld	r0, X
 826:	02 c0       	rjmp	.+4      	; 0x82c <_ZN4Port11SetAsOutputEv+0x1c>
 828:	88 0f       	add	r24, r24
 82a:	99 1f       	adc	r25, r25
 82c:	0a 94       	dec	r0
 82e:	e2 f7       	brpl	.-8      	; 0x828 <_ZN4Port11SetAsOutputEv+0x18>
 830:	84 2b       	or	r24, r20
 832:	80 83       	st	Z, r24
 834:	08 95       	ret

00000836 <_ZN4Port3SetEv>:
 836:	dc 01       	movw	r26, r24
 838:	ed 91       	ld	r30, X+
 83a:	fc 91       	ld	r31, X
 83c:	11 97       	sbiw	r26, 0x01	; 1
 83e:	40 81       	ld	r20, Z
 840:	21 e0       	ldi	r18, 0x01	; 1
 842:	30 e0       	ldi	r19, 0x00	; 0
 844:	c9 01       	movw	r24, r18
 846:	16 96       	adiw	r26, 0x06	; 6
 848:	0c 90       	ld	r0, X
 84a:	02 c0       	rjmp	.+4      	; 0x850 <_ZN4Port3SetEv+0x1a>
 84c:	88 0f       	add	r24, r24
 84e:	99 1f       	adc	r25, r25
 850:	0a 94       	dec	r0
 852:	e2 f7       	brpl	.-8      	; 0x84c <_ZN4Port3SetEv+0x16>
 854:	84 2b       	or	r24, r20
 856:	80 83       	st	Z, r24
 858:	08 95       	ret

0000085a <_ZN4Port5ClearEv>:
 85a:	dc 01       	movw	r26, r24
 85c:	ed 91       	ld	r30, X+
 85e:	fc 91       	ld	r31, X
 860:	11 97       	sbiw	r26, 0x01	; 1
 862:	40 81       	ld	r20, Z
 864:	21 e0       	ldi	r18, 0x01	; 1
 866:	30 e0       	ldi	r19, 0x00	; 0
 868:	b9 01       	movw	r22, r18
 86a:	16 96       	adiw	r26, 0x06	; 6
 86c:	0c 90       	ld	r0, X
 86e:	02 c0       	rjmp	.+4      	; 0x874 <_ZN4Port5ClearEv+0x1a>
 870:	66 0f       	add	r22, r22
 872:	77 1f       	adc	r23, r23
 874:	0a 94       	dec	r0
 876:	e2 f7       	brpl	.-8      	; 0x870 <_ZN4Port5ClearEv+0x16>
 878:	cb 01       	movw	r24, r22
 87a:	80 95       	com	r24
 87c:	84 23       	and	r24, r20
 87e:	80 83       	st	Z, r24
 880:	08 95       	ret

00000882 <_ZN4PortC1EPVhS1_S1_h>:
 882:	0f 93       	push	r16
 884:	cf 93       	push	r28
 886:	df 93       	push	r29
 888:	ec 01       	movw	r28, r24
 88a:	79 83       	std	Y+1, r23	; 0x01
 88c:	68 83       	st	Y, r22
 88e:	5b 83       	std	Y+3, r21	; 0x03
 890:	4a 83       	std	Y+2, r20	; 0x02
 892:	3d 83       	std	Y+5, r19	; 0x05
 894:	2c 83       	std	Y+4, r18	; 0x04
 896:	0e 83       	std	Y+6, r16	; 0x06
 898:	a6 df       	rcall	.-180    	; 0x7e6 <_ZN4Port10SetAsInputEv>
 89a:	ce 01       	movw	r24, r28
 89c:	de df       	rcall	.-68     	; 0x85a <_ZN4Port5ClearEv>
 89e:	df 91       	pop	r29
 8a0:	cf 91       	pop	r28
 8a2:	0f 91       	pop	r16
 8a4:	08 95       	ret

000008a6 <_ZN4Port5IsSetEv>:
 8a6:	dc 01       	movw	r26, r24
 8a8:	14 96       	adiw	r26, 0x04	; 4
 8aa:	ed 91       	ld	r30, X+
 8ac:	fc 91       	ld	r31, X
 8ae:	15 97       	sbiw	r26, 0x05	; 5
 8b0:	20 81       	ld	r18, Z
 8b2:	30 e0       	ldi	r19, 0x00	; 0
 8b4:	f9 01       	movw	r30, r18
 8b6:	16 96       	adiw	r26, 0x06	; 6
 8b8:	0c 90       	ld	r0, X
 8ba:	02 c0       	rjmp	.+4      	; 0x8c0 <_ZN4Port5IsSetEv+0x1a>
 8bc:	f5 95       	asr	r31
 8be:	e7 95       	ror	r30
 8c0:	0a 94       	dec	r0
 8c2:	e2 f7       	brpl	.-8      	; 0x8bc <_ZN4Port5IsSetEv+0x16>
 8c4:	cf 01       	movw	r24, r30
 8c6:	81 70       	andi	r24, 0x01	; 1
 8c8:	08 95       	ret

000008ca <_ZN4Port7IsClearEv>:
 8ca:	fc 01       	movw	r30, r24
 8cc:	a4 81       	ldd	r26, Z+4	; 0x04
 8ce:	b5 81       	ldd	r27, Z+5	; 0x05
 8d0:	9c 91       	ld	r25, X
 8d2:	89 2f       	mov	r24, r25
 8d4:	90 e0       	ldi	r25, 0x00	; 0
 8d6:	06 80       	ldd	r0, Z+6	; 0x06
 8d8:	02 c0       	rjmp	.+4      	; 0x8de <_ZN4Port7IsClearEv+0x14>
 8da:	95 95       	asr	r25
 8dc:	87 95       	ror	r24
 8de:	0a 94       	dec	r0
 8e0:	e2 f7       	brpl	.-8      	; 0x8da <_ZN4Port7IsClearEv+0x10>
 8e2:	21 e0       	ldi	r18, 0x01	; 1
 8e4:	82 27       	eor	r24, r18
 8e6:	81 70       	andi	r24, 0x01	; 1
 8e8:	08 95       	ret

000008ea <_ZN4PortnwEj>:

void* Port::operator new(size_t size)
{
 8ea:	cf 93       	push	r28
 8ec:	df 93       	push	r29
 8ee:	ec 01       	movw	r28, r24
	void* ptr;
	do
	{
		ptr = malloc(size);
 8f0:	ce 01       	movw	r24, r28
 8f2:	05 d0       	rcall	.+10     	; 0x8fe <malloc>
	}while(ptr == nullptr);
 8f4:	00 97       	sbiw	r24, 0x00	; 0
 8f6:	e1 f3       	breq	.-8      	; 0x8f0 <_ZN4PortnwEj+0x6>
	
	return ptr;
}
 8f8:	df 91       	pop	r29
 8fa:	cf 91       	pop	r28
 8fc:	08 95       	ret

000008fe <malloc>:
 8fe:	0f 93       	push	r16
 900:	1f 93       	push	r17
 902:	cf 93       	push	r28
 904:	df 93       	push	r29
 906:	82 30       	cpi	r24, 0x02	; 2
 908:	91 05       	cpc	r25, r1
 90a:	10 f4       	brcc	.+4      	; 0x910 <malloc+0x12>
 90c:	82 e0       	ldi	r24, 0x02	; 2
 90e:	90 e0       	ldi	r25, 0x00	; 0
 910:	e0 91 81 00 	lds	r30, 0x0081	; 0x800081 <__flp>
 914:	f0 91 82 00 	lds	r31, 0x0082	; 0x800082 <__flp+0x1>
 918:	20 e0       	ldi	r18, 0x00	; 0
 91a:	30 e0       	ldi	r19, 0x00	; 0
 91c:	a0 e0       	ldi	r26, 0x00	; 0
 91e:	b0 e0       	ldi	r27, 0x00	; 0
 920:	30 97       	sbiw	r30, 0x00	; 0
 922:	19 f1       	breq	.+70     	; 0x96a <malloc+0x6c>
 924:	40 81       	ld	r20, Z
 926:	51 81       	ldd	r21, Z+1	; 0x01
 928:	02 81       	ldd	r16, Z+2	; 0x02
 92a:	13 81       	ldd	r17, Z+3	; 0x03
 92c:	48 17       	cp	r20, r24
 92e:	59 07       	cpc	r21, r25
 930:	c8 f0       	brcs	.+50     	; 0x964 <malloc+0x66>
 932:	84 17       	cp	r24, r20
 934:	95 07       	cpc	r25, r21
 936:	69 f4       	brne	.+26     	; 0x952 <malloc+0x54>
 938:	10 97       	sbiw	r26, 0x00	; 0
 93a:	31 f0       	breq	.+12     	; 0x948 <malloc+0x4a>
 93c:	12 96       	adiw	r26, 0x02	; 2
 93e:	0c 93       	st	X, r16
 940:	12 97       	sbiw	r26, 0x02	; 2
 942:	13 96       	adiw	r26, 0x03	; 3
 944:	1c 93       	st	X, r17
 946:	27 c0       	rjmp	.+78     	; 0x996 <malloc+0x98>
 948:	00 93 81 00 	sts	0x0081, r16	; 0x800081 <__flp>
 94c:	10 93 82 00 	sts	0x0082, r17	; 0x800082 <__flp+0x1>
 950:	22 c0       	rjmp	.+68     	; 0x996 <malloc+0x98>
 952:	21 15       	cp	r18, r1
 954:	31 05       	cpc	r19, r1
 956:	19 f0       	breq	.+6      	; 0x95e <malloc+0x60>
 958:	42 17       	cp	r20, r18
 95a:	53 07       	cpc	r21, r19
 95c:	18 f4       	brcc	.+6      	; 0x964 <malloc+0x66>
 95e:	9a 01       	movw	r18, r20
 960:	bd 01       	movw	r22, r26
 962:	ef 01       	movw	r28, r30
 964:	df 01       	movw	r26, r30
 966:	f8 01       	movw	r30, r16
 968:	db cf       	rjmp	.-74     	; 0x920 <malloc+0x22>
 96a:	21 15       	cp	r18, r1
 96c:	31 05       	cpc	r19, r1
 96e:	f9 f0       	breq	.+62     	; 0x9ae <malloc+0xb0>
 970:	28 1b       	sub	r18, r24
 972:	39 0b       	sbc	r19, r25
 974:	24 30       	cpi	r18, 0x04	; 4
 976:	31 05       	cpc	r19, r1
 978:	80 f4       	brcc	.+32     	; 0x99a <malloc+0x9c>
 97a:	8a 81       	ldd	r24, Y+2	; 0x02
 97c:	9b 81       	ldd	r25, Y+3	; 0x03
 97e:	61 15       	cp	r22, r1
 980:	71 05       	cpc	r23, r1
 982:	21 f0       	breq	.+8      	; 0x98c <malloc+0x8e>
 984:	fb 01       	movw	r30, r22
 986:	93 83       	std	Z+3, r25	; 0x03
 988:	82 83       	std	Z+2, r24	; 0x02
 98a:	04 c0       	rjmp	.+8      	; 0x994 <malloc+0x96>
 98c:	90 93 82 00 	sts	0x0082, r25	; 0x800082 <__flp+0x1>
 990:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__flp>
 994:	fe 01       	movw	r30, r28
 996:	32 96       	adiw	r30, 0x02	; 2
 998:	44 c0       	rjmp	.+136    	; 0xa22 <malloc+0x124>
 99a:	fe 01       	movw	r30, r28
 99c:	e2 0f       	add	r30, r18
 99e:	f3 1f       	adc	r31, r19
 9a0:	81 93       	st	Z+, r24
 9a2:	91 93       	st	Z+, r25
 9a4:	22 50       	subi	r18, 0x02	; 2
 9a6:	31 09       	sbc	r19, r1
 9a8:	39 83       	std	Y+1, r19	; 0x01
 9aa:	28 83       	st	Y, r18
 9ac:	3a c0       	rjmp	.+116    	; 0xa22 <malloc+0x124>
 9ae:	20 91 7f 00 	lds	r18, 0x007F	; 0x80007f <__brkval>
 9b2:	30 91 80 00 	lds	r19, 0x0080	; 0x800080 <__brkval+0x1>
 9b6:	23 2b       	or	r18, r19
 9b8:	41 f4       	brne	.+16     	; 0x9ca <malloc+0xcc>
 9ba:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <__malloc_heap_start>
 9be:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <__malloc_heap_start+0x1>
 9c2:	30 93 80 00 	sts	0x0080, r19	; 0x800080 <__brkval+0x1>
 9c6:	20 93 7f 00 	sts	0x007F, r18	; 0x80007f <__brkval>
 9ca:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 9ce:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 9d2:	21 15       	cp	r18, r1
 9d4:	31 05       	cpc	r19, r1
 9d6:	41 f4       	brne	.+16     	; 0x9e8 <malloc+0xea>
 9d8:	2d b7       	in	r18, 0x3d	; 61
 9da:	3e b7       	in	r19, 0x3e	; 62
 9dc:	40 91 64 00 	lds	r20, 0x0064	; 0x800064 <__malloc_margin>
 9e0:	50 91 65 00 	lds	r21, 0x0065	; 0x800065 <__malloc_margin+0x1>
 9e4:	24 1b       	sub	r18, r20
 9e6:	35 0b       	sbc	r19, r21
 9e8:	e0 91 7f 00 	lds	r30, 0x007F	; 0x80007f <__brkval>
 9ec:	f0 91 80 00 	lds	r31, 0x0080	; 0x800080 <__brkval+0x1>
 9f0:	e2 17       	cp	r30, r18
 9f2:	f3 07       	cpc	r31, r19
 9f4:	a0 f4       	brcc	.+40     	; 0xa1e <malloc+0x120>
 9f6:	2e 1b       	sub	r18, r30
 9f8:	3f 0b       	sbc	r19, r31
 9fa:	28 17       	cp	r18, r24
 9fc:	39 07       	cpc	r19, r25
 9fe:	78 f0       	brcs	.+30     	; 0xa1e <malloc+0x120>
 a00:	ac 01       	movw	r20, r24
 a02:	4e 5f       	subi	r20, 0xFE	; 254
 a04:	5f 4f       	sbci	r21, 0xFF	; 255
 a06:	24 17       	cp	r18, r20
 a08:	35 07       	cpc	r19, r21
 a0a:	48 f0       	brcs	.+18     	; 0xa1e <malloc+0x120>
 a0c:	4e 0f       	add	r20, r30
 a0e:	5f 1f       	adc	r21, r31
 a10:	50 93 80 00 	sts	0x0080, r21	; 0x800080 <__brkval+0x1>
 a14:	40 93 7f 00 	sts	0x007F, r20	; 0x80007f <__brkval>
 a18:	81 93       	st	Z+, r24
 a1a:	91 93       	st	Z+, r25
 a1c:	02 c0       	rjmp	.+4      	; 0xa22 <malloc+0x124>
 a1e:	e0 e0       	ldi	r30, 0x00	; 0
 a20:	f0 e0       	ldi	r31, 0x00	; 0
 a22:	cf 01       	movw	r24, r30
 a24:	df 91       	pop	r29
 a26:	cf 91       	pop	r28
 a28:	1f 91       	pop	r17
 a2a:	0f 91       	pop	r16
 a2c:	08 95       	ret

00000a2e <free>:
 a2e:	cf 93       	push	r28
 a30:	df 93       	push	r29
 a32:	00 97       	sbiw	r24, 0x00	; 0
 a34:	09 f4       	brne	.+2      	; 0xa38 <free+0xa>
 a36:	81 c0       	rjmp	.+258    	; 0xb3a <free+0x10c>
 a38:	fc 01       	movw	r30, r24
 a3a:	32 97       	sbiw	r30, 0x02	; 2
 a3c:	13 82       	std	Z+3, r1	; 0x03
 a3e:	12 82       	std	Z+2, r1	; 0x02
 a40:	a0 91 81 00 	lds	r26, 0x0081	; 0x800081 <__flp>
 a44:	b0 91 82 00 	lds	r27, 0x0082	; 0x800082 <__flp+0x1>
 a48:	10 97       	sbiw	r26, 0x00	; 0
 a4a:	81 f4       	brne	.+32     	; 0xa6c <free+0x3e>
 a4c:	20 81       	ld	r18, Z
 a4e:	31 81       	ldd	r19, Z+1	; 0x01
 a50:	82 0f       	add	r24, r18
 a52:	93 1f       	adc	r25, r19
 a54:	20 91 7f 00 	lds	r18, 0x007F	; 0x80007f <__brkval>
 a58:	30 91 80 00 	lds	r19, 0x0080	; 0x800080 <__brkval+0x1>
 a5c:	28 17       	cp	r18, r24
 a5e:	39 07       	cpc	r19, r25
 a60:	51 f5       	brne	.+84     	; 0xab6 <free+0x88>
 a62:	f0 93 80 00 	sts	0x0080, r31	; 0x800080 <__brkval+0x1>
 a66:	e0 93 7f 00 	sts	0x007F, r30	; 0x80007f <__brkval>
 a6a:	67 c0       	rjmp	.+206    	; 0xb3a <free+0x10c>
 a6c:	ed 01       	movw	r28, r26
 a6e:	20 e0       	ldi	r18, 0x00	; 0
 a70:	30 e0       	ldi	r19, 0x00	; 0
 a72:	ce 17       	cp	r28, r30
 a74:	df 07       	cpc	r29, r31
 a76:	40 f4       	brcc	.+16     	; 0xa88 <free+0x5a>
 a78:	4a 81       	ldd	r20, Y+2	; 0x02
 a7a:	5b 81       	ldd	r21, Y+3	; 0x03
 a7c:	9e 01       	movw	r18, r28
 a7e:	41 15       	cp	r20, r1
 a80:	51 05       	cpc	r21, r1
 a82:	f1 f0       	breq	.+60     	; 0xac0 <free+0x92>
 a84:	ea 01       	movw	r28, r20
 a86:	f5 cf       	rjmp	.-22     	; 0xa72 <free+0x44>
 a88:	d3 83       	std	Z+3, r29	; 0x03
 a8a:	c2 83       	std	Z+2, r28	; 0x02
 a8c:	40 81       	ld	r20, Z
 a8e:	51 81       	ldd	r21, Z+1	; 0x01
 a90:	84 0f       	add	r24, r20
 a92:	95 1f       	adc	r25, r21
 a94:	c8 17       	cp	r28, r24
 a96:	d9 07       	cpc	r29, r25
 a98:	59 f4       	brne	.+22     	; 0xab0 <free+0x82>
 a9a:	88 81       	ld	r24, Y
 a9c:	99 81       	ldd	r25, Y+1	; 0x01
 a9e:	84 0f       	add	r24, r20
 aa0:	95 1f       	adc	r25, r21
 aa2:	02 96       	adiw	r24, 0x02	; 2
 aa4:	91 83       	std	Z+1, r25	; 0x01
 aa6:	80 83       	st	Z, r24
 aa8:	8a 81       	ldd	r24, Y+2	; 0x02
 aaa:	9b 81       	ldd	r25, Y+3	; 0x03
 aac:	93 83       	std	Z+3, r25	; 0x03
 aae:	82 83       	std	Z+2, r24	; 0x02
 ab0:	21 15       	cp	r18, r1
 ab2:	31 05       	cpc	r19, r1
 ab4:	29 f4       	brne	.+10     	; 0xac0 <free+0x92>
 ab6:	f0 93 82 00 	sts	0x0082, r31	; 0x800082 <__flp+0x1>
 aba:	e0 93 81 00 	sts	0x0081, r30	; 0x800081 <__flp>
 abe:	3d c0       	rjmp	.+122    	; 0xb3a <free+0x10c>
 ac0:	e9 01       	movw	r28, r18
 ac2:	fb 83       	std	Y+3, r31	; 0x03
 ac4:	ea 83       	std	Y+2, r30	; 0x02
 ac6:	49 91       	ld	r20, Y+
 ac8:	59 91       	ld	r21, Y+
 aca:	c4 0f       	add	r28, r20
 acc:	d5 1f       	adc	r29, r21
 ace:	ec 17       	cp	r30, r28
 ad0:	fd 07       	cpc	r31, r29
 ad2:	61 f4       	brne	.+24     	; 0xaec <free+0xbe>
 ad4:	80 81       	ld	r24, Z
 ad6:	91 81       	ldd	r25, Z+1	; 0x01
 ad8:	84 0f       	add	r24, r20
 ada:	95 1f       	adc	r25, r21
 adc:	02 96       	adiw	r24, 0x02	; 2
 ade:	e9 01       	movw	r28, r18
 ae0:	99 83       	std	Y+1, r25	; 0x01
 ae2:	88 83       	st	Y, r24
 ae4:	82 81       	ldd	r24, Z+2	; 0x02
 ae6:	93 81       	ldd	r25, Z+3	; 0x03
 ae8:	9b 83       	std	Y+3, r25	; 0x03
 aea:	8a 83       	std	Y+2, r24	; 0x02
 aec:	e0 e0       	ldi	r30, 0x00	; 0
 aee:	f0 e0       	ldi	r31, 0x00	; 0
 af0:	12 96       	adiw	r26, 0x02	; 2
 af2:	8d 91       	ld	r24, X+
 af4:	9c 91       	ld	r25, X
 af6:	13 97       	sbiw	r26, 0x03	; 3
 af8:	00 97       	sbiw	r24, 0x00	; 0
 afa:	19 f0       	breq	.+6      	; 0xb02 <free+0xd4>
 afc:	fd 01       	movw	r30, r26
 afe:	dc 01       	movw	r26, r24
 b00:	f7 cf       	rjmp	.-18     	; 0xaf0 <free+0xc2>
 b02:	8d 91       	ld	r24, X+
 b04:	9c 91       	ld	r25, X
 b06:	11 97       	sbiw	r26, 0x01	; 1
 b08:	9d 01       	movw	r18, r26
 b0a:	2e 5f       	subi	r18, 0xFE	; 254
 b0c:	3f 4f       	sbci	r19, 0xFF	; 255
 b0e:	82 0f       	add	r24, r18
 b10:	93 1f       	adc	r25, r19
 b12:	20 91 7f 00 	lds	r18, 0x007F	; 0x80007f <__brkval>
 b16:	30 91 80 00 	lds	r19, 0x0080	; 0x800080 <__brkval+0x1>
 b1a:	28 17       	cp	r18, r24
 b1c:	39 07       	cpc	r19, r25
 b1e:	69 f4       	brne	.+26     	; 0xb3a <free+0x10c>
 b20:	30 97       	sbiw	r30, 0x00	; 0
 b22:	29 f4       	brne	.+10     	; 0xb2e <free+0x100>
 b24:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__flp+0x1>
 b28:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__flp>
 b2c:	02 c0       	rjmp	.+4      	; 0xb32 <free+0x104>
 b2e:	13 82       	std	Z+3, r1	; 0x03
 b30:	12 82       	std	Z+2, r1	; 0x02
 b32:	b0 93 80 00 	sts	0x0080, r27	; 0x800080 <__brkval+0x1>
 b36:	a0 93 7f 00 	sts	0x007F, r26	; 0x80007f <__brkval>
 b3a:	df 91       	pop	r29
 b3c:	cf 91       	pop	r28
 b3e:	08 95       	ret

00000b40 <_exit>:
 b40:	f8 94       	cli

00000b42 <__stop_program>:
 b42:	ff cf       	rjmp	.-2      	; 0xb42 <__stop_program>
