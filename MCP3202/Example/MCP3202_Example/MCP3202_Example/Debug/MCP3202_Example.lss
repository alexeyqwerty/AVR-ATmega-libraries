
MCP3202_Example.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000155e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  0000155e  000015f2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000009  0080006a  0080006a  000015fc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000015fc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000162c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f0  00000000  00000000  00001668  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003c82  00000000  00000000  00001858  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000012c4  00000000  00000000  000054da  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001363  00000000  00000000  0000679e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000560  00000000  00000000  00007b04  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000c74  00000000  00000000  00008064  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001c4b  00000000  00000000  00008cd8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000190  00000000  00000000  0000a923  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	53 c0       	rjmp	.+166    	; 0xa8 <__ctors_end>
       2:	6d c0       	rjmp	.+218    	; 0xde <__bad_interrupt>
       4:	6c c0       	rjmp	.+216    	; 0xde <__bad_interrupt>
       6:	6b c0       	rjmp	.+214    	; 0xde <__bad_interrupt>
       8:	6a c0       	rjmp	.+212    	; 0xde <__bad_interrupt>
       a:	69 c0       	rjmp	.+210    	; 0xde <__bad_interrupt>
       c:	68 c0       	rjmp	.+208    	; 0xde <__bad_interrupt>
       e:	67 c0       	rjmp	.+206    	; 0xde <__bad_interrupt>
      10:	66 c0       	rjmp	.+204    	; 0xde <__bad_interrupt>
      12:	1c c2       	rjmp	.+1080   	; 0x44c <__vector_9>
      14:	64 c0       	rjmp	.+200    	; 0xde <__bad_interrupt>
      16:	63 c0       	rjmp	.+198    	; 0xde <__bad_interrupt>
      18:	62 c0       	rjmp	.+196    	; 0xde <__bad_interrupt>
      1a:	61 c0       	rjmp	.+194    	; 0xde <__bad_interrupt>
      1c:	60 c0       	rjmp	.+192    	; 0xde <__bad_interrupt>
      1e:	5f c0       	rjmp	.+190    	; 0xde <__bad_interrupt>
      20:	5e c0       	rjmp	.+188    	; 0xde <__bad_interrupt>
      22:	5d c0       	rjmp	.+186    	; 0xde <__bad_interrupt>
      24:	5c c0       	rjmp	.+184    	; 0xde <__bad_interrupt>
      26:	07 63       	ori	r16, 0x37	; 55
      28:	42 36       	cpi	r20, 0x62	; 98
      2a:	b7 9b       	sbis	0x16, 7	; 22
      2c:	d8 a7       	std	Y+40, r29	; 0x28
      2e:	1a 39       	cpi	r17, 0x9A	; 154
      30:	68 56       	subi	r22, 0x68	; 104
      32:	18 ae       	std	Y+56, r1	; 0x38
      34:	ba ab       	std	Y+50, r27	; 0x32
      36:	55 8c       	ldd	r5, Z+29	; 0x1d
      38:	1d 3c       	cpi	r17, 0xCD	; 205
      3a:	b7 cc       	rjmp	.-1682   	; 0xfffff9aa <__eeprom_end+0xff7ef9aa>
      3c:	57 63       	ori	r21, 0x37	; 55
      3e:	bd 6d       	ori	r27, 0xDD	; 221
      40:	ed fd       	.word	0xfded	; ????
      42:	75 3e       	cpi	r23, 0xE5	; 229
      44:	f6 17       	cp	r31, r22
      46:	72 31       	cpi	r23, 0x12	; 18
      48:	bf 00       	.word	0x00bf	; ????
      4a:	00 00       	nop
      4c:	80 3f       	cpi	r24, 0xF0	; 240
      4e:	08 00       	.word	0x0008	; ????
      50:	00 00       	nop
      52:	be 92       	st	-X, r11
      54:	24 49       	sbci	r18, 0x94	; 148
      56:	12 3e       	cpi	r17, 0xE2	; 226
      58:	ab aa       	std	Y+51, r10	; 0x33
      5a:	aa 2a       	or	r10, r26
      5c:	be cd       	rjmp	.-1156   	; 0xfffffbda <__eeprom_end+0xff7efbda>
      5e:	cc cc       	rjmp	.-1640   	; 0xfffff9f8 <__eeprom_end+0xff7ef9f8>
      60:	4c 3e       	cpi	r20, 0xEC	; 236
      62:	00 00       	nop
      64:	00 80       	ld	r0, Z
      66:	be ab       	std	Y+54, r27	; 0x36
      68:	aa aa       	std	Y+50, r10	; 0x32
      6a:	aa 3e       	cpi	r26, 0xEA	; 234
      6c:	00 00       	nop
      6e:	00 00       	nop
      70:	bf 00       	.word	0x00bf	; ????
      72:	00 00       	nop
      74:	80 3f       	cpi	r24, 0xF0	; 240
      76:	00 00       	nop
      78:	00 00       	nop
      7a:	00 08       	sbc	r0, r0
      7c:	41 78       	andi	r20, 0x81	; 129
      7e:	d3 bb       	out	0x13, r29	; 19
      80:	43 87       	std	Z+11, r20	; 0x0b
      82:	d1 13       	cpse	r29, r17
      84:	3d 19       	sub	r19, r13
      86:	0e 3c       	cpi	r16, 0xCE	; 206
      88:	c3 bd       	out	0x23, r28	; 35
      8a:	42 82       	std	Z+2, r4	; 0x02
      8c:	ad 2b       	or	r26, r29
      8e:	3e 68       	ori	r19, 0x8E	; 142
      90:	ec 82       	std	Y+4, r14	; 0x04
      92:	76 be       	out	0x36, r7	; 54
      94:	d9 8f       	std	Y+25, r29	; 0x19
      96:	e1 a9       	ldd	r30, Z+49	; 0x31
      98:	3e 4c       	sbci	r19, 0xCE	; 206
      9a:	80 ef       	ldi	r24, 0xF0	; 240
      9c:	ff be       	out	0x3f, r15	; 63
      9e:	01 c4       	rjmp	.+2050   	; 0x8a2 <_ZN10SPI_Master7SetModeE12SPI_Polarity9SPI_Phase+0x2a>
      a0:	ff 7f       	andi	r31, 0xFF	; 255
      a2:	3f 00       	.word	0x003f	; ????
      a4:	00 00       	nop
	...

000000a8 <__ctors_end>:
      a8:	11 24       	eor	r1, r1
      aa:	1f be       	out	0x3f, r1	; 63
      ac:	cf e5       	ldi	r28, 0x5F	; 95
      ae:	d4 e0       	ldi	r29, 0x04	; 4
      b0:	de bf       	out	0x3e, r29	; 62
      b2:	cd bf       	out	0x3d, r28	; 61

000000b4 <__do_copy_data>:
      b4:	10 e0       	ldi	r17, 0x00	; 0
      b6:	a0 e6       	ldi	r26, 0x60	; 96
      b8:	b0 e0       	ldi	r27, 0x00	; 0
      ba:	ee e5       	ldi	r30, 0x5E	; 94
      bc:	f5 e1       	ldi	r31, 0x15	; 21
      be:	02 c0       	rjmp	.+4      	; 0xc4 <__do_copy_data+0x10>
      c0:	05 90       	lpm	r0, Z+
      c2:	0d 92       	st	X+, r0
      c4:	aa 36       	cpi	r26, 0x6A	; 106
      c6:	b1 07       	cpc	r27, r17
      c8:	d9 f7       	brne	.-10     	; 0xc0 <__do_copy_data+0xc>

000000ca <__do_clear_bss>:
      ca:	20 e0       	ldi	r18, 0x00	; 0
      cc:	aa e6       	ldi	r26, 0x6A	; 106
      ce:	b0 e0       	ldi	r27, 0x00	; 0
      d0:	01 c0       	rjmp	.+2      	; 0xd4 <.do_clear_bss_start>

000000d2 <.do_clear_bss_loop>:
      d2:	1d 92       	st	X+, r1

000000d4 <.do_clear_bss_start>:
      d4:	a3 37       	cpi	r26, 0x73	; 115
      d6:	b2 07       	cpc	r27, r18
      d8:	e1 f7       	brne	.-8      	; 0xd2 <.do_clear_bss_loop>
      da:	eb d1       	rcall	.+982    	; 0x4b2 <main>
      dc:	3e ca       	rjmp	.-2948   	; 0xfffff55a <__eeprom_end+0xff7ef55a>

000000de <__bad_interrupt>:
      de:	90 cf       	rjmp	.-224    	; 0x0 <__vectors>

000000e0 <_ZN7HD4478012SelectDeviceEv>:
	}
	
	PrintText(text, slot, line);
}

HD44780::~HD44780(){}
      e0:	fc 01       	movw	r30, r24
      e2:	84 81       	ldd	r24, Z+4	; 0x04
      e4:	95 81       	ldd	r25, Z+5	; 0x05
      e6:	51 d3       	rcall	.+1698   	; 0x78a <_ZN4Port3SetEv>
      e8:	08 95       	ret

000000ea <_ZN7HD447809LatchDataEv>:
      ea:	fc 01       	movw	r30, r24
      ec:	84 81       	ldd	r24, Z+4	; 0x04
      ee:	95 81       	ldd	r25, Z+5	; 0x05
      f0:	5e d3       	rcall	.+1724   	; 0x7ae <_ZN4Port5ClearEv>
      f2:	08 95       	ret

000000f4 <_ZN7HD447804WaitEv>:
      f4:	ff 92       	push	r15
      f6:	0f 93       	push	r16
      f8:	1f 93       	push	r17
      fa:	cf 93       	push	r28
      fc:	df 93       	push	r29
      fe:	ec 01       	movw	r28, r24
     100:	f1 2c       	mov	r15, r1
     102:	83 e0       	ldi	r24, 0x03	; 3
     104:	8f 15       	cp	r24, r15
     106:	90 f0       	brcs	.+36     	; 0x12c <_ZN7HD447804WaitEv+0x38>
     108:	0f 2d       	mov	r16, r15
     10a:	10 e0       	ldi	r17, 0x00	; 0
     10c:	0d 5f       	subi	r16, 0xFD	; 253
     10e:	1f 4f       	sbci	r17, 0xFF	; 255
     110:	00 0f       	add	r16, r16
     112:	11 1f       	adc	r17, r17
     114:	0c 0f       	add	r16, r28
     116:	1d 1f       	adc	r17, r29
     118:	f8 01       	movw	r30, r16
     11a:	80 81       	ld	r24, Z
     11c:	91 81       	ldd	r25, Z+1	; 0x01
     11e:	35 d3       	rcall	.+1642   	; 0x78a <_ZN4Port3SetEv>
     120:	f8 01       	movw	r30, r16
     122:	80 81       	ld	r24, Z
     124:	91 81       	ldd	r25, Z+1	; 0x01
     126:	09 d3       	rcall	.+1554   	; 0x73a <_ZN4Port10SetAsInputEv>
     128:	f3 94       	inc	r15
     12a:	eb cf       	rjmp	.-42     	; 0x102 <_ZN7HD447804WaitEv+0xe>
     12c:	8a 81       	ldd	r24, Y+2	; 0x02
     12e:	9b 81       	ldd	r25, Y+3	; 0x03
     130:	2c d3       	rcall	.+1624   	; 0x78a <_ZN4Port3SetEv>
     132:	88 81       	ld	r24, Y
     134:	99 81       	ldd	r25, Y+1	; 0x01
     136:	3b d3       	rcall	.+1654   	; 0x7ae <_ZN4Port5ClearEv>
     138:	ce 01       	movw	r24, r28
     13a:	d2 df       	rcall	.-92     	; 0xe0 <_ZN7HD4478012SelectDeviceEv>
     13c:	8c 85       	ldd	r24, Y+12	; 0x0c
     13e:	9d 85       	ldd	r25, Y+13	; 0x0d
     140:	5c d3       	rcall	.+1720   	; 0x7fa <_ZN4Port5IsSetEv>
     142:	18 2f       	mov	r17, r24
     144:	ce 01       	movw	r24, r28
     146:	d1 df       	rcall	.-94     	; 0xea <_ZN7HD447809LatchDataEv>
     148:	ce 01       	movw	r24, r28
     14a:	ca df       	rcall	.-108    	; 0xe0 <_ZN7HD4478012SelectDeviceEv>
     14c:	ce 01       	movw	r24, r28
     14e:	cd df       	rcall	.-102    	; 0xea <_ZN7HD447809LatchDataEv>
     150:	11 11       	cpse	r17, r1
     152:	f2 cf       	rjmp	.-28     	; 0x138 <_ZN7HD447804WaitEv+0x44>
     154:	f1 2c       	mov	r15, r1
     156:	f3 e0       	ldi	r31, 0x03	; 3
     158:	ff 15       	cp	r31, r15
     15a:	90 f0       	brcs	.+36     	; 0x180 <_ZN7HD447804WaitEv+0x8c>
     15c:	0f 2d       	mov	r16, r15
     15e:	10 e0       	ldi	r17, 0x00	; 0
     160:	0d 5f       	subi	r16, 0xFD	; 253
     162:	1f 4f       	sbci	r17, 0xFF	; 255
     164:	00 0f       	add	r16, r16
     166:	11 1f       	adc	r17, r17
     168:	0c 0f       	add	r16, r28
     16a:	1d 1f       	adc	r17, r29
     16c:	f8 01       	movw	r30, r16
     16e:	80 81       	ld	r24, Z
     170:	91 81       	ldd	r25, Z+1	; 0x01
     172:	f8 d2       	rcall	.+1520   	; 0x764 <_ZN4Port11SetAsOutputEv>
     174:	f8 01       	movw	r30, r16
     176:	80 81       	ld	r24, Z
     178:	91 81       	ldd	r25, Z+1	; 0x01
     17a:	19 d3       	rcall	.+1586   	; 0x7ae <_ZN4Port5ClearEv>
     17c:	f3 94       	inc	r15
     17e:	eb cf       	rjmp	.-42     	; 0x156 <_ZN7HD447804WaitEv+0x62>
     180:	8a 81       	ldd	r24, Y+2	; 0x02
     182:	9b 81       	ldd	r25, Y+3	; 0x03
     184:	14 d3       	rcall	.+1576   	; 0x7ae <_ZN4Port5ClearEv>
     186:	df 91       	pop	r29
     188:	cf 91       	pop	r28
     18a:	1f 91       	pop	r17
     18c:	0f 91       	pop	r16
     18e:	ff 90       	pop	r15
     190:	08 95       	ret

00000192 <_ZN7HD447808SendByteEc8DataType>:
     192:	ef 92       	push	r14
     194:	ff 92       	push	r15
     196:	0f 93       	push	r16
     198:	1f 93       	push	r17
     19a:	cf 93       	push	r28
     19c:	df 93       	push	r29
     19e:	ec 01       	movw	r28, r24
     1a0:	e6 2e       	mov	r14, r22
     1a2:	14 2f       	mov	r17, r20
     1a4:	a7 df       	rcall	.-178    	; 0xf4 <_ZN7HD447804WaitEv>
     1a6:	11 30       	cpi	r17, 0x01	; 1
     1a8:	21 f4       	brne	.+8      	; 0x1b2 <_ZN7HD447808SendByteEc8DataType+0x20>
     1aa:	88 81       	ld	r24, Y
     1ac:	99 81       	ldd	r25, Y+1	; 0x01
     1ae:	ff d2       	rcall	.+1534   	; 0x7ae <_ZN4Port5ClearEv>
     1b0:	05 c0       	rjmp	.+10     	; 0x1bc <_ZN7HD447808SendByteEc8DataType+0x2a>
     1b2:	11 11       	cpse	r17, r1
     1b4:	03 c0       	rjmp	.+6      	; 0x1bc <_ZN7HD447808SendByteEc8DataType+0x2a>
     1b6:	88 81       	ld	r24, Y
     1b8:	99 81       	ldd	r25, Y+1	; 0x01
     1ba:	e7 d2       	rcall	.+1486   	; 0x78a <_ZN4Port3SetEv>
     1bc:	0e 2d       	mov	r16, r14
     1be:	10 e0       	ldi	r17, 0x00	; 0
     1c0:	15 95       	asr	r17
     1c2:	07 95       	ror	r16
     1c4:	15 95       	asr	r17
     1c6:	07 95       	ror	r16
     1c8:	15 95       	asr	r17
     1ca:	07 95       	ror	r16
     1cc:	15 95       	asr	r17
     1ce:	07 95       	ror	r16
     1d0:	f1 2c       	mov	r15, r1
     1d2:	81 e0       	ldi	r24, 0x01	; 1
     1d4:	8f 15       	cp	r24, r15
     1d6:	58 f1       	brcs	.+86     	; 0x22e <__EEPROM_REGION_LENGTH__+0x2e>
     1d8:	ce 01       	movw	r24, r28
     1da:	82 df       	rcall	.-252    	; 0xe0 <_ZN7HD4478012SelectDeviceEv>
     1dc:	10 e0       	ldi	r17, 0x00	; 0
     1de:	14 30       	cpi	r17, 0x04	; 4
     1e0:	08 f5       	brcc	.+66     	; 0x224 <__EEPROM_REGION_LENGTH__+0x24>
     1e2:	81 2f       	mov	r24, r17
     1e4:	90 e0       	ldi	r25, 0x00	; 0
     1e6:	20 2f       	mov	r18, r16
     1e8:	30 e0       	ldi	r19, 0x00	; 0
     1ea:	01 2e       	mov	r0, r17
     1ec:	02 c0       	rjmp	.+4      	; 0x1f2 <_ZN7HD447808SendByteEc8DataType+0x60>
     1ee:	35 95       	asr	r19
     1f0:	27 95       	ror	r18
     1f2:	0a 94       	dec	r0
     1f4:	e2 f7       	brpl	.-8      	; 0x1ee <_ZN7HD447808SendByteEc8DataType+0x5c>
     1f6:	20 ff       	sbrs	r18, 0
     1f8:	0a c0       	rjmp	.+20     	; 0x20e <__EEPROM_REGION_LENGTH__+0xe>
     1fa:	fc 01       	movw	r30, r24
     1fc:	33 96       	adiw	r30, 0x03	; 3
     1fe:	ee 0f       	add	r30, r30
     200:	ff 1f       	adc	r31, r31
     202:	ec 0f       	add	r30, r28
     204:	fd 1f       	adc	r31, r29
     206:	80 81       	ld	r24, Z
     208:	91 81       	ldd	r25, Z+1	; 0x01
     20a:	bf d2       	rcall	.+1406   	; 0x78a <_ZN4Port3SetEv>
     20c:	09 c0       	rjmp	.+18     	; 0x220 <__EEPROM_REGION_LENGTH__+0x20>
     20e:	fc 01       	movw	r30, r24
     210:	33 96       	adiw	r30, 0x03	; 3
     212:	ee 0f       	add	r30, r30
     214:	ff 1f       	adc	r31, r31
     216:	ec 0f       	add	r30, r28
     218:	fd 1f       	adc	r31, r29
     21a:	80 81       	ld	r24, Z
     21c:	91 81       	ldd	r25, Z+1	; 0x01
     21e:	c7 d2       	rcall	.+1422   	; 0x7ae <_ZN4Port5ClearEv>
     220:	1f 5f       	subi	r17, 0xFF	; 255
     222:	dd cf       	rjmp	.-70     	; 0x1de <_ZN7HD447808SendByteEc8DataType+0x4c>
     224:	ce 01       	movw	r24, r28
     226:	61 df       	rcall	.-318    	; 0xea <_ZN7HD447809LatchDataEv>
     228:	f3 94       	inc	r15
     22a:	0e 2d       	mov	r16, r14
     22c:	d2 cf       	rjmp	.-92     	; 0x1d2 <_ZN7HD447808SendByteEc8DataType+0x40>
     22e:	df 91       	pop	r29
     230:	cf 91       	pop	r28
     232:	1f 91       	pop	r17
     234:	0f 91       	pop	r16
     236:	ff 90       	pop	r15
     238:	ef 90       	pop	r14
     23a:	08 95       	ret

0000023c <_ZN7HD4478017SetCursorPositionEhh>:
     23c:	42 30       	cpi	r20, 0x02	; 2
     23e:	20 f0       	brcs	.+8      	; 0x248 <_ZN7HD4478017SetCursorPositionEhh+0xc>
     240:	41 70       	andi	r20, 0x01	; 1
     242:	fc 01       	movw	r30, r24
     244:	26 85       	ldd	r18, Z+14	; 0x0e
     246:	62 0f       	add	r22, r18
     248:	f0 e4       	ldi	r31, 0x40	; 64
     24a:	4f 9f       	mul	r20, r31
     24c:	60 0d       	add	r22, r0
     24e:	11 24       	eor	r1, r1
     250:	60 68       	ori	r22, 0x80	; 128
     252:	41 e0       	ldi	r20, 0x01	; 1
     254:	9e df       	rcall	.-196    	; 0x192 <_ZN7HD447808SendByteEc8DataType>
     256:	08 95       	ret

00000258 <_ZN7HD447802OnEv>:
     258:	41 e0       	ldi	r20, 0x01	; 1
     25a:	6c e0       	ldi	r22, 0x0C	; 12
     25c:	9a df       	rcall	.-204    	; 0x192 <_ZN7HD447808SendByteEc8DataType>
     25e:	08 95       	ret

00000260 <_ZN7HD447803OffEv>:
     260:	41 e0       	ldi	r20, 0x01	; 1
     262:	68 e0       	ldi	r22, 0x08	; 8
     264:	96 df       	rcall	.-212    	; 0x192 <_ZN7HD447808SendByteEc8DataType>
     266:	08 95       	ret

00000268 <_ZN7HD447805ClearEv>:
     268:	41 e0       	ldi	r20, 0x01	; 1
     26a:	61 e0       	ldi	r22, 0x01	; 1
     26c:	92 df       	rcall	.-220    	; 0x192 <_ZN7HD447808SendByteEc8DataType>
     26e:	08 95       	ret

00000270 <_ZN7HD44780C1EP4PortS1_S1_S1_S1_S1_S1_h>:
     270:	6f 92       	push	r6
     272:	7f 92       	push	r7
     274:	8f 92       	push	r8
     276:	af 92       	push	r10
     278:	bf 92       	push	r11
     27a:	cf 92       	push	r12
     27c:	df 92       	push	r13
     27e:	ef 92       	push	r14
     280:	ff 92       	push	r15
     282:	0f 93       	push	r16
     284:	1f 93       	push	r17
     286:	cf 93       	push	r28
     288:	df 93       	push	r29
     28a:	cd b7       	in	r28, 0x3d	; 61
     28c:	de b7       	in	r29, 0x3e	; 62
     28e:	3c 01       	movw	r6, r24
     290:	cb 01       	movw	r24, r22
     292:	f3 01       	movw	r30, r6
     294:	86 86       	std	Z+14, r8	; 0x0e
     296:	71 83       	std	Z+1, r23	; 0x01
     298:	60 83       	st	Z, r22
     29a:	53 83       	std	Z+3, r21	; 0x03
     29c:	42 83       	std	Z+2, r20	; 0x02
     29e:	35 83       	std	Z+5, r19	; 0x05
     2a0:	24 83       	std	Z+4, r18	; 0x04
     2a2:	17 83       	std	Z+7, r17	; 0x07
     2a4:	06 83       	std	Z+6, r16	; 0x06
     2a6:	f1 86       	std	Z+9, r15	; 0x09
     2a8:	e0 86       	std	Z+8, r14	; 0x08
     2aa:	d3 86       	std	Z+11, r13	; 0x0b
     2ac:	c2 86       	std	Z+10, r12	; 0x0a
     2ae:	b5 86       	std	Z+13, r11	; 0x0d
     2b0:	a4 86       	std	Z+12, r10	; 0x0c
     2b2:	58 d2       	rcall	.+1200   	; 0x764 <_ZN4Port11SetAsOutputEv>
     2b4:	f3 01       	movw	r30, r6
     2b6:	82 81       	ldd	r24, Z+2	; 0x02
     2b8:	93 81       	ldd	r25, Z+3	; 0x03
     2ba:	54 d2       	rcall	.+1192   	; 0x764 <_ZN4Port11SetAsOutputEv>
     2bc:	f3 01       	movw	r30, r6
     2be:	84 81       	ldd	r24, Z+4	; 0x04
     2c0:	95 81       	ldd	r25, Z+5	; 0x05
     2c2:	50 d2       	rcall	.+1184   	; 0x764 <_ZN4Port11SetAsOutputEv>
     2c4:	f3 01       	movw	r30, r6
     2c6:	82 81       	ldd	r24, Z+2	; 0x02
     2c8:	93 81       	ldd	r25, Z+3	; 0x03
     2ca:	71 d2       	rcall	.+1250   	; 0x7ae <_ZN4Port5ClearEv>
     2cc:	f1 2c       	mov	r15, r1
     2ce:	f3 e0       	ldi	r31, 0x03	; 3
     2d0:	ff 15       	cp	r31, r15
     2d2:	90 f0       	brcs	.+36     	; 0x2f8 <_ZN7HD44780C1EP4PortS1_S1_S1_S1_S1_S1_h+0x88>
     2d4:	0f 2d       	mov	r16, r15
     2d6:	10 e0       	ldi	r17, 0x00	; 0
     2d8:	0d 5f       	subi	r16, 0xFD	; 253
     2da:	1f 4f       	sbci	r17, 0xFF	; 255
     2dc:	00 0f       	add	r16, r16
     2de:	11 1f       	adc	r17, r17
     2e0:	06 0d       	add	r16, r6
     2e2:	17 1d       	adc	r17, r7
     2e4:	f8 01       	movw	r30, r16
     2e6:	80 81       	ld	r24, Z
     2e8:	91 81       	ldd	r25, Z+1	; 0x01
     2ea:	3c d2       	rcall	.+1144   	; 0x764 <_ZN4Port11SetAsOutputEv>
     2ec:	f8 01       	movw	r30, r16
     2ee:	80 81       	ld	r24, Z
     2f0:	91 81       	ldd	r25, Z+1	; 0x01
     2f2:	5d d2       	rcall	.+1210   	; 0x7ae <_ZN4Port5ClearEv>
     2f4:	f3 94       	inc	r15
     2f6:	eb cf       	rjmp	.-42     	; 0x2ce <_ZN7HD44780C1EP4PortS1_S1_S1_S1_S1_S1_h+0x5e>
     2f8:	f3 01       	movw	r30, r6
     2fa:	86 81       	ldd	r24, Z+6	; 0x06
     2fc:	97 81       	ldd	r25, Z+7	; 0x07
     2fe:	45 d2       	rcall	.+1162   	; 0x78a <_ZN4Port3SetEv>
     300:	f3 01       	movw	r30, r6
     302:	80 85       	ldd	r24, Z+8	; 0x08
     304:	91 85       	ldd	r25, Z+9	; 0x09
     306:	41 d2       	rcall	.+1154   	; 0x78a <_ZN4Port3SetEv>
     308:	10 e0       	ldi	r17, 0x00	; 0
     30a:	12 30       	cpi	r17, 0x02	; 2
     30c:	90 f4       	brcc	.+36     	; 0x332 <_ZN7HD44780C1EP4PortS1_S1_S1_S1_S1_S1_h+0xc2>
     30e:	c3 01       	movw	r24, r6
     310:	e7 de       	rcall	.-562    	; 0xe0 <_ZN7HD4478012SelectDeviceEv>
     312:	8f e9       	ldi	r24, 0x9F	; 159
     314:	9f e0       	ldi	r25, 0x0F	; 15
     316:	01 97       	sbiw	r24, 0x01	; 1
     318:	f1 f7       	brne	.-4      	; 0x316 <_ZN7HD44780C1EP4PortS1_S1_S1_S1_S1_S1_h+0xa6>
     31a:	00 c0       	rjmp	.+0      	; 0x31c <_ZN7HD44780C1EP4PortS1_S1_S1_S1_S1_S1_h+0xac>
     31c:	00 00       	nop
     31e:	c3 01       	movw	r24, r6
     320:	e4 de       	rcall	.-568    	; 0xea <_ZN7HD447809LatchDataEv>
     322:	ef e9       	ldi	r30, 0x9F	; 159
     324:	ff e0       	ldi	r31, 0x0F	; 15
     326:	31 97       	sbiw	r30, 0x01	; 1
     328:	f1 f7       	brne	.-4      	; 0x326 <_ZN7HD44780C1EP4PortS1_S1_S1_S1_S1_S1_h+0xb6>
     32a:	00 c0       	rjmp	.+0      	; 0x32c <_ZN7HD44780C1EP4PortS1_S1_S1_S1_S1_S1_h+0xbc>
     32c:	00 00       	nop
     32e:	1f 5f       	subi	r17, 0xFF	; 255
     330:	ec cf       	rjmp	.-40     	; 0x30a <_ZN7HD44780C1EP4PortS1_S1_S1_S1_S1_S1_h+0x9a>
     332:	f3 01       	movw	r30, r6
     334:	86 81       	ldd	r24, Z+6	; 0x06
     336:	97 81       	ldd	r25, Z+7	; 0x07
     338:	3a d2       	rcall	.+1140   	; 0x7ae <_ZN4Port5ClearEv>
     33a:	c3 01       	movw	r24, r6
     33c:	d1 de       	rcall	.-606    	; 0xe0 <_ZN7HD4478012SelectDeviceEv>
     33e:	8f e9       	ldi	r24, 0x9F	; 159
     340:	9f e0       	ldi	r25, 0x0F	; 15
     342:	01 97       	sbiw	r24, 0x01	; 1
     344:	f1 f7       	brne	.-4      	; 0x342 <_ZN7HD44780C1EP4PortS1_S1_S1_S1_S1_S1_h+0xd2>
     346:	00 c0       	rjmp	.+0      	; 0x348 <_ZN7HD44780C1EP4PortS1_S1_S1_S1_S1_S1_h+0xd8>
     348:	00 00       	nop
     34a:	c3 01       	movw	r24, r6
     34c:	ce de       	rcall	.-612    	; 0xea <_ZN7HD447809LatchDataEv>
     34e:	ef e9       	ldi	r30, 0x9F	; 159
     350:	ff e0       	ldi	r31, 0x0F	; 15
     352:	31 97       	sbiw	r30, 0x01	; 1
     354:	f1 f7       	brne	.-4      	; 0x352 <_ZN7HD44780C1EP4PortS1_S1_S1_S1_S1_S1_h+0xe2>
     356:	00 c0       	rjmp	.+0      	; 0x358 <_ZN7HD44780C1EP4PortS1_S1_S1_S1_S1_S1_h+0xe8>
     358:	00 00       	nop
     35a:	41 e0       	ldi	r20, 0x01	; 1
     35c:	68 e2       	ldi	r22, 0x28	; 40
     35e:	c3 01       	movw	r24, r6
     360:	18 df       	rcall	.-464    	; 0x192 <_ZN7HD447808SendByteEc8DataType>
     362:	c3 01       	movw	r24, r6
     364:	7d df       	rcall	.-262    	; 0x260 <_ZN7HD447803OffEv>
     366:	c3 01       	movw	r24, r6
     368:	7f df       	rcall	.-258    	; 0x268 <_ZN7HD447805ClearEv>
     36a:	41 e0       	ldi	r20, 0x01	; 1
     36c:	66 e0       	ldi	r22, 0x06	; 6
     36e:	c3 01       	movw	r24, r6
     370:	10 df       	rcall	.-480    	; 0x192 <_ZN7HD447808SendByteEc8DataType>
     372:	c3 01       	movw	r24, r6
     374:	71 df       	rcall	.-286    	; 0x258 <_ZN7HD447802OnEv>
     376:	df 91       	pop	r29
     378:	cf 91       	pop	r28
     37a:	1f 91       	pop	r17
     37c:	0f 91       	pop	r16
     37e:	ff 90       	pop	r15
     380:	ef 90       	pop	r14
     382:	df 90       	pop	r13
     384:	cf 90       	pop	r12
     386:	bf 90       	pop	r11
     388:	af 90       	pop	r10
     38a:	8f 90       	pop	r8
     38c:	7f 90       	pop	r7
     38e:	6f 90       	pop	r6
     390:	08 95       	ret

00000392 <_ZN7HD4478017ClearSelectedAreaEhhh>:
     392:	0f 93       	push	r16
     394:	1f 93       	push	r17
     396:	cf 93       	push	r28
     398:	df 93       	push	r29
     39a:	8c 01       	movw	r16, r24
     39c:	d6 2f       	mov	r29, r22
     39e:	64 2f       	mov	r22, r20
     3a0:	42 2f       	mov	r20, r18
     3a2:	4c df       	rcall	.-360    	; 0x23c <_ZN7HD4478017SetCursorPositionEhh>
     3a4:	c0 e0       	ldi	r28, 0x00	; 0
     3a6:	cd 17       	cp	r28, r29
     3a8:	30 f4       	brcc	.+12     	; 0x3b6 <_ZN7HD4478017ClearSelectedAreaEhhh+0x24>
     3aa:	40 e0       	ldi	r20, 0x00	; 0
     3ac:	60 e2       	ldi	r22, 0x20	; 32
     3ae:	c8 01       	movw	r24, r16
     3b0:	f0 de       	rcall	.-544    	; 0x192 <_ZN7HD447808SendByteEc8DataType>
     3b2:	cf 5f       	subi	r28, 0xFF	; 255
     3b4:	f8 cf       	rjmp	.-16     	; 0x3a6 <_ZN7HD4478017ClearSelectedAreaEhhh+0x14>
     3b6:	df 91       	pop	r29
     3b8:	cf 91       	pop	r28
     3ba:	1f 91       	pop	r17
     3bc:	0f 91       	pop	r16
     3be:	08 95       	ret

000003c0 <_ZN7HD447809PrintTextEPKchh>:
     3c0:	0f 93       	push	r16
     3c2:	1f 93       	push	r17
     3c4:	cf 93       	push	r28
     3c6:	df 93       	push	r29
     3c8:	8c 01       	movw	r16, r24
     3ca:	eb 01       	movw	r28, r22
     3cc:	64 2f       	mov	r22, r20
     3ce:	42 2f       	mov	r20, r18
     3d0:	35 df       	rcall	.-406    	; 0x23c <_ZN7HD4478017SetCursorPositionEhh>
     3d2:	68 81       	ld	r22, Y
     3d4:	66 23       	and	r22, r22
     3d6:	29 f0       	breq	.+10     	; 0x3e2 <_ZN7HD447809PrintTextEPKchh+0x22>
     3d8:	21 96       	adiw	r28, 0x01	; 1
     3da:	40 e0       	ldi	r20, 0x00	; 0
     3dc:	c8 01       	movw	r24, r16
     3de:	d9 de       	rcall	.-590    	; 0x192 <_ZN7HD447808SendByteEc8DataType>
     3e0:	f8 cf       	rjmp	.-16     	; 0x3d2 <_ZN7HD447809PrintTextEPKchh+0x12>
     3e2:	df 91       	pop	r29
     3e4:	cf 91       	pop	r28
     3e6:	1f 91       	pop	r17
     3e8:	0f 91       	pop	r16
     3ea:	08 95       	ret

000003ec <_ZN7HD4478022PrintTextWithAlignmentEPKch9Alignment>:
     3ec:	54 2f       	mov	r21, r20
     3ee:	21 30       	cpi	r18, 0x01	; 1
     3f0:	19 f0       	breq	.+6      	; 0x3f8 <_ZN7HD4478022PrintTextWithAlignmentEPKch9Alignment+0xc>
     3f2:	22 30       	cpi	r18, 0x02	; 2
     3f4:	69 f0       	breq	.+26     	; 0x410 <__DATA_REGION_LENGTH__+0x10>
     3f6:	1c c0       	rjmp	.+56     	; 0x430 <__DATA_REGION_LENGTH__+0x30>
     3f8:	fc 01       	movw	r30, r24
     3fa:	26 85       	ldd	r18, Z+14	; 0x0e
     3fc:	fb 01       	movw	r30, r22
     3fe:	01 90       	ld	r0, Z+
     400:	00 20       	and	r0, r0
     402:	e9 f7       	brne	.-6      	; 0x3fe <_ZN7HD4478022PrintTextWithAlignmentEPKch9Alignment+0x12>
     404:	31 97       	sbiw	r30, 0x01	; 1
     406:	e6 1b       	sub	r30, r22
     408:	f7 0b       	sbc	r31, r23
     40a:	42 2f       	mov	r20, r18
     40c:	4e 1b       	sub	r20, r30
     40e:	11 c0       	rjmp	.+34     	; 0x432 <__DATA_REGION_LENGTH__+0x32>
     410:	fc 01       	movw	r30, r24
     412:	26 85       	ldd	r18, Z+14	; 0x0e
     414:	fb 01       	movw	r30, r22
     416:	01 90       	ld	r0, Z+
     418:	00 20       	and	r0, r0
     41a:	e9 f7       	brne	.-6      	; 0x416 <__DATA_REGION_LENGTH__+0x16>
     41c:	31 97       	sbiw	r30, 0x01	; 1
     41e:	e6 1b       	sub	r30, r22
     420:	f7 0b       	sbc	r31, r23
     422:	30 e0       	ldi	r19, 0x00	; 0
     424:	2e 1b       	sub	r18, r30
     426:	3f 0b       	sbc	r19, r31
     428:	36 95       	lsr	r19
     42a:	27 95       	ror	r18
     42c:	42 2f       	mov	r20, r18
     42e:	01 c0       	rjmp	.+2      	; 0x432 <__DATA_REGION_LENGTH__+0x32>
     430:	40 e0       	ldi	r20, 0x00	; 0
     432:	25 2f       	mov	r18, r21
     434:	c5 df       	rcall	.-118    	; 0x3c0 <_ZN7HD447809PrintTextEPKchh>
     436:	08 95       	ret

00000438 <_ZN7HD44780nwEj>:

void* HD44780::operator new(size_t size)
{
     438:	cf 93       	push	r28
     43a:	df 93       	push	r29
     43c:	ec 01       	movw	r28, r24
	void* ptr;
	do
	{
		ptr = malloc(size);
     43e:	ce 01       	movw	r24, r28
     440:	38 d7       	rcall	.+3696   	; 0x12b2 <malloc>
	}while(ptr == nullptr);
     442:	00 97       	sbiw	r24, 0x00	; 0
     444:	e1 f3       	breq	.-8      	; 0x43e <_ZN7HD44780nwEj+0x6>
	
	return ptr;
}
     446:	df 91       	pop	r29
     448:	cf 91       	pop	r28
     44a:	08 95       	ret

0000044c <__vector_9>:
bool allowedMeasuring = false;
uint16_t displayedValue1 = 0;
uint16_t displayedValue2 = 0;

ISR(TIMER0_OVF_vect)
{
     44c:	1f 92       	push	r1
     44e:	0f 92       	push	r0
     450:	0f b6       	in	r0, 0x3f	; 63
     452:	0f 92       	push	r0
     454:	11 24       	eor	r1, r1
     456:	8f 93       	push	r24
	if(!allowedMeasuring) allowedMeasuring = true;
     458:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <allowedMeasuring>
     45c:	81 11       	cpse	r24, r1
     45e:	03 c0       	rjmp	.+6      	; 0x466 <__stack+0x7>
     460:	81 e0       	ldi	r24, 0x01	; 1
     462:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <allowedMeasuring>
}
     466:	8f 91       	pop	r24
     468:	0f 90       	pop	r0
     46a:	0f be       	out	0x3f, r0	; 63
     46c:	0f 90       	pop	r0
     46e:	1f 90       	pop	r1
     470:	18 95       	reti

00000472 <_Z11PrintResultP7HD44780hj>:

void PrintResult(HD44780 *lcd, uint8_t line, uint16_t result)
{	
     472:	ff 92       	push	r15
     474:	0f 93       	push	r16
     476:	1f 93       	push	r17
     478:	cf 93       	push	r28
     47a:	df 93       	push	r29
     47c:	8c 01       	movw	r16, r24
     47e:	f6 2e       	mov	r15, r22
     480:	ea 01       	movw	r28, r20
	lcd->ClearSelectedArea(5, 0, line);
     482:	26 2f       	mov	r18, r22
     484:	40 e0       	ldi	r20, 0x00	; 0
     486:	65 e0       	ldi	r22, 0x05	; 5
     488:	84 df       	rcall	.-248    	; 0x392 <_ZN7HD4478017ClearSelectedAreaEhhh>
	
	const char* txt = StringHandler::FloatToString(result, 0);
     48a:	be 01       	movw	r22, r28
     48c:	80 e0       	ldi	r24, 0x00	; 0
     48e:	90 e0       	ldi	r25, 0x00	; 0
     490:	d1 d3       	rcall	.+1954   	; 0xc34 <__floatunsisf>
     492:	40 e0       	ldi	r20, 0x00	; 0
     494:	20 d2       	rcall	.+1088   	; 0x8d6 <_ZN13StringHandler13FloatToStringEfh>
     496:	ec 01       	movw	r28, r24
	
	lcd->PrintTextWithAlignment(txt, line, LEFT);
     498:	20 e0       	ldi	r18, 0x00	; 0
     49a:	4f 2d       	mov	r20, r15
     49c:	bc 01       	movw	r22, r24
     49e:	c8 01       	movw	r24, r16
     4a0:	a5 df       	rcall	.-182    	; 0x3ec <_ZN7HD4478022PrintTextWithAlignmentEPKch9Alignment>
	
	free((char*)txt);
     4a2:	ce 01       	movw	r24, r28
     4a4:	9e d7       	rcall	.+3900   	; 0x13e2 <free>
	txt = nullptr;	
}
     4a6:	df 91       	pop	r29
     4a8:	cf 91       	pop	r28
     4aa:	1f 91       	pop	r17
     4ac:	0f 91       	pop	r16
     4ae:	ff 90       	pop	r15
     4b0:	08 95       	ret

000004b2 <main>:

int main(void)
{
     4b2:	cf 93       	push	r28
     4b4:	df 93       	push	r29
     4b6:	00 d0       	rcall	.+0      	; 0x4b8 <main+0x6>
     4b8:	00 d0       	rcall	.+0      	; 0x4ba <main+0x8>
     4ba:	cd b7       	in	r28, 0x3d	; 61
     4bc:	de b7       	in	r29, 0x3e	; 62
	Port *rs = new Port(&PORTD, &DDRD, &PIND, 0);
     4be:	87 e0       	ldi	r24, 0x07	; 7
     4c0:	90 e0       	ldi	r25, 0x00	; 0
     4c2:	ad d1       	rcall	.+858    	; 0x81e <_ZN4PortnwEj>
     4c4:	3c 01       	movw	r6, r24
     4c6:	00 e0       	ldi	r16, 0x00	; 0
     4c8:	20 e3       	ldi	r18, 0x30	; 48
     4ca:	30 e0       	ldi	r19, 0x00	; 0
     4cc:	41 e3       	ldi	r20, 0x31	; 49
     4ce:	50 e0       	ldi	r21, 0x00	; 0
     4d0:	62 e3       	ldi	r22, 0x32	; 50
     4d2:	70 e0       	ldi	r23, 0x00	; 0
     4d4:	80 d1       	rcall	.+768    	; 0x7d6 <_ZN4PortC1EPVhS1_S1_h>
	Port *rw = new Port(&PORTD, &DDRD, &PIND, 1);
     4d6:	87 e0       	ldi	r24, 0x07	; 7
     4d8:	90 e0       	ldi	r25, 0x00	; 0
     4da:	a1 d1       	rcall	.+834    	; 0x81e <_ZN4PortnwEj>
     4dc:	2c 01       	movw	r4, r24
     4de:	01 e0       	ldi	r16, 0x01	; 1
     4e0:	20 e3       	ldi	r18, 0x30	; 48
     4e2:	30 e0       	ldi	r19, 0x00	; 0
     4e4:	41 e3       	ldi	r20, 0x31	; 49
     4e6:	50 e0       	ldi	r21, 0x00	; 0
     4e8:	62 e3       	ldi	r22, 0x32	; 50
     4ea:	70 e0       	ldi	r23, 0x00	; 0
     4ec:	74 d1       	rcall	.+744    	; 0x7d6 <_ZN4PortC1EPVhS1_S1_h>
	Port *e = new Port(&PORTD, &DDRD, &PIND, 2);
     4ee:	87 e0       	ldi	r24, 0x07	; 7
     4f0:	90 e0       	ldi	r25, 0x00	; 0
     4f2:	95 d1       	rcall	.+810    	; 0x81e <_ZN4PortnwEj>
     4f4:	1c 01       	movw	r2, r24
     4f6:	02 e0       	ldi	r16, 0x02	; 2
     4f8:	20 e3       	ldi	r18, 0x30	; 48
     4fa:	30 e0       	ldi	r19, 0x00	; 0
     4fc:	41 e3       	ldi	r20, 0x31	; 49
     4fe:	50 e0       	ldi	r21, 0x00	; 0
     500:	62 e3       	ldi	r22, 0x32	; 50
     502:	70 e0       	ldi	r23, 0x00	; 0
     504:	68 d1       	rcall	.+720    	; 0x7d6 <_ZN4PortC1EPVhS1_S1_h>
	Port *d4 = new Port(&PORTD, &DDRD, &PIND, 3);
     506:	87 e0       	ldi	r24, 0x07	; 7
     508:	90 e0       	ldi	r25, 0x00	; 0
     50a:	89 d1       	rcall	.+786    	; 0x81e <_ZN4PortnwEj>
     50c:	9a 83       	std	Y+2, r25	; 0x02
     50e:	89 83       	std	Y+1, r24	; 0x01
     510:	03 e0       	ldi	r16, 0x03	; 3
     512:	20 e3       	ldi	r18, 0x30	; 48
     514:	30 e0       	ldi	r19, 0x00	; 0
     516:	41 e3       	ldi	r20, 0x31	; 49
     518:	50 e0       	ldi	r21, 0x00	; 0
     51a:	62 e3       	ldi	r22, 0x32	; 50
     51c:	70 e0       	ldi	r23, 0x00	; 0
     51e:	5b d1       	rcall	.+694    	; 0x7d6 <_ZN4PortC1EPVhS1_S1_h>
	Port *d5 = new Port(&PORTD, &DDRD, &PIND, 4);
     520:	87 e0       	ldi	r24, 0x07	; 7
     522:	90 e0       	ldi	r25, 0x00	; 0
     524:	7c d1       	rcall	.+760    	; 0x81e <_ZN4PortnwEj>
     526:	7c 01       	movw	r14, r24
     528:	04 e0       	ldi	r16, 0x04	; 4
     52a:	20 e3       	ldi	r18, 0x30	; 48
     52c:	30 e0       	ldi	r19, 0x00	; 0
     52e:	41 e3       	ldi	r20, 0x31	; 49
     530:	50 e0       	ldi	r21, 0x00	; 0
     532:	62 e3       	ldi	r22, 0x32	; 50
     534:	70 e0       	ldi	r23, 0x00	; 0
     536:	4f d1       	rcall	.+670    	; 0x7d6 <_ZN4PortC1EPVhS1_S1_h>
	Port *d6 = new Port(&PORTD, &DDRD, &PIND, 5);
     538:	87 e0       	ldi	r24, 0x07	; 7
     53a:	90 e0       	ldi	r25, 0x00	; 0
     53c:	70 d1       	rcall	.+736    	; 0x81e <_ZN4PortnwEj>
     53e:	6c 01       	movw	r12, r24
     540:	05 e0       	ldi	r16, 0x05	; 5
     542:	20 e3       	ldi	r18, 0x30	; 48
     544:	30 e0       	ldi	r19, 0x00	; 0
     546:	41 e3       	ldi	r20, 0x31	; 49
     548:	50 e0       	ldi	r21, 0x00	; 0
     54a:	62 e3       	ldi	r22, 0x32	; 50
     54c:	70 e0       	ldi	r23, 0x00	; 0
     54e:	43 d1       	rcall	.+646    	; 0x7d6 <_ZN4PortC1EPVhS1_S1_h>
	Port *d7 = new Port(&PORTD, &DDRD, &PIND, 6);
     550:	87 e0       	ldi	r24, 0x07	; 7
     552:	90 e0       	ldi	r25, 0x00	; 0
     554:	64 d1       	rcall	.+712    	; 0x81e <_ZN4PortnwEj>
     556:	5c 01       	movw	r10, r24
     558:	06 e0       	ldi	r16, 0x06	; 6
     55a:	20 e3       	ldi	r18, 0x30	; 48
     55c:	30 e0       	ldi	r19, 0x00	; 0
     55e:	41 e3       	ldi	r20, 0x31	; 49
     560:	50 e0       	ldi	r21, 0x00	; 0
     562:	62 e3       	ldi	r22, 0x32	; 50
     564:	70 e0       	ldi	r23, 0x00	; 0
     566:	37 d1       	rcall	.+622    	; 0x7d6 <_ZN4PortC1EPVhS1_S1_h>
	
	HD44780 *lcd = new HD44780(rs, rw, e, d4, d5, d6, d7, 16);
     568:	8f e0       	ldi	r24, 0x0F	; 15
     56a:	90 e0       	ldi	r25, 0x00	; 0
     56c:	65 df       	rcall	.-310    	; 0x438 <_ZN7HD44780nwEj>
     56e:	9c 83       	std	Y+4, r25	; 0x04
     570:	8b 83       	std	Y+3, r24	; 0x03
     572:	68 94       	set
     574:	88 24       	eor	r8, r8
     576:	84 f8       	bld	r8, 4
     578:	09 81       	ldd	r16, Y+1	; 0x01
     57a:	1a 81       	ldd	r17, Y+2	; 0x02
     57c:	91 01       	movw	r18, r2
     57e:	a2 01       	movw	r20, r4
     580:	b3 01       	movw	r22, r6
     582:	76 de       	rcall	.-788    	; 0x270 <_ZN7HD44780C1EP4PortS1_S1_S1_S1_S1_S1_h>
	
	Port *sck = new Port(&PORTB, &DDRB, &PINB, 5);
     584:	87 e0       	ldi	r24, 0x07	; 7
     586:	90 e0       	ldi	r25, 0x00	; 0
     588:	4a d1       	rcall	.+660    	; 0x81e <_ZN4PortnwEj>
     58a:	4c 01       	movw	r8, r24
     58c:	05 e0       	ldi	r16, 0x05	; 5
     58e:	26 e3       	ldi	r18, 0x36	; 54
     590:	30 e0       	ldi	r19, 0x00	; 0
     592:	47 e3       	ldi	r20, 0x37	; 55
     594:	50 e0       	ldi	r21, 0x00	; 0
     596:	68 e3       	ldi	r22, 0x38	; 56
     598:	70 e0       	ldi	r23, 0x00	; 0
     59a:	1d d1       	rcall	.+570    	; 0x7d6 <_ZN4PortC1EPVhS1_S1_h>
	Port *mosi = new Port(&PORTB, &DDRB, &PINB, 3);
     59c:	87 e0       	ldi	r24, 0x07	; 7
     59e:	90 e0       	ldi	r25, 0x00	; 0
     5a0:	3e d1       	rcall	.+636    	; 0x81e <_ZN4PortnwEj>
     5a2:	6c 01       	movw	r12, r24
     5a4:	03 e0       	ldi	r16, 0x03	; 3
     5a6:	26 e3       	ldi	r18, 0x36	; 54
     5a8:	30 e0       	ldi	r19, 0x00	; 0
     5aa:	47 e3       	ldi	r20, 0x37	; 55
     5ac:	50 e0       	ldi	r21, 0x00	; 0
     5ae:	68 e3       	ldi	r22, 0x38	; 56
     5b0:	70 e0       	ldi	r23, 0x00	; 0
     5b2:	11 d1       	rcall	.+546    	; 0x7d6 <_ZN4PortC1EPVhS1_S1_h>
	Port *miso = new Port(&PORTB, &DDRB, &PINB, 4);
     5b4:	87 e0       	ldi	r24, 0x07	; 7
     5b6:	90 e0       	ldi	r25, 0x00	; 0
     5b8:	32 d1       	rcall	.+612    	; 0x81e <_ZN4PortnwEj>
     5ba:	5c 01       	movw	r10, r24
     5bc:	04 e0       	ldi	r16, 0x04	; 4
     5be:	26 e3       	ldi	r18, 0x36	; 54
     5c0:	30 e0       	ldi	r19, 0x00	; 0
     5c2:	47 e3       	ldi	r20, 0x37	; 55
     5c4:	50 e0       	ldi	r21, 0x00	; 0
     5c6:	68 e3       	ldi	r22, 0x38	; 56
     5c8:	70 e0       	ldi	r23, 0x00	; 0
     5ca:	05 d1       	rcall	.+522    	; 0x7d6 <_ZN4PortC1EPVhS1_S1_h>
	Port *ss = new Port(&PORTB, &DDRB, &PINB, 2);
     5cc:	87 e0       	ldi	r24, 0x07	; 7
     5ce:	90 e0       	ldi	r25, 0x00	; 0
     5d0:	26 d1       	rcall	.+588    	; 0x81e <_ZN4PortnwEj>
     5d2:	3c 01       	movw	r6, r24
     5d4:	02 e0       	ldi	r16, 0x02	; 2
     5d6:	26 e3       	ldi	r18, 0x36	; 54
     5d8:	30 e0       	ldi	r19, 0x00	; 0
     5da:	47 e3       	ldi	r20, 0x37	; 55
     5dc:	50 e0       	ldi	r21, 0x00	; 0
     5de:	68 e3       	ldi	r22, 0x38	; 56
     5e0:	70 e0       	ldi	r23, 0x00	; 0
     5e2:	f9 d0       	rcall	.+498    	; 0x7d6 <_ZN4PortC1EPVhS1_S1_h>
	
	SPI_Master *spi = new SPI_Master(sck, mosi, miso, ss);
     5e4:	88 e0       	ldi	r24, 0x08	; 8
     5e6:	90 e0       	ldi	r25, 0x00	; 0
     5e8:	6c d1       	rcall	.+728    	; 0x8c2 <_ZN10SPI_MasternwEj>
     5ea:	7c 01       	movw	r14, r24
     5ec:	83 01       	movw	r16, r6
     5ee:	95 01       	movw	r18, r10
     5f0:	a6 01       	movw	r20, r12
     5f2:	b4 01       	movw	r22, r8
     5f4:	1e d1       	rcall	.+572    	; 0x832 <_ZN10SPI_MasterC1EP4PortS1_S1_S1_>
	
	Port *cs = new Port(&PORTB, &DDRB, &PINB, 0);
     5f6:	87 e0       	ldi	r24, 0x07	; 7
     5f8:	90 e0       	ldi	r25, 0x00	; 0
     5fa:	11 d1       	rcall	.+546    	; 0x81e <_ZN4PortnwEj>
     5fc:	4c 01       	movw	r8, r24
     5fe:	00 e0       	ldi	r16, 0x00	; 0
     600:	26 e3       	ldi	r18, 0x36	; 54
     602:	30 e0       	ldi	r19, 0x00	; 0
     604:	47 e3       	ldi	r20, 0x37	; 55
     606:	50 e0       	ldi	r21, 0x00	; 0
     608:	68 e3       	ldi	r22, 0x38	; 56
     60a:	70 e0       	ldi	r23, 0x00	; 0
     60c:	e4 d0       	rcall	.+456    	; 0x7d6 <_ZN4PortC1EPVhS1_S1_h>
	
	MCP3202 *adc1 = new MCP3202(cs, 0);
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	90 e0       	ldi	r25, 0x00	; 0
     612:	89 d0       	rcall	.+274    	; 0x726 <_ZN7MCP3202nwEj>
     614:	5c 01       	movw	r10, r24
     616:	40 e0       	ldi	r20, 0x00	; 0
     618:	b4 01       	movw	r22, r8
     61a:	3b d0       	rcall	.+118    	; 0x692 <_ZN7MCP3202C1EP4Porth>
	MCP3202 *adc2 = new MCP3202(cs, 1);
     61c:	83 e0       	ldi	r24, 0x03	; 3
     61e:	90 e0       	ldi	r25, 0x00	; 0
     620:	82 d0       	rcall	.+260    	; 0x726 <_ZN7MCP3202nwEj>
     622:	6c 01       	movw	r12, r24
     624:	41 e0       	ldi	r20, 0x01	; 1
     626:	b4 01       	movw	r22, r8
     628:	34 d0       	rcall	.+104    	; 0x692 <_ZN7MCP3202C1EP4Porth>
	
	//T0
	TCCR0|=(1<<CS02)|(1<<CS00);	//prescaler 1024
     62a:	83 b7       	in	r24, 0x33	; 51
     62c:	85 60       	ori	r24, 0x05	; 5
     62e:	83 bf       	out	0x33, r24	; 51
	TIMSK|=(1<<TOIE0);			//enable interrupt OVF
     630:	89 b7       	in	r24, 0x39	; 57
     632:	81 60       	ori	r24, 0x01	; 1
     634:	89 bf       	out	0x39, r24	; 57
	
	sei();
     636:	78 94       	sei
	
	/* Replace with your application code */
	while (1)
	{
		if(allowedMeasuring)
     638:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <allowedMeasuring>
     63c:	88 23       	and	r24, r24
     63e:	e1 f3       	breq	.-8      	; 0x638 <main+0x186>
		{
			allowedMeasuring = false;
     640:	10 92 6e 00 	sts	0x006E, r1	; 0x80006e <allowedMeasuring>
			
			uint16_t measuredValue1 = adc1->GetResult(spi);			
     644:	b7 01       	movw	r22, r14
     646:	c5 01       	movw	r24, r10
     648:	32 d0       	rcall	.+100    	; 0x6ae <_ZN7MCP32029GetResultEP10SPI_Master>
			
			if(measuredValue1 != displayedValue1)
     64a:	20 91 6c 00 	lds	r18, 0x006C	; 0x80006c <displayedValue1>
     64e:	30 91 6d 00 	lds	r19, 0x006D	; 0x80006d <displayedValue1+0x1>
     652:	82 17       	cp	r24, r18
     654:	93 07       	cpc	r25, r19
     656:	49 f0       	breq	.+18     	; 0x66a <main+0x1b8>
			{
				displayedValue1 = measuredValue1;
     658:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <displayedValue1+0x1>
     65c:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <displayedValue1>
				
				PrintResult(lcd, 0, measuredValue1);
     660:	ac 01       	movw	r20, r24
     662:	60 e0       	ldi	r22, 0x00	; 0
     664:	8b 81       	ldd	r24, Y+3	; 0x03
     666:	9c 81       	ldd	r25, Y+4	; 0x04
     668:	04 df       	rcall	.-504    	; 0x472 <_Z11PrintResultP7HD44780hj>
			}
			
			uint16_t measuredValue2 = adc2->GetResult(spi);
     66a:	b7 01       	movw	r22, r14
     66c:	c6 01       	movw	r24, r12
     66e:	1f d0       	rcall	.+62     	; 0x6ae <_ZN7MCP32029GetResultEP10SPI_Master>
			
			if(measuredValue2 != displayedValue2)
     670:	20 91 6a 00 	lds	r18, 0x006A	; 0x80006a <__data_end>
     674:	30 91 6b 00 	lds	r19, 0x006B	; 0x80006b <__data_end+0x1>
     678:	82 17       	cp	r24, r18
     67a:	93 07       	cpc	r25, r19
     67c:	e9 f2       	breq	.-70     	; 0x638 <main+0x186>
			{
				displayedValue2 = measuredValue2;	
     67e:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <__data_end+0x1>
     682:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__data_end>
				
				PrintResult(lcd, 1, measuredValue2);
     686:	ac 01       	movw	r20, r24
     688:	61 e0       	ldi	r22, 0x01	; 1
     68a:	8b 81       	ldd	r24, Y+3	; 0x03
     68c:	9c 81       	ldd	r25, Y+4	; 0x04
     68e:	f1 de       	rcall	.-542    	; 0x472 <_Z11PrintResultP7HD44780hj>
     690:	d3 cf       	rjmp	.-90     	; 0x638 <main+0x186>

00000692 <_ZN7MCP3202C1EP4Porth>:
}

MCP3202::~MCP3202()
{
	delete CS;
}
     692:	cf 93       	push	r28
     694:	df 93       	push	r29
     696:	ec 01       	movw	r28, r24
     698:	cb 01       	movw	r24, r22
     69a:	48 83       	st	Y, r20
     69c:	7a 83       	std	Y+2, r23	; 0x02
     69e:	69 83       	std	Y+1, r22	; 0x01
     6a0:	61 d0       	rcall	.+194    	; 0x764 <_ZN4Port11SetAsOutputEv>
     6a2:	89 81       	ldd	r24, Y+1	; 0x01
     6a4:	9a 81       	ldd	r25, Y+2	; 0x02
     6a6:	71 d0       	rcall	.+226    	; 0x78a <_ZN4Port3SetEv>
     6a8:	df 91       	pop	r29
     6aa:	cf 91       	pop	r28
     6ac:	08 95       	ret

000006ae <_ZN7MCP32029GetResultEP10SPI_Master>:
     6ae:	ef 92       	push	r14
     6b0:	ff 92       	push	r15
     6b2:	0f 93       	push	r16
     6b4:	1f 93       	push	r17
     6b6:	cf 93       	push	r28
     6b8:	df 93       	push	r29
     6ba:	8c 01       	movw	r16, r24
     6bc:	7b 01       	movw	r14, r22
     6be:	40 e0       	ldi	r20, 0x00	; 0
     6c0:	60 e0       	ldi	r22, 0x00	; 0
     6c2:	c7 01       	movw	r24, r14
     6c4:	d9 d0       	rcall	.+434    	; 0x878 <_ZN10SPI_Master7SetModeE12SPI_Polarity9SPI_Phase>
     6c6:	f8 01       	movw	r30, r16
     6c8:	81 81       	ldd	r24, Z+1	; 0x01
     6ca:	92 81       	ldd	r25, Z+2	; 0x02
     6cc:	70 d0       	rcall	.+224    	; 0x7ae <_ZN4Port5ClearEv>
     6ce:	61 e0       	ldi	r22, 0x01	; 1
     6d0:	c7 01       	movw	r24, r14
     6d2:	f1 d0       	rcall	.+482    	; 0x8b6 <_ZN10SPI_Master8SendByteEh>
     6d4:	f8 01       	movw	r30, r16
     6d6:	60 81       	ld	r22, Z
     6d8:	f0 e4       	ldi	r31, 0x40	; 64
     6da:	6f 9f       	mul	r22, r31
     6dc:	b0 01       	movw	r22, r0
     6de:	11 24       	eor	r1, r1
     6e0:	60 6a       	ori	r22, 0xA0	; 160
     6e2:	c7 01       	movw	r24, r14
     6e4:	e8 d0       	rcall	.+464    	; 0x8b6 <_ZN10SPI_Master8SendByteEh>
     6e6:	c7 01       	movw	r24, r14
     6e8:	ea d0       	rcall	.+468    	; 0x8be <_ZN10SPI_Master11ReceiveByteEv>
     6ea:	c8 2f       	mov	r28, r24
     6ec:	d0 e0       	ldi	r29, 0x00	; 0
     6ee:	dc 2f       	mov	r29, r28
     6f0:	cc 27       	eor	r28, r28
     6f2:	d2 95       	swap	r29
     6f4:	d0 7f       	andi	r29, 0xF0	; 240
     6f6:	d2 95       	swap	r29
     6f8:	c2 95       	swap	r28
     6fa:	cf 70       	andi	r28, 0x0F	; 15
     6fc:	cd 27       	eor	r28, r29
     6fe:	df 70       	andi	r29, 0x0F	; 15
     700:	cd 27       	eor	r28, r29
     702:	60 e0       	ldi	r22, 0x00	; 0
     704:	c7 01       	movw	r24, r14
     706:	d7 d0       	rcall	.+430    	; 0x8b6 <_ZN10SPI_Master8SendByteEh>
     708:	c7 01       	movw	r24, r14
     70a:	d9 d0       	rcall	.+434    	; 0x8be <_ZN10SPI_Master11ReceiveByteEv>
     70c:	c8 2b       	or	r28, r24
     70e:	f8 01       	movw	r30, r16
     710:	81 81       	ldd	r24, Z+1	; 0x01
     712:	92 81       	ldd	r25, Z+2	; 0x02
     714:	3a d0       	rcall	.+116    	; 0x78a <_ZN4Port3SetEv>
     716:	ce 01       	movw	r24, r28
     718:	df 91       	pop	r29
     71a:	cf 91       	pop	r28
     71c:	1f 91       	pop	r17
     71e:	0f 91       	pop	r16
     720:	ff 90       	pop	r15
     722:	ef 90       	pop	r14
     724:	08 95       	ret

00000726 <_ZN7MCP3202nwEj>:

void* MCP3202::operator new(size_t size)
{
     726:	cf 93       	push	r28
     728:	df 93       	push	r29
     72a:	ec 01       	movw	r28, r24
	void* ptr;
	do
	{
		ptr = malloc(size);
     72c:	ce 01       	movw	r24, r28
     72e:	c1 d5       	rcall	.+2946   	; 0x12b2 <malloc>
	}while(ptr == nullptr);
     730:	00 97       	sbiw	r24, 0x00	; 0
     732:	e1 f3       	breq	.-8      	; 0x72c <_ZN7MCP3202nwEj+0x6>
	
	return ptr;
}
     734:	df 91       	pop	r29
     736:	cf 91       	pop	r28
     738:	08 95       	ret

0000073a <_ZN4Port10SetAsInputEv>:
bool Port::IsClear()
{
	return !(*this->PIN & (1<<this->pinNum));
}

Port::~Port(){}
     73a:	dc 01       	movw	r26, r24
     73c:	12 96       	adiw	r26, 0x02	; 2
     73e:	ed 91       	ld	r30, X+
     740:	fc 91       	ld	r31, X
     742:	13 97       	sbiw	r26, 0x03	; 3
     744:	40 81       	ld	r20, Z
     746:	21 e0       	ldi	r18, 0x01	; 1
     748:	30 e0       	ldi	r19, 0x00	; 0
     74a:	b9 01       	movw	r22, r18
     74c:	16 96       	adiw	r26, 0x06	; 6
     74e:	0c 90       	ld	r0, X
     750:	02 c0       	rjmp	.+4      	; 0x756 <_ZN4Port10SetAsInputEv+0x1c>
     752:	66 0f       	add	r22, r22
     754:	77 1f       	adc	r23, r23
     756:	0a 94       	dec	r0
     758:	e2 f7       	brpl	.-8      	; 0x752 <_ZN4Port10SetAsInputEv+0x18>
     75a:	cb 01       	movw	r24, r22
     75c:	80 95       	com	r24
     75e:	84 23       	and	r24, r20
     760:	80 83       	st	Z, r24
     762:	08 95       	ret

00000764 <_ZN4Port11SetAsOutputEv>:
     764:	dc 01       	movw	r26, r24
     766:	12 96       	adiw	r26, 0x02	; 2
     768:	ed 91       	ld	r30, X+
     76a:	fc 91       	ld	r31, X
     76c:	13 97       	sbiw	r26, 0x03	; 3
     76e:	40 81       	ld	r20, Z
     770:	21 e0       	ldi	r18, 0x01	; 1
     772:	30 e0       	ldi	r19, 0x00	; 0
     774:	c9 01       	movw	r24, r18
     776:	16 96       	adiw	r26, 0x06	; 6
     778:	0c 90       	ld	r0, X
     77a:	02 c0       	rjmp	.+4      	; 0x780 <_ZN4Port11SetAsOutputEv+0x1c>
     77c:	88 0f       	add	r24, r24
     77e:	99 1f       	adc	r25, r25
     780:	0a 94       	dec	r0
     782:	e2 f7       	brpl	.-8      	; 0x77c <_ZN4Port11SetAsOutputEv+0x18>
     784:	84 2b       	or	r24, r20
     786:	80 83       	st	Z, r24
     788:	08 95       	ret

0000078a <_ZN4Port3SetEv>:
     78a:	dc 01       	movw	r26, r24
     78c:	ed 91       	ld	r30, X+
     78e:	fc 91       	ld	r31, X
     790:	11 97       	sbiw	r26, 0x01	; 1
     792:	40 81       	ld	r20, Z
     794:	21 e0       	ldi	r18, 0x01	; 1
     796:	30 e0       	ldi	r19, 0x00	; 0
     798:	c9 01       	movw	r24, r18
     79a:	16 96       	adiw	r26, 0x06	; 6
     79c:	0c 90       	ld	r0, X
     79e:	02 c0       	rjmp	.+4      	; 0x7a4 <_ZN4Port3SetEv+0x1a>
     7a0:	88 0f       	add	r24, r24
     7a2:	99 1f       	adc	r25, r25
     7a4:	0a 94       	dec	r0
     7a6:	e2 f7       	brpl	.-8      	; 0x7a0 <_ZN4Port3SetEv+0x16>
     7a8:	84 2b       	or	r24, r20
     7aa:	80 83       	st	Z, r24
     7ac:	08 95       	ret

000007ae <_ZN4Port5ClearEv>:
     7ae:	dc 01       	movw	r26, r24
     7b0:	ed 91       	ld	r30, X+
     7b2:	fc 91       	ld	r31, X
     7b4:	11 97       	sbiw	r26, 0x01	; 1
     7b6:	40 81       	ld	r20, Z
     7b8:	21 e0       	ldi	r18, 0x01	; 1
     7ba:	30 e0       	ldi	r19, 0x00	; 0
     7bc:	b9 01       	movw	r22, r18
     7be:	16 96       	adiw	r26, 0x06	; 6
     7c0:	0c 90       	ld	r0, X
     7c2:	02 c0       	rjmp	.+4      	; 0x7c8 <_ZN4Port5ClearEv+0x1a>
     7c4:	66 0f       	add	r22, r22
     7c6:	77 1f       	adc	r23, r23
     7c8:	0a 94       	dec	r0
     7ca:	e2 f7       	brpl	.-8      	; 0x7c4 <_ZN4Port5ClearEv+0x16>
     7cc:	cb 01       	movw	r24, r22
     7ce:	80 95       	com	r24
     7d0:	84 23       	and	r24, r20
     7d2:	80 83       	st	Z, r24
     7d4:	08 95       	ret

000007d6 <_ZN4PortC1EPVhS1_S1_h>:
     7d6:	0f 93       	push	r16
     7d8:	cf 93       	push	r28
     7da:	df 93       	push	r29
     7dc:	ec 01       	movw	r28, r24
     7de:	79 83       	std	Y+1, r23	; 0x01
     7e0:	68 83       	st	Y, r22
     7e2:	5b 83       	std	Y+3, r21	; 0x03
     7e4:	4a 83       	std	Y+2, r20	; 0x02
     7e6:	3d 83       	std	Y+5, r19	; 0x05
     7e8:	2c 83       	std	Y+4, r18	; 0x04
     7ea:	0e 83       	std	Y+6, r16	; 0x06
     7ec:	a6 df       	rcall	.-180    	; 0x73a <_ZN4Port10SetAsInputEv>
     7ee:	ce 01       	movw	r24, r28
     7f0:	de df       	rcall	.-68     	; 0x7ae <_ZN4Port5ClearEv>
     7f2:	df 91       	pop	r29
     7f4:	cf 91       	pop	r28
     7f6:	0f 91       	pop	r16
     7f8:	08 95       	ret

000007fa <_ZN4Port5IsSetEv>:
     7fa:	dc 01       	movw	r26, r24
     7fc:	14 96       	adiw	r26, 0x04	; 4
     7fe:	ed 91       	ld	r30, X+
     800:	fc 91       	ld	r31, X
     802:	15 97       	sbiw	r26, 0x05	; 5
     804:	20 81       	ld	r18, Z
     806:	30 e0       	ldi	r19, 0x00	; 0
     808:	f9 01       	movw	r30, r18
     80a:	16 96       	adiw	r26, 0x06	; 6
     80c:	0c 90       	ld	r0, X
     80e:	02 c0       	rjmp	.+4      	; 0x814 <_ZN4Port5IsSetEv+0x1a>
     810:	f5 95       	asr	r31
     812:	e7 95       	ror	r30
     814:	0a 94       	dec	r0
     816:	e2 f7       	brpl	.-8      	; 0x810 <_ZN4Port5IsSetEv+0x16>
     818:	cf 01       	movw	r24, r30
     81a:	81 70       	andi	r24, 0x01	; 1
     81c:	08 95       	ret

0000081e <_ZN4PortnwEj>:

void* Port::operator new(size_t size)
{
     81e:	cf 93       	push	r28
     820:	df 93       	push	r29
     822:	ec 01       	movw	r28, r24
	void* ptr;
	do
	{
		ptr = malloc(size);
     824:	ce 01       	movw	r24, r28
     826:	45 d5       	rcall	.+2698   	; 0x12b2 <malloc>
	}while(ptr == nullptr);
     828:	00 97       	sbiw	r24, 0x00	; 0
     82a:	e1 f3       	breq	.-8      	; 0x824 <_ZN4PortnwEj+0x6>
	
	return ptr;
}
     82c:	df 91       	pop	r29
     82e:	cf 91       	pop	r28
     830:	08 95       	ret

00000832 <_ZN10SPI_MasterC1EP4PortS1_S1_S1_>:
{
	delete SCK;
	delete MOSI;
	delete MISO;
	delete SS;
}
     832:	0f 93       	push	r16
     834:	1f 93       	push	r17
     836:	cf 93       	push	r28
     838:	df 93       	push	r29
     83a:	ec 01       	movw	r28, r24
     83c:	cb 01       	movw	r24, r22
     83e:	79 83       	std	Y+1, r23	; 0x01
     840:	68 83       	st	Y, r22
     842:	5b 83       	std	Y+3, r21	; 0x03
     844:	4a 83       	std	Y+2, r20	; 0x02
     846:	3d 83       	std	Y+5, r19	; 0x05
     848:	2c 83       	std	Y+4, r18	; 0x04
     84a:	1f 83       	std	Y+7, r17	; 0x07
     84c:	0e 83       	std	Y+6, r16	; 0x06
     84e:	8a df       	rcall	.-236    	; 0x764 <_ZN4Port11SetAsOutputEv>
     850:	8a 81       	ldd	r24, Y+2	; 0x02
     852:	9b 81       	ldd	r25, Y+3	; 0x03
     854:	87 df       	rcall	.-242    	; 0x764 <_ZN4Port11SetAsOutputEv>
     856:	8c 81       	ldd	r24, Y+4	; 0x04
     858:	9d 81       	ldd	r25, Y+5	; 0x05
     85a:	97 df       	rcall	.-210    	; 0x78a <_ZN4Port3SetEv>
     85c:	8e 81       	ldd	r24, Y+6	; 0x06
     85e:	9f 81       	ldd	r25, Y+7	; 0x07
     860:	94 df       	rcall	.-216    	; 0x78a <_ZN4Port3SetEv>
     862:	8e 81       	ldd	r24, Y+6	; 0x06
     864:	9f 81       	ldd	r25, Y+7	; 0x07
     866:	7e df       	rcall	.-260    	; 0x764 <_ZN4Port11SetAsOutputEv>
     868:	8d b1       	in	r24, 0x0d	; 13
     86a:	83 65       	ori	r24, 0x53	; 83
     86c:	8d b9       	out	0x0d, r24	; 13
     86e:	df 91       	pop	r29
     870:	cf 91       	pop	r28
     872:	1f 91       	pop	r17
     874:	0f 91       	pop	r16
     876:	08 95       	ret

00000878 <_ZN10SPI_Master7SetModeE12SPI_Polarity9SPI_Phase>:
     878:	8d b1       	in	r24, 0x0d	; 13
     87a:	88 70       	andi	r24, 0x08	; 8
     87c:	86 17       	cp	r24, r22
     87e:	59 f0       	breq	.+22     	; 0x896 <_ZN10SPI_Master7SetModeE12SPI_Polarity9SPI_Phase+0x1e>
     880:	61 11       	cpse	r22, r1
     882:	04 c0       	rjmp	.+8      	; 0x88c <_ZN10SPI_Master7SetModeE12SPI_Polarity9SPI_Phase+0x14>
     884:	8d b1       	in	r24, 0x0d	; 13
     886:	87 7f       	andi	r24, 0xF7	; 247
     888:	8d b9       	out	0x0d, r24	; 13
     88a:	05 c0       	rjmp	.+10     	; 0x896 <_ZN10SPI_Master7SetModeE12SPI_Polarity9SPI_Phase+0x1e>
     88c:	61 30       	cpi	r22, 0x01	; 1
     88e:	19 f4       	brne	.+6      	; 0x896 <_ZN10SPI_Master7SetModeE12SPI_Polarity9SPI_Phase+0x1e>
     890:	8d b1       	in	r24, 0x0d	; 13
     892:	88 60       	ori	r24, 0x08	; 8
     894:	8d b9       	out	0x0d, r24	; 13
     896:	8d b1       	in	r24, 0x0d	; 13
     898:	84 70       	andi	r24, 0x04	; 4
     89a:	84 17       	cp	r24, r20
     89c:	59 f0       	breq	.+22     	; 0x8b4 <_ZN10SPI_Master7SetModeE12SPI_Polarity9SPI_Phase+0x3c>
     89e:	41 11       	cpse	r20, r1
     8a0:	04 c0       	rjmp	.+8      	; 0x8aa <_ZN10SPI_Master7SetModeE12SPI_Polarity9SPI_Phase+0x32>
     8a2:	8d b1       	in	r24, 0x0d	; 13
     8a4:	8b 7f       	andi	r24, 0xFB	; 251
     8a6:	8d b9       	out	0x0d, r24	; 13
     8a8:	08 95       	ret
     8aa:	41 30       	cpi	r20, 0x01	; 1
     8ac:	19 f4       	brne	.+6      	; 0x8b4 <_ZN10SPI_Master7SetModeE12SPI_Polarity9SPI_Phase+0x3c>
     8ae:	8d b1       	in	r24, 0x0d	; 13
     8b0:	84 60       	ori	r24, 0x04	; 4
     8b2:	8d b9       	out	0x0d, r24	; 13
     8b4:	08 95       	ret

000008b6 <_ZN10SPI_Master8SendByteEh>:
     8b6:	6f b9       	out	0x0f, r22	; 15
     8b8:	77 9b       	sbis	0x0e, 7	; 14
     8ba:	fe cf       	rjmp	.-4      	; 0x8b8 <_ZN10SPI_Master8SendByteEh+0x2>
     8bc:	08 95       	ret

000008be <_ZN10SPI_Master11ReceiveByteEv>:
     8be:	8f b1       	in	r24, 0x0f	; 15
     8c0:	08 95       	ret

000008c2 <_ZN10SPI_MasternwEj>:

void* SPI_Master::operator new(size_t size)
{
     8c2:	cf 93       	push	r28
     8c4:	df 93       	push	r29
     8c6:	ec 01       	movw	r28, r24
	void* ptr;
	do
	{
		ptr = malloc(size);
     8c8:	ce 01       	movw	r24, r28
     8ca:	f3 d4       	rcall	.+2534   	; 0x12b2 <malloc>
	}while(ptr == nullptr);
     8cc:	00 97       	sbiw	r24, 0x00	; 0
     8ce:	e1 f3       	breq	.-8      	; 0x8c8 <_ZN10SPI_MasternwEj+0x6>
	
	return ptr;
}
     8d0:	df 91       	pop	r29
     8d2:	cf 91       	pop	r28
     8d4:	08 95       	ret

000008d6 <_ZN13StringHandler13FloatToStringEfh>:
#include "StringHandler.h"

const char* StringHandler::FloatToString(float value, uint8_t digitsAfterDot)
{
     8d6:	2f 92       	push	r2
     8d8:	3f 92       	push	r3
     8da:	4f 92       	push	r4
     8dc:	5f 92       	push	r5
     8de:	6f 92       	push	r6
     8e0:	7f 92       	push	r7
     8e2:	8f 92       	push	r8
     8e4:	9f 92       	push	r9
     8e6:	af 92       	push	r10
     8e8:	bf 92       	push	r11
     8ea:	cf 92       	push	r12
     8ec:	df 92       	push	r13
     8ee:	ef 92       	push	r14
     8f0:	ff 92       	push	r15
     8f2:	0f 93       	push	r16
     8f4:	1f 93       	push	r17
     8f6:	cf 93       	push	r28
     8f8:	df 93       	push	r29
     8fa:	00 d0       	rcall	.+0      	; 0x8fc <_ZN13StringHandler13FloatToStringEfh+0x26>
     8fc:	00 d0       	rcall	.+0      	; 0x8fe <_ZN13StringHandler13FloatToStringEfh+0x28>
     8fe:	00 d0       	rcall	.+0      	; 0x900 <_ZN13StringHandler13FloatToStringEfh+0x2a>
     900:	cd b7       	in	r28, 0x3d	; 61
     902:	de b7       	in	r29, 0x3e	; 62
     904:	2b 01       	movw	r4, r22
     906:	3c 01       	movw	r6, r24
     908:	94 2e       	mov	r9, r20
	fractionalPartDigitsArray[digitsAfterDot] = '\0';	
			
	strlcat(resultString, fractionalPartDigitsArray, stringLength);	
	
	return resultString;
}
     90a:	2d b6       	in	r2, 0x3d	; 61
     90c:	3e b6       	in	r3, 0x3e	; 62
#include "StringHandler.h"

const char* StringHandler::FloatToString(float value, uint8_t digitsAfterDot)
{
	uint32_t integerPart = fabs(value);
     90e:	9f 77       	andi	r25, 0x7F	; 127
     910:	6b 83       	std	Y+3, r22	; 0x03
     912:	7c 83       	std	Y+4, r23	; 0x04
     914:	8d 83       	std	Y+5, r24	; 0x05
     916:	9e 83       	std	Y+6, r25	; 0x06
     918:	61 d1       	rcall	.+706    	; 0xbdc <__fixunssfsi>
     91a:	a6 2e       	mov	r10, r22
     91c:	b7 2e       	mov	r11, r23
     91e:	c8 2e       	mov	r12, r24
     920:	d9 2e       	mov	r13, r25
     922:	26 2f       	mov	r18, r22
     924:	37 2f       	mov	r19, r23
     926:	48 2f       	mov	r20, r24
     928:	59 2f       	mov	r21, r25
	
	uint8_t stringLength = 0;	
     92a:	81 2c       	mov	r8, r1
     92c:	01 c0       	rjmp	.+2      	; 0x930 <_ZN13StringHandler13FloatToStringEfh+0x5a>
	do
	{
		integerPart /= 10;
		stringLength++;
     92e:	8f 2c       	mov	r8, r15
	uint32_t integerPart = fabs(value);
	
	uint8_t stringLength = 0;	
	do
	{
		integerPart /= 10;
     930:	ca 01       	movw	r24, r20
     932:	b9 01       	movw	r22, r18
     934:	2a e0       	ldi	r18, 0x0A	; 10
     936:	30 e0       	ldi	r19, 0x00	; 0
     938:	40 e0       	ldi	r20, 0x00	; 0
     93a:	50 e0       	ldi	r21, 0x00	; 0
     93c:	98 d4       	rcall	.+2352   	; 0x126e <__udivmodsi4>
		stringLength++;
     93e:	ff 24       	eor	r15, r15
     940:	f3 94       	inc	r15
     942:	f8 0c       	add	r15, r8
	}
	while(integerPart > 0);
     944:	21 15       	cp	r18, r1
     946:	31 05       	cpc	r19, r1
     948:	41 05       	cpc	r20, r1
     94a:	51 05       	cpc	r21, r1
     94c:	81 f7       	brne	.-32     	; 0x92e <_ZN13StringHandler13FloatToStringEfh+0x58>
	
	integerPart = fabs(value);
	
	uint8_t integerPartLength = stringLength;
	
	if(digitsAfterDot > 0)
     94e:	99 20       	and	r9, r9
     950:	21 f0       	breq	.+8      	; 0x95a <_ZN13StringHandler13FloatToStringEfh+0x84>
	{
		stringLength++;										//for '.'
     952:	83 94       	inc	r8
     954:	83 94       	inc	r8
		stringLength += digitsAfterDot;						//for .xxxxx
     956:	89 0c       	add	r8, r9
     958:	01 c0       	rjmp	.+2      	; 0x95c <_ZN13StringHandler13FloatToStringEfh+0x86>
	
	uint8_t stringLength = 0;	
	do
	{
		integerPart /= 10;
		stringLength++;
     95a:	8f 2c       	mov	r8, r15
	{
		stringLength++;										//for '.'
		stringLength += digitsAfterDot;						//for .xxxxx
	}
	
	if(value < 0) stringLength++;							//for '-'
     95c:	20 e0       	ldi	r18, 0x00	; 0
     95e:	30 e0       	ldi	r19, 0x00	; 0
     960:	a9 01       	movw	r20, r18
     962:	c3 01       	movw	r24, r6
     964:	b2 01       	movw	r22, r4
     966:	36 d1       	rcall	.+620    	; 0xbd4 <__cmpsf2>
     968:	88 23       	and	r24, r24
     96a:	0c f4       	brge	.+2      	; 0x96e <_ZN13StringHandler13FloatToStringEfh+0x98>
     96c:	83 94       	inc	r8
	
	stringLength++;											//for '\0'	
     96e:	83 94       	inc	r8
			
	char integerPartDigitsArray[integerPartLength + 1];		// "+ 1" for '\0'
     970:	8f 2d       	mov	r24, r15
     972:	90 e0       	ldi	r25, 0x00	; 0
     974:	01 96       	adiw	r24, 0x01	; 1
     976:	ad b7       	in	r26, 0x3d	; 61
     978:	be b7       	in	r27, 0x3e	; 62
     97a:	a8 1b       	sub	r26, r24
     97c:	b9 0b       	sbc	r27, r25
     97e:	0f b6       	in	r0, 0x3f	; 63
     980:	f8 94       	cli
     982:	be bf       	out	0x3e, r27	; 62
     984:	0f be       	out	0x3f, r0	; 63
     986:	ad bf       	out	0x3d, r26	; 61
     988:	2d b7       	in	r18, 0x3d	; 61
     98a:	3e b7       	in	r19, 0x3e	; 62
     98c:	2f 5f       	subi	r18, 0xFF	; 255
     98e:	3f 4f       	sbci	r19, 0xFF	; 255
     990:	3a 83       	std	Y+2, r19	; 0x02
     992:	29 83       	std	Y+1, r18	; 0x01
     994:	89 01       	movw	r16, r18
			
	for(uint8_t i = 1; i <= integerPartLength; i++)
     996:	ee 24       	eor	r14, r14
     998:	e3 94       	inc	r14
     99a:	fe 14       	cp	r15, r14
     99c:	b8 f0       	brcs	.+46     	; 0x9cc <_ZN13StringHandler13FloatToStringEfh+0xf6>
	{
		uint8_t dig = integerPart % 10;
				
		integerPart /= 10;
     99e:	6a 2d       	mov	r22, r10
     9a0:	7b 2d       	mov	r23, r11
     9a2:	8c 2d       	mov	r24, r12
     9a4:	9d 2d       	mov	r25, r13
     9a6:	2a e0       	ldi	r18, 0x0A	; 10
     9a8:	30 e0       	ldi	r19, 0x00	; 0
     9aa:	40 e0       	ldi	r20, 0x00	; 0
     9ac:	50 e0       	ldi	r21, 0x00	; 0
     9ae:	5f d4       	rcall	.+2238   	; 0x126e <__udivmodsi4>
     9b0:	a2 2e       	mov	r10, r18
     9b2:	b3 2e       	mov	r11, r19
     9b4:	c4 2e       	mov	r12, r20
     9b6:	d5 2e       	mov	r13, r21
				
		integerPartDigitsArray[integerPartLength - i] = dig + '0';
     9b8:	ef 2d       	mov	r30, r15
     9ba:	f0 e0       	ldi	r31, 0x00	; 0
     9bc:	ee 19       	sub	r30, r14
     9be:	f1 09       	sbc	r31, r1
     9c0:	e0 0f       	add	r30, r16
     9c2:	f1 1f       	adc	r31, r17
     9c4:	60 5d       	subi	r22, 0xD0	; 208
     9c6:	60 83       	st	Z, r22
	
	stringLength++;											//for '\0'	
			
	char integerPartDigitsArray[integerPartLength + 1];		// "+ 1" for '\0'
			
	for(uint8_t i = 1; i <= integerPartLength; i++)
     9c8:	e3 94       	inc	r14
     9ca:	e7 cf       	rjmp	.-50     	; 0x99a <_ZN13StringHandler13FloatToStringEfh+0xc4>
		integerPart /= 10;
				
		integerPartDigitsArray[integerPartLength - i] = dig + '0';
	}
	
	integerPartDigitsArray[integerPartLength] = '\0';
     9cc:	e9 81       	ldd	r30, Y+1	; 0x01
     9ce:	fa 81       	ldd	r31, Y+2	; 0x02
     9d0:	ef 0d       	add	r30, r15
     9d2:	f1 1d       	adc	r31, r1
     9d4:	10 82       	st	Z, r1
				
	char* resultString;
	do 
	{
		resultString = (char*)malloc(stringLength);
     9d6:	e8 2c       	mov	r14, r8
     9d8:	f1 2c       	mov	r15, r1
     9da:	c7 01       	movw	r24, r14
     9dc:	6a d4       	rcall	.+2260   	; 0x12b2 <malloc>
     9de:	8c 01       	movw	r16, r24
	}while(resultString == NULL);
     9e0:	89 2b       	or	r24, r25
     9e2:	c9 f3       	breq	.-14     	; 0x9d6 <_ZN13StringHandler13FloatToStringEfh+0x100>
	 
			
	if(value < 0)
     9e4:	20 e0       	ldi	r18, 0x00	; 0
     9e6:	30 e0       	ldi	r19, 0x00	; 0
     9e8:	a9 01       	movw	r20, r18
     9ea:	c3 01       	movw	r24, r6
     9ec:	b2 01       	movw	r22, r4
     9ee:	f2 d0       	rcall	.+484    	; 0xbd4 <__cmpsf2>
     9f0:	88 23       	and	r24, r24
     9f2:	5c f4       	brge	.+22     	; 0xa0a <_ZN13StringHandler13FloatToStringEfh+0x134>
	{
		strlcpy(resultString, "-", stringLength);
     9f4:	a7 01       	movw	r20, r14
     9f6:	66 e6       	ldi	r22, 0x66	; 102
     9f8:	70 e0       	ldi	r23, 0x00	; 0
     9fa:	c8 01       	movw	r24, r16
     9fc:	9a d5       	rcall	.+2868   	; 0x1532 <strlcpy>
		strlcat(resultString, integerPartDigitsArray, stringLength);
     9fe:	a7 01       	movw	r20, r14
     a00:	69 81       	ldd	r22, Y+1	; 0x01
     a02:	7a 81       	ldd	r23, Y+2	; 0x02
     a04:	c8 01       	movw	r24, r16
     a06:	76 d5       	rcall	.+2796   	; 0x14f4 <strlcat>
     a08:	05 c0       	rjmp	.+10     	; 0xa14 <_ZN13StringHandler13FloatToStringEfh+0x13e>
	}
	else strlcpy(resultString, integerPartDigitsArray, stringLength);
     a0a:	a7 01       	movw	r20, r14
     a0c:	69 81       	ldd	r22, Y+1	; 0x01
     a0e:	7a 81       	ldd	r23, Y+2	; 0x02
     a10:	c8 01       	movw	r24, r16
     a12:	8f d5       	rcall	.+2846   	; 0x1532 <strlcpy>
	
	if(digitsAfterDot == 0)
     a14:	99 20       	and	r9, r9
     a16:	09 f4       	brne	.+2      	; 0xa1a <_ZN13StringHandler13FloatToStringEfh+0x144>
     a18:	59 c0       	rjmp	.+178    	; 0xacc <_ZN13StringHandler13FloatToStringEfh+0x1f6>
	{		
		return resultString;
	}
		
	strlcat(resultString, ".", stringLength);
     a1a:	a7 01       	movw	r20, r14
     a1c:	68 e6       	ldi	r22, 0x68	; 104
     a1e:	70 e0       	ldi	r23, 0x00	; 0
     a20:	c8 01       	movw	r24, r16
     a22:	68 d5       	rcall	.+2768   	; 0x14f4 <strlcat>
		
	value = fabs(value) - integerPart;	
     a24:	6a 2d       	mov	r22, r10
     a26:	7b 2d       	mov	r23, r11
     a28:	8c 2d       	mov	r24, r12
     a2a:	9d 2d       	mov	r25, r13
     a2c:	03 d1       	rcall	.+518    	; 0xc34 <__floatunsisf>
     a2e:	9b 01       	movw	r18, r22
     a30:	ac 01       	movw	r20, r24
     a32:	6b 81       	ldd	r22, Y+3	; 0x03
     a34:	7c 81       	ldd	r23, Y+4	; 0x04
     a36:	8d 81       	ldd	r24, Y+5	; 0x05
     a38:	9e 81       	ldd	r25, Y+6	; 0x06
     a3a:	67 d0       	rcall	.+206    	; 0xb0a <__subsf3>
     a3c:	2b 01       	movw	r4, r22
     a3e:	3c 01       	movw	r6, r24
			
	uint32_t mult = (uint32_t)round(pow(10, digitsAfterDot));
     a40:	69 2d       	mov	r22, r9
     a42:	70 e0       	ldi	r23, 0x00	; 0
     a44:	80 e0       	ldi	r24, 0x00	; 0
     a46:	90 e0       	ldi	r25, 0x00	; 0
     a48:	f5 d0       	rcall	.+490    	; 0xc34 <__floatunsisf>
     a4a:	9b 01       	movw	r18, r22
     a4c:	ac 01       	movw	r20, r24
     a4e:	60 e0       	ldi	r22, 0x00	; 0
     a50:	70 e0       	ldi	r23, 0x00	; 0
     a52:	80 e2       	ldi	r24, 0x20	; 32
     a54:	91 e4       	ldi	r25, 0x41	; 65
     a56:	03 d2       	rcall	.+1030   	; 0xe5e <pow>
     a58:	4e d2       	rcall	.+1180   	; 0xef6 <round>
     a5a:	c0 d0       	rcall	.+384    	; 0xbdc <__fixunssfsi>
	
	uint32_t fractionalPart = (uint32_t)round(value * mult);
     a5c:	eb d0       	rcall	.+470    	; 0xc34 <__floatunsisf>
     a5e:	9b 01       	movw	r18, r22
     a60:	ac 01       	movw	r20, r24
     a62:	c3 01       	movw	r24, r6
     a64:	b2 01       	movw	r22, r4
     a66:	98 d1       	rcall	.+816    	; 0xd98 <__mulsf3>
     a68:	46 d2       	rcall	.+1164   	; 0xef6 <round>
     a6a:	b8 d0       	rcall	.+368    	; 0xbdc <__fixunssfsi>
     a6c:	9b 01       	movw	r18, r22
     a6e:	ac 01       	movw	r20, r24
			
	char fractionalPartDigitsArray[digitsAfterDot + 1];		//for '\0'
     a70:	89 2d       	mov	r24, r9
     a72:	90 e0       	ldi	r25, 0x00	; 0
     a74:	01 96       	adiw	r24, 0x01	; 1
     a76:	6d b7       	in	r22, 0x3d	; 61
     a78:	7e b7       	in	r23, 0x3e	; 62
     a7a:	68 1b       	sub	r22, r24
     a7c:	79 0b       	sbc	r23, r25
     a7e:	0f b6       	in	r0, 0x3f	; 63
     a80:	f8 94       	cli
     a82:	7e bf       	out	0x3e, r23	; 62
     a84:	0f be       	out	0x3f, r0	; 63
     a86:	6d bf       	out	0x3d, r22	; 61
     a88:	8d b7       	in	r24, 0x3d	; 61
     a8a:	9e b7       	in	r25, 0x3e	; 62
     a8c:	01 96       	adiw	r24, 0x01	; 1
     a8e:	5c 01       	movw	r10, r24
     a90:	6c 01       	movw	r12, r24
			
	for(uint8_t i = 1; i <= digitsAfterDot; i++)
     a92:	88 24       	eor	r8, r8
     a94:	83 94       	inc	r8
     a96:	98 14       	cp	r9, r8
     a98:	88 f0       	brcs	.+34     	; 0xabc <_ZN13StringHandler13FloatToStringEfh+0x1e6>
	{
		uint8_t dig = fractionalPart % 10;
				
		fractionalPart /= 10;
     a9a:	ca 01       	movw	r24, r20
     a9c:	b9 01       	movw	r22, r18
     a9e:	2a e0       	ldi	r18, 0x0A	; 10
     aa0:	30 e0       	ldi	r19, 0x00	; 0
     aa2:	40 e0       	ldi	r20, 0x00	; 0
     aa4:	50 e0       	ldi	r21, 0x00	; 0
     aa6:	e3 d3       	rcall	.+1990   	; 0x126e <__udivmodsi4>
				
		fractionalPartDigitsArray[digitsAfterDot - i] = dig + '0';
     aa8:	e9 2d       	mov	r30, r9
     aaa:	f0 e0       	ldi	r31, 0x00	; 0
     aac:	e8 19       	sub	r30, r8
     aae:	f1 09       	sbc	r31, r1
     ab0:	ec 0d       	add	r30, r12
     ab2:	fd 1d       	adc	r31, r13
     ab4:	60 5d       	subi	r22, 0xD0	; 208
     ab6:	60 83       	st	Z, r22
	
	uint32_t fractionalPart = (uint32_t)round(value * mult);
			
	char fractionalPartDigitsArray[digitsAfterDot + 1];		//for '\0'
			
	for(uint8_t i = 1; i <= digitsAfterDot; i++)
     ab8:	83 94       	inc	r8
     aba:	ed cf       	rjmp	.-38     	; 0xa96 <_ZN13StringHandler13FloatToStringEfh+0x1c0>
				
		fractionalPart /= 10;
				
		fractionalPartDigitsArray[digitsAfterDot - i] = dig + '0';
	}			
	fractionalPartDigitsArray[digitsAfterDot] = '\0';	
     abc:	f5 01       	movw	r30, r10
     abe:	e9 0d       	add	r30, r9
     ac0:	f1 1d       	adc	r31, r1
     ac2:	10 82       	st	Z, r1
			
	strlcat(resultString, fractionalPartDigitsArray, stringLength);	
     ac4:	a7 01       	movw	r20, r14
     ac6:	b5 01       	movw	r22, r10
     ac8:	c8 01       	movw	r24, r16
     aca:	14 d5       	rcall	.+2600   	; 0x14f4 <strlcat>
	
	return resultString;
}
     acc:	c8 01       	movw	r24, r16
     ace:	0f b6       	in	r0, 0x3f	; 63
     ad0:	f8 94       	cli
     ad2:	3e be       	out	0x3e, r3	; 62
     ad4:	0f be       	out	0x3f, r0	; 63
     ad6:	2d be       	out	0x3d, r2	; 61
     ad8:	26 96       	adiw	r28, 0x06	; 6
     ada:	0f b6       	in	r0, 0x3f	; 63
     adc:	f8 94       	cli
     ade:	de bf       	out	0x3e, r29	; 62
     ae0:	0f be       	out	0x3f, r0	; 63
     ae2:	cd bf       	out	0x3d, r28	; 61
     ae4:	df 91       	pop	r29
     ae6:	cf 91       	pop	r28
     ae8:	1f 91       	pop	r17
     aea:	0f 91       	pop	r16
     aec:	ff 90       	pop	r15
     aee:	ef 90       	pop	r14
     af0:	df 90       	pop	r13
     af2:	cf 90       	pop	r12
     af4:	bf 90       	pop	r11
     af6:	af 90       	pop	r10
     af8:	9f 90       	pop	r9
     afa:	8f 90       	pop	r8
     afc:	7f 90       	pop	r7
     afe:	6f 90       	pop	r6
     b00:	5f 90       	pop	r5
     b02:	4f 90       	pop	r4
     b04:	3f 90       	pop	r3
     b06:	2f 90       	pop	r2
     b08:	08 95       	ret

00000b0a <__subsf3>:
     b0a:	50 58       	subi	r21, 0x80	; 128

00000b0c <__addsf3>:
     b0c:	bb 27       	eor	r27, r27
     b0e:	aa 27       	eor	r26, r26
     b10:	0e d0       	rcall	.+28     	; 0xb2e <__addsf3x>
     b12:	08 c1       	rjmp	.+528    	; 0xd24 <__fp_round>
     b14:	f9 d0       	rcall	.+498    	; 0xd08 <__fp_pscA>
     b16:	30 f0       	brcs	.+12     	; 0xb24 <__addsf3+0x18>
     b18:	fe d0       	rcall	.+508    	; 0xd16 <__fp_pscB>
     b1a:	20 f0       	brcs	.+8      	; 0xb24 <__addsf3+0x18>
     b1c:	31 f4       	brne	.+12     	; 0xb2a <__addsf3+0x1e>
     b1e:	9f 3f       	cpi	r25, 0xFF	; 255
     b20:	11 f4       	brne	.+4      	; 0xb26 <__addsf3+0x1a>
     b22:	1e f4       	brtc	.+6      	; 0xb2a <__addsf3+0x1e>
     b24:	ee c0       	rjmp	.+476    	; 0xd02 <__fp_nan>
     b26:	0e f4       	brtc	.+2      	; 0xb2a <__addsf3+0x1e>
     b28:	e0 95       	com	r30
     b2a:	e7 fb       	bst	r30, 7
     b2c:	e4 c0       	rjmp	.+456    	; 0xcf6 <__fp_inf>

00000b2e <__addsf3x>:
     b2e:	e9 2f       	mov	r30, r25
     b30:	0a d1       	rcall	.+532    	; 0xd46 <__fp_split3>
     b32:	80 f3       	brcs	.-32     	; 0xb14 <__addsf3+0x8>
     b34:	ba 17       	cp	r27, r26
     b36:	62 07       	cpc	r22, r18
     b38:	73 07       	cpc	r23, r19
     b3a:	84 07       	cpc	r24, r20
     b3c:	95 07       	cpc	r25, r21
     b3e:	18 f0       	brcs	.+6      	; 0xb46 <__addsf3x+0x18>
     b40:	71 f4       	brne	.+28     	; 0xb5e <__addsf3x+0x30>
     b42:	9e f5       	brtc	.+102    	; 0xbaa <__addsf3x+0x7c>
     b44:	22 c1       	rjmp	.+580    	; 0xd8a <__fp_zero>
     b46:	0e f4       	brtc	.+2      	; 0xb4a <__addsf3x+0x1c>
     b48:	e0 95       	com	r30
     b4a:	0b 2e       	mov	r0, r27
     b4c:	ba 2f       	mov	r27, r26
     b4e:	a0 2d       	mov	r26, r0
     b50:	0b 01       	movw	r0, r22
     b52:	b9 01       	movw	r22, r18
     b54:	90 01       	movw	r18, r0
     b56:	0c 01       	movw	r0, r24
     b58:	ca 01       	movw	r24, r20
     b5a:	a0 01       	movw	r20, r0
     b5c:	11 24       	eor	r1, r1
     b5e:	ff 27       	eor	r31, r31
     b60:	59 1b       	sub	r21, r25
     b62:	99 f0       	breq	.+38     	; 0xb8a <__addsf3x+0x5c>
     b64:	59 3f       	cpi	r21, 0xF9	; 249
     b66:	50 f4       	brcc	.+20     	; 0xb7c <__addsf3x+0x4e>
     b68:	50 3e       	cpi	r21, 0xE0	; 224
     b6a:	68 f1       	brcs	.+90     	; 0xbc6 <__addsf3x+0x98>
     b6c:	1a 16       	cp	r1, r26
     b6e:	f0 40       	sbci	r31, 0x00	; 0
     b70:	a2 2f       	mov	r26, r18
     b72:	23 2f       	mov	r18, r19
     b74:	34 2f       	mov	r19, r20
     b76:	44 27       	eor	r20, r20
     b78:	58 5f       	subi	r21, 0xF8	; 248
     b7a:	f3 cf       	rjmp	.-26     	; 0xb62 <__addsf3x+0x34>
     b7c:	46 95       	lsr	r20
     b7e:	37 95       	ror	r19
     b80:	27 95       	ror	r18
     b82:	a7 95       	ror	r26
     b84:	f0 40       	sbci	r31, 0x00	; 0
     b86:	53 95       	inc	r21
     b88:	c9 f7       	brne	.-14     	; 0xb7c <__addsf3x+0x4e>
     b8a:	7e f4       	brtc	.+30     	; 0xbaa <__addsf3x+0x7c>
     b8c:	1f 16       	cp	r1, r31
     b8e:	ba 0b       	sbc	r27, r26
     b90:	62 0b       	sbc	r22, r18
     b92:	73 0b       	sbc	r23, r19
     b94:	84 0b       	sbc	r24, r20
     b96:	ba f0       	brmi	.+46     	; 0xbc6 <__addsf3x+0x98>
     b98:	91 50       	subi	r25, 0x01	; 1
     b9a:	a1 f0       	breq	.+40     	; 0xbc4 <__addsf3x+0x96>
     b9c:	ff 0f       	add	r31, r31
     b9e:	bb 1f       	adc	r27, r27
     ba0:	66 1f       	adc	r22, r22
     ba2:	77 1f       	adc	r23, r23
     ba4:	88 1f       	adc	r24, r24
     ba6:	c2 f7       	brpl	.-16     	; 0xb98 <__addsf3x+0x6a>
     ba8:	0e c0       	rjmp	.+28     	; 0xbc6 <__addsf3x+0x98>
     baa:	ba 0f       	add	r27, r26
     bac:	62 1f       	adc	r22, r18
     bae:	73 1f       	adc	r23, r19
     bb0:	84 1f       	adc	r24, r20
     bb2:	48 f4       	brcc	.+18     	; 0xbc6 <__addsf3x+0x98>
     bb4:	87 95       	ror	r24
     bb6:	77 95       	ror	r23
     bb8:	67 95       	ror	r22
     bba:	b7 95       	ror	r27
     bbc:	f7 95       	ror	r31
     bbe:	9e 3f       	cpi	r25, 0xFE	; 254
     bc0:	08 f0       	brcs	.+2      	; 0xbc4 <__addsf3x+0x96>
     bc2:	b3 cf       	rjmp	.-154    	; 0xb2a <__addsf3+0x1e>
     bc4:	93 95       	inc	r25
     bc6:	88 0f       	add	r24, r24
     bc8:	08 f0       	brcs	.+2      	; 0xbcc <__addsf3x+0x9e>
     bca:	99 27       	eor	r25, r25
     bcc:	ee 0f       	add	r30, r30
     bce:	97 95       	ror	r25
     bd0:	87 95       	ror	r24
     bd2:	08 95       	ret

00000bd4 <__cmpsf2>:
     bd4:	6c d0       	rcall	.+216    	; 0xcae <__fp_cmp>
     bd6:	08 f4       	brcc	.+2      	; 0xbda <__cmpsf2+0x6>
     bd8:	81 e0       	ldi	r24, 0x01	; 1
     bda:	08 95       	ret

00000bdc <__fixunssfsi>:
     bdc:	bc d0       	rcall	.+376    	; 0xd56 <__fp_splitA>
     bde:	88 f0       	brcs	.+34     	; 0xc02 <__fixunssfsi+0x26>
     be0:	9f 57       	subi	r25, 0x7F	; 127
     be2:	90 f0       	brcs	.+36     	; 0xc08 <__fixunssfsi+0x2c>
     be4:	b9 2f       	mov	r27, r25
     be6:	99 27       	eor	r25, r25
     be8:	b7 51       	subi	r27, 0x17	; 23
     bea:	a0 f0       	brcs	.+40     	; 0xc14 <__fixunssfsi+0x38>
     bec:	d1 f0       	breq	.+52     	; 0xc22 <__fixunssfsi+0x46>
     bee:	66 0f       	add	r22, r22
     bf0:	77 1f       	adc	r23, r23
     bf2:	88 1f       	adc	r24, r24
     bf4:	99 1f       	adc	r25, r25
     bf6:	1a f0       	brmi	.+6      	; 0xbfe <__fixunssfsi+0x22>
     bf8:	ba 95       	dec	r27
     bfa:	c9 f7       	brne	.-14     	; 0xbee <__fixunssfsi+0x12>
     bfc:	12 c0       	rjmp	.+36     	; 0xc22 <__fixunssfsi+0x46>
     bfe:	b1 30       	cpi	r27, 0x01	; 1
     c00:	81 f0       	breq	.+32     	; 0xc22 <__fixunssfsi+0x46>
     c02:	c3 d0       	rcall	.+390    	; 0xd8a <__fp_zero>
     c04:	b1 e0       	ldi	r27, 0x01	; 1
     c06:	08 95       	ret
     c08:	c0 c0       	rjmp	.+384    	; 0xd8a <__fp_zero>
     c0a:	67 2f       	mov	r22, r23
     c0c:	78 2f       	mov	r23, r24
     c0e:	88 27       	eor	r24, r24
     c10:	b8 5f       	subi	r27, 0xF8	; 248
     c12:	39 f0       	breq	.+14     	; 0xc22 <__fixunssfsi+0x46>
     c14:	b9 3f       	cpi	r27, 0xF9	; 249
     c16:	cc f3       	brlt	.-14     	; 0xc0a <__fixunssfsi+0x2e>
     c18:	86 95       	lsr	r24
     c1a:	77 95       	ror	r23
     c1c:	67 95       	ror	r22
     c1e:	b3 95       	inc	r27
     c20:	d9 f7       	brne	.-10     	; 0xc18 <__fixunssfsi+0x3c>
     c22:	3e f4       	brtc	.+14     	; 0xc32 <__fixunssfsi+0x56>
     c24:	90 95       	com	r25
     c26:	80 95       	com	r24
     c28:	70 95       	com	r23
     c2a:	61 95       	neg	r22
     c2c:	7f 4f       	sbci	r23, 0xFF	; 255
     c2e:	8f 4f       	sbci	r24, 0xFF	; 255
     c30:	9f 4f       	sbci	r25, 0xFF	; 255
     c32:	08 95       	ret

00000c34 <__floatunsisf>:
     c34:	e8 94       	clt
     c36:	09 c0       	rjmp	.+18     	; 0xc4a <__floatsisf+0x12>

00000c38 <__floatsisf>:
     c38:	97 fb       	bst	r25, 7
     c3a:	3e f4       	brtc	.+14     	; 0xc4a <__floatsisf+0x12>
     c3c:	90 95       	com	r25
     c3e:	80 95       	com	r24
     c40:	70 95       	com	r23
     c42:	61 95       	neg	r22
     c44:	7f 4f       	sbci	r23, 0xFF	; 255
     c46:	8f 4f       	sbci	r24, 0xFF	; 255
     c48:	9f 4f       	sbci	r25, 0xFF	; 255
     c4a:	99 23       	and	r25, r25
     c4c:	a9 f0       	breq	.+42     	; 0xc78 <__floatsisf+0x40>
     c4e:	f9 2f       	mov	r31, r25
     c50:	96 e9       	ldi	r25, 0x96	; 150
     c52:	bb 27       	eor	r27, r27
     c54:	93 95       	inc	r25
     c56:	f6 95       	lsr	r31
     c58:	87 95       	ror	r24
     c5a:	77 95       	ror	r23
     c5c:	67 95       	ror	r22
     c5e:	b7 95       	ror	r27
     c60:	f1 11       	cpse	r31, r1
     c62:	f8 cf       	rjmp	.-16     	; 0xc54 <__floatsisf+0x1c>
     c64:	fa f4       	brpl	.+62     	; 0xca4 <__floatsisf+0x6c>
     c66:	bb 0f       	add	r27, r27
     c68:	11 f4       	brne	.+4      	; 0xc6e <__floatsisf+0x36>
     c6a:	60 ff       	sbrs	r22, 0
     c6c:	1b c0       	rjmp	.+54     	; 0xca4 <__floatsisf+0x6c>
     c6e:	6f 5f       	subi	r22, 0xFF	; 255
     c70:	7f 4f       	sbci	r23, 0xFF	; 255
     c72:	8f 4f       	sbci	r24, 0xFF	; 255
     c74:	9f 4f       	sbci	r25, 0xFF	; 255
     c76:	16 c0       	rjmp	.+44     	; 0xca4 <__floatsisf+0x6c>
     c78:	88 23       	and	r24, r24
     c7a:	11 f0       	breq	.+4      	; 0xc80 <__floatsisf+0x48>
     c7c:	96 e9       	ldi	r25, 0x96	; 150
     c7e:	11 c0       	rjmp	.+34     	; 0xca2 <__floatsisf+0x6a>
     c80:	77 23       	and	r23, r23
     c82:	21 f0       	breq	.+8      	; 0xc8c <__floatsisf+0x54>
     c84:	9e e8       	ldi	r25, 0x8E	; 142
     c86:	87 2f       	mov	r24, r23
     c88:	76 2f       	mov	r23, r22
     c8a:	05 c0       	rjmp	.+10     	; 0xc96 <__floatsisf+0x5e>
     c8c:	66 23       	and	r22, r22
     c8e:	71 f0       	breq	.+28     	; 0xcac <__floatsisf+0x74>
     c90:	96 e8       	ldi	r25, 0x86	; 134
     c92:	86 2f       	mov	r24, r22
     c94:	70 e0       	ldi	r23, 0x00	; 0
     c96:	60 e0       	ldi	r22, 0x00	; 0
     c98:	2a f0       	brmi	.+10     	; 0xca4 <__floatsisf+0x6c>
     c9a:	9a 95       	dec	r25
     c9c:	66 0f       	add	r22, r22
     c9e:	77 1f       	adc	r23, r23
     ca0:	88 1f       	adc	r24, r24
     ca2:	da f7       	brpl	.-10     	; 0xc9a <__floatsisf+0x62>
     ca4:	88 0f       	add	r24, r24
     ca6:	96 95       	lsr	r25
     ca8:	87 95       	ror	r24
     caa:	97 f9       	bld	r25, 7
     cac:	08 95       	ret

00000cae <__fp_cmp>:
     cae:	99 0f       	add	r25, r25
     cb0:	00 08       	sbc	r0, r0
     cb2:	55 0f       	add	r21, r21
     cb4:	aa 0b       	sbc	r26, r26
     cb6:	e0 e8       	ldi	r30, 0x80	; 128
     cb8:	fe ef       	ldi	r31, 0xFE	; 254
     cba:	16 16       	cp	r1, r22
     cbc:	17 06       	cpc	r1, r23
     cbe:	e8 07       	cpc	r30, r24
     cc0:	f9 07       	cpc	r31, r25
     cc2:	c0 f0       	brcs	.+48     	; 0xcf4 <__fp_cmp+0x46>
     cc4:	12 16       	cp	r1, r18
     cc6:	13 06       	cpc	r1, r19
     cc8:	e4 07       	cpc	r30, r20
     cca:	f5 07       	cpc	r31, r21
     ccc:	98 f0       	brcs	.+38     	; 0xcf4 <__fp_cmp+0x46>
     cce:	62 1b       	sub	r22, r18
     cd0:	73 0b       	sbc	r23, r19
     cd2:	84 0b       	sbc	r24, r20
     cd4:	95 0b       	sbc	r25, r21
     cd6:	39 f4       	brne	.+14     	; 0xce6 <__fp_cmp+0x38>
     cd8:	0a 26       	eor	r0, r26
     cda:	61 f0       	breq	.+24     	; 0xcf4 <__fp_cmp+0x46>
     cdc:	23 2b       	or	r18, r19
     cde:	24 2b       	or	r18, r20
     ce0:	25 2b       	or	r18, r21
     ce2:	21 f4       	brne	.+8      	; 0xcec <__fp_cmp+0x3e>
     ce4:	08 95       	ret
     ce6:	0a 26       	eor	r0, r26
     ce8:	09 f4       	brne	.+2      	; 0xcec <__fp_cmp+0x3e>
     cea:	a1 40       	sbci	r26, 0x01	; 1
     cec:	a6 95       	lsr	r26
     cee:	8f ef       	ldi	r24, 0xFF	; 255
     cf0:	81 1d       	adc	r24, r1
     cf2:	81 1d       	adc	r24, r1
     cf4:	08 95       	ret

00000cf6 <__fp_inf>:
     cf6:	97 f9       	bld	r25, 7
     cf8:	9f 67       	ori	r25, 0x7F	; 127
     cfa:	80 e8       	ldi	r24, 0x80	; 128
     cfc:	70 e0       	ldi	r23, 0x00	; 0
     cfe:	60 e0       	ldi	r22, 0x00	; 0
     d00:	08 95       	ret

00000d02 <__fp_nan>:
     d02:	9f ef       	ldi	r25, 0xFF	; 255
     d04:	80 ec       	ldi	r24, 0xC0	; 192
     d06:	08 95       	ret

00000d08 <__fp_pscA>:
     d08:	00 24       	eor	r0, r0
     d0a:	0a 94       	dec	r0
     d0c:	16 16       	cp	r1, r22
     d0e:	17 06       	cpc	r1, r23
     d10:	18 06       	cpc	r1, r24
     d12:	09 06       	cpc	r0, r25
     d14:	08 95       	ret

00000d16 <__fp_pscB>:
     d16:	00 24       	eor	r0, r0
     d18:	0a 94       	dec	r0
     d1a:	12 16       	cp	r1, r18
     d1c:	13 06       	cpc	r1, r19
     d1e:	14 06       	cpc	r1, r20
     d20:	05 06       	cpc	r0, r21
     d22:	08 95       	ret

00000d24 <__fp_round>:
     d24:	09 2e       	mov	r0, r25
     d26:	03 94       	inc	r0
     d28:	00 0c       	add	r0, r0
     d2a:	11 f4       	brne	.+4      	; 0xd30 <__fp_round+0xc>
     d2c:	88 23       	and	r24, r24
     d2e:	52 f0       	brmi	.+20     	; 0xd44 <__fp_round+0x20>
     d30:	bb 0f       	add	r27, r27
     d32:	40 f4       	brcc	.+16     	; 0xd44 <__fp_round+0x20>
     d34:	bf 2b       	or	r27, r31
     d36:	11 f4       	brne	.+4      	; 0xd3c <__fp_round+0x18>
     d38:	60 ff       	sbrs	r22, 0
     d3a:	04 c0       	rjmp	.+8      	; 0xd44 <__fp_round+0x20>
     d3c:	6f 5f       	subi	r22, 0xFF	; 255
     d3e:	7f 4f       	sbci	r23, 0xFF	; 255
     d40:	8f 4f       	sbci	r24, 0xFF	; 255
     d42:	9f 4f       	sbci	r25, 0xFF	; 255
     d44:	08 95       	ret

00000d46 <__fp_split3>:
     d46:	57 fd       	sbrc	r21, 7
     d48:	90 58       	subi	r25, 0x80	; 128
     d4a:	44 0f       	add	r20, r20
     d4c:	55 1f       	adc	r21, r21
     d4e:	59 f0       	breq	.+22     	; 0xd66 <__fp_splitA+0x10>
     d50:	5f 3f       	cpi	r21, 0xFF	; 255
     d52:	71 f0       	breq	.+28     	; 0xd70 <__fp_splitA+0x1a>
     d54:	47 95       	ror	r20

00000d56 <__fp_splitA>:
     d56:	88 0f       	add	r24, r24
     d58:	97 fb       	bst	r25, 7
     d5a:	99 1f       	adc	r25, r25
     d5c:	61 f0       	breq	.+24     	; 0xd76 <__fp_splitA+0x20>
     d5e:	9f 3f       	cpi	r25, 0xFF	; 255
     d60:	79 f0       	breq	.+30     	; 0xd80 <__fp_splitA+0x2a>
     d62:	87 95       	ror	r24
     d64:	08 95       	ret
     d66:	12 16       	cp	r1, r18
     d68:	13 06       	cpc	r1, r19
     d6a:	14 06       	cpc	r1, r20
     d6c:	55 1f       	adc	r21, r21
     d6e:	f2 cf       	rjmp	.-28     	; 0xd54 <__fp_split3+0xe>
     d70:	46 95       	lsr	r20
     d72:	f1 df       	rcall	.-30     	; 0xd56 <__fp_splitA>
     d74:	08 c0       	rjmp	.+16     	; 0xd86 <__fp_splitA+0x30>
     d76:	16 16       	cp	r1, r22
     d78:	17 06       	cpc	r1, r23
     d7a:	18 06       	cpc	r1, r24
     d7c:	99 1f       	adc	r25, r25
     d7e:	f1 cf       	rjmp	.-30     	; 0xd62 <__fp_splitA+0xc>
     d80:	86 95       	lsr	r24
     d82:	71 05       	cpc	r23, r1
     d84:	61 05       	cpc	r22, r1
     d86:	08 94       	sec
     d88:	08 95       	ret

00000d8a <__fp_zero>:
     d8a:	e8 94       	clt

00000d8c <__fp_szero>:
     d8c:	bb 27       	eor	r27, r27
     d8e:	66 27       	eor	r22, r22
     d90:	77 27       	eor	r23, r23
     d92:	cb 01       	movw	r24, r22
     d94:	97 f9       	bld	r25, 7
     d96:	08 95       	ret

00000d98 <__mulsf3>:
     d98:	0b d0       	rcall	.+22     	; 0xdb0 <__mulsf3x>
     d9a:	c4 cf       	rjmp	.-120    	; 0xd24 <__fp_round>
     d9c:	b5 df       	rcall	.-150    	; 0xd08 <__fp_pscA>
     d9e:	28 f0       	brcs	.+10     	; 0xdaa <__mulsf3+0x12>
     da0:	ba df       	rcall	.-140    	; 0xd16 <__fp_pscB>
     da2:	18 f0       	brcs	.+6      	; 0xdaa <__mulsf3+0x12>
     da4:	95 23       	and	r25, r21
     da6:	09 f0       	breq	.+2      	; 0xdaa <__mulsf3+0x12>
     da8:	a6 cf       	rjmp	.-180    	; 0xcf6 <__fp_inf>
     daa:	ab cf       	rjmp	.-170    	; 0xd02 <__fp_nan>
     dac:	11 24       	eor	r1, r1
     dae:	ee cf       	rjmp	.-36     	; 0xd8c <__fp_szero>

00000db0 <__mulsf3x>:
     db0:	ca df       	rcall	.-108    	; 0xd46 <__fp_split3>
     db2:	a0 f3       	brcs	.-24     	; 0xd9c <__mulsf3+0x4>

00000db4 <__mulsf3_pse>:
     db4:	95 9f       	mul	r25, r21
     db6:	d1 f3       	breq	.-12     	; 0xdac <__mulsf3+0x14>
     db8:	95 0f       	add	r25, r21
     dba:	50 e0       	ldi	r21, 0x00	; 0
     dbc:	55 1f       	adc	r21, r21
     dbe:	62 9f       	mul	r22, r18
     dc0:	f0 01       	movw	r30, r0
     dc2:	72 9f       	mul	r23, r18
     dc4:	bb 27       	eor	r27, r27
     dc6:	f0 0d       	add	r31, r0
     dc8:	b1 1d       	adc	r27, r1
     dca:	63 9f       	mul	r22, r19
     dcc:	aa 27       	eor	r26, r26
     dce:	f0 0d       	add	r31, r0
     dd0:	b1 1d       	adc	r27, r1
     dd2:	aa 1f       	adc	r26, r26
     dd4:	64 9f       	mul	r22, r20
     dd6:	66 27       	eor	r22, r22
     dd8:	b0 0d       	add	r27, r0
     dda:	a1 1d       	adc	r26, r1
     ddc:	66 1f       	adc	r22, r22
     dde:	82 9f       	mul	r24, r18
     de0:	22 27       	eor	r18, r18
     de2:	b0 0d       	add	r27, r0
     de4:	a1 1d       	adc	r26, r1
     de6:	62 1f       	adc	r22, r18
     de8:	73 9f       	mul	r23, r19
     dea:	b0 0d       	add	r27, r0
     dec:	a1 1d       	adc	r26, r1
     dee:	62 1f       	adc	r22, r18
     df0:	83 9f       	mul	r24, r19
     df2:	a0 0d       	add	r26, r0
     df4:	61 1d       	adc	r22, r1
     df6:	22 1f       	adc	r18, r18
     df8:	74 9f       	mul	r23, r20
     dfa:	33 27       	eor	r19, r19
     dfc:	a0 0d       	add	r26, r0
     dfe:	61 1d       	adc	r22, r1
     e00:	23 1f       	adc	r18, r19
     e02:	84 9f       	mul	r24, r20
     e04:	60 0d       	add	r22, r0
     e06:	21 1d       	adc	r18, r1
     e08:	82 2f       	mov	r24, r18
     e0a:	76 2f       	mov	r23, r22
     e0c:	6a 2f       	mov	r22, r26
     e0e:	11 24       	eor	r1, r1
     e10:	9f 57       	subi	r25, 0x7F	; 127
     e12:	50 40       	sbci	r21, 0x00	; 0
     e14:	8a f0       	brmi	.+34     	; 0xe38 <__mulsf3_pse+0x84>
     e16:	e1 f0       	breq	.+56     	; 0xe50 <__mulsf3_pse+0x9c>
     e18:	88 23       	and	r24, r24
     e1a:	4a f0       	brmi	.+18     	; 0xe2e <__mulsf3_pse+0x7a>
     e1c:	ee 0f       	add	r30, r30
     e1e:	ff 1f       	adc	r31, r31
     e20:	bb 1f       	adc	r27, r27
     e22:	66 1f       	adc	r22, r22
     e24:	77 1f       	adc	r23, r23
     e26:	88 1f       	adc	r24, r24
     e28:	91 50       	subi	r25, 0x01	; 1
     e2a:	50 40       	sbci	r21, 0x00	; 0
     e2c:	a9 f7       	brne	.-22     	; 0xe18 <__mulsf3_pse+0x64>
     e2e:	9e 3f       	cpi	r25, 0xFE	; 254
     e30:	51 05       	cpc	r21, r1
     e32:	70 f0       	brcs	.+28     	; 0xe50 <__mulsf3_pse+0x9c>
     e34:	60 cf       	rjmp	.-320    	; 0xcf6 <__fp_inf>
     e36:	aa cf       	rjmp	.-172    	; 0xd8c <__fp_szero>
     e38:	5f 3f       	cpi	r21, 0xFF	; 255
     e3a:	ec f3       	brlt	.-6      	; 0xe36 <__mulsf3_pse+0x82>
     e3c:	98 3e       	cpi	r25, 0xE8	; 232
     e3e:	dc f3       	brlt	.-10     	; 0xe36 <__mulsf3_pse+0x82>
     e40:	86 95       	lsr	r24
     e42:	77 95       	ror	r23
     e44:	67 95       	ror	r22
     e46:	b7 95       	ror	r27
     e48:	f7 95       	ror	r31
     e4a:	e7 95       	ror	r30
     e4c:	9f 5f       	subi	r25, 0xFF	; 255
     e4e:	c1 f7       	brne	.-16     	; 0xe40 <__mulsf3_pse+0x8c>
     e50:	fe 2b       	or	r31, r30
     e52:	88 0f       	add	r24, r24
     e54:	91 1d       	adc	r25, r1
     e56:	96 95       	lsr	r25
     e58:	87 95       	ror	r24
     e5a:	97 f9       	bld	r25, 7
     e5c:	08 95       	ret

00000e5e <pow>:
     e5e:	fa 01       	movw	r30, r20
     e60:	ee 0f       	add	r30, r30
     e62:	ff 1f       	adc	r31, r31
     e64:	30 96       	adiw	r30, 0x00	; 0
     e66:	21 05       	cpc	r18, r1
     e68:	31 05       	cpc	r19, r1
     e6a:	99 f1       	breq	.+102    	; 0xed2 <pow+0x74>
     e6c:	61 15       	cp	r22, r1
     e6e:	71 05       	cpc	r23, r1
     e70:	61 f4       	brne	.+24     	; 0xe8a <pow+0x2c>
     e72:	80 38       	cpi	r24, 0x80	; 128
     e74:	bf e3       	ldi	r27, 0x3F	; 63
     e76:	9b 07       	cpc	r25, r27
     e78:	49 f1       	breq	.+82     	; 0xecc <pow+0x6e>
     e7a:	68 94       	set
     e7c:	90 38       	cpi	r25, 0x80	; 128
     e7e:	81 05       	cpc	r24, r1
     e80:	61 f0       	breq	.+24     	; 0xe9a <pow+0x3c>
     e82:	80 38       	cpi	r24, 0x80	; 128
     e84:	bf ef       	ldi	r27, 0xFF	; 255
     e86:	9b 07       	cpc	r25, r27
     e88:	41 f0       	breq	.+16     	; 0xe9a <pow+0x3c>
     e8a:	99 23       	and	r25, r25
     e8c:	42 f5       	brpl	.+80     	; 0xede <pow+0x80>
     e8e:	ff 3f       	cpi	r31, 0xFF	; 255
     e90:	e1 05       	cpc	r30, r1
     e92:	31 05       	cpc	r19, r1
     e94:	21 05       	cpc	r18, r1
     e96:	11 f1       	breq	.+68     	; 0xedc <pow+0x7e>
     e98:	e8 94       	clt
     e9a:	08 94       	sec
     e9c:	e7 95       	ror	r30
     e9e:	d9 01       	movw	r26, r18
     ea0:	aa 23       	and	r26, r26
     ea2:	29 f4       	brne	.+10     	; 0xeae <pow+0x50>
     ea4:	ab 2f       	mov	r26, r27
     ea6:	be 2f       	mov	r27, r30
     ea8:	f8 5f       	subi	r31, 0xF8	; 248
     eaa:	d0 f3       	brcs	.-12     	; 0xea0 <pow+0x42>
     eac:	10 c0       	rjmp	.+32     	; 0xece <pow+0x70>
     eae:	ff 5f       	subi	r31, 0xFF	; 255
     eb0:	70 f4       	brcc	.+28     	; 0xece <pow+0x70>
     eb2:	a6 95       	lsr	r26
     eb4:	e0 f7       	brcc	.-8      	; 0xeae <pow+0x50>
     eb6:	f7 39       	cpi	r31, 0x97	; 151
     eb8:	50 f0       	brcs	.+20     	; 0xece <pow+0x70>
     eba:	19 f0       	breq	.+6      	; 0xec2 <pow+0x64>
     ebc:	ff 3a       	cpi	r31, 0xAF	; 175
     ebe:	38 f4       	brcc	.+14     	; 0xece <pow+0x70>
     ec0:	9f 77       	andi	r25, 0x7F	; 127
     ec2:	9f 93       	push	r25
     ec4:	0c d0       	rcall	.+24     	; 0xede <pow+0x80>
     ec6:	0f 90       	pop	r0
     ec8:	07 fc       	sbrc	r0, 7
     eca:	90 58       	subi	r25, 0x80	; 128
     ecc:	08 95       	ret
     ece:	3e f0       	brts	.+14     	; 0xede <pow+0x80>
     ed0:	18 cf       	rjmp	.-464    	; 0xd02 <__fp_nan>
     ed2:	60 e0       	ldi	r22, 0x00	; 0
     ed4:	70 e0       	ldi	r23, 0x00	; 0
     ed6:	80 e8       	ldi	r24, 0x80	; 128
     ed8:	9f e3       	ldi	r25, 0x3F	; 63
     eda:	08 95       	ret
     edc:	4f e7       	ldi	r20, 0x7F	; 127
     ede:	9f 77       	andi	r25, 0x7F	; 127
     ee0:	5f 93       	push	r21
     ee2:	4f 93       	push	r20
     ee4:	3f 93       	push	r19
     ee6:	2f 93       	push	r18
     ee8:	e7 d0       	rcall	.+462    	; 0x10b8 <log>
     eea:	2f 91       	pop	r18
     eec:	3f 91       	pop	r19
     eee:	4f 91       	pop	r20
     ef0:	5f 91       	pop	r21
     ef2:	52 df       	rcall	.-348    	; 0xd98 <__mulsf3>
     ef4:	25 c0       	rjmp	.+74     	; 0xf40 <exp>

00000ef6 <round>:
     ef6:	2f df       	rcall	.-418    	; 0xd56 <__fp_splitA>
     ef8:	e0 f0       	brcs	.+56     	; 0xf32 <round+0x3c>
     efa:	9e 37       	cpi	r25, 0x7E	; 126
     efc:	d8 f0       	brcs	.+54     	; 0xf34 <round+0x3e>
     efe:	96 39       	cpi	r25, 0x96	; 150
     f00:	b8 f4       	brcc	.+46     	; 0xf30 <round+0x3a>
     f02:	9e 38       	cpi	r25, 0x8E	; 142
     f04:	48 f4       	brcc	.+18     	; 0xf18 <round+0x22>
     f06:	67 2f       	mov	r22, r23
     f08:	78 2f       	mov	r23, r24
     f0a:	88 27       	eor	r24, r24
     f0c:	98 5f       	subi	r25, 0xF8	; 248
     f0e:	f9 cf       	rjmp	.-14     	; 0xf02 <round+0xc>
     f10:	86 95       	lsr	r24
     f12:	77 95       	ror	r23
     f14:	67 95       	ror	r22
     f16:	93 95       	inc	r25
     f18:	95 39       	cpi	r25, 0x95	; 149
     f1a:	d0 f3       	brcs	.-12     	; 0xf10 <round+0x1a>
     f1c:	b6 2f       	mov	r27, r22
     f1e:	b1 70       	andi	r27, 0x01	; 1
     f20:	6b 0f       	add	r22, r27
     f22:	71 1d       	adc	r23, r1
     f24:	81 1d       	adc	r24, r1
     f26:	20 f4       	brcc	.+8      	; 0xf30 <round+0x3a>
     f28:	87 95       	ror	r24
     f2a:	77 95       	ror	r23
     f2c:	67 95       	ror	r22
     f2e:	93 95       	inc	r25
     f30:	33 c0       	rjmp	.+102    	; 0xf98 <__fp_mintl>
     f32:	4d c0       	rjmp	.+154    	; 0xfce <__fp_mpack>
     f34:	2b cf       	rjmp	.-426    	; 0xd8c <__fp_szero>
     f36:	19 f4       	brne	.+6      	; 0xf3e <round+0x48>
     f38:	0e f0       	brts	.+2      	; 0xf3c <round+0x46>
     f3a:	dd ce       	rjmp	.-582    	; 0xcf6 <__fp_inf>
     f3c:	26 cf       	rjmp	.-436    	; 0xd8a <__fp_zero>
     f3e:	e1 ce       	rjmp	.-574    	; 0xd02 <__fp_nan>

00000f40 <exp>:
     f40:	0a df       	rcall	.-492    	; 0xd56 <__fp_splitA>
     f42:	c8 f3       	brcs	.-14     	; 0xf36 <round+0x40>
     f44:	96 38       	cpi	r25, 0x86	; 134
     f46:	c0 f7       	brcc	.-16     	; 0xf38 <round+0x42>
     f48:	07 f8       	bld	r0, 7
     f4a:	0f 92       	push	r0
     f4c:	e8 94       	clt
     f4e:	2b e3       	ldi	r18, 0x3B	; 59
     f50:	3a ea       	ldi	r19, 0xAA	; 170
     f52:	48 eb       	ldi	r20, 0xB8	; 184
     f54:	5f e7       	ldi	r21, 0x7F	; 127
     f56:	2e df       	rcall	.-420    	; 0xdb4 <__mulsf3_pse>
     f58:	0f 92       	push	r0
     f5a:	0f 92       	push	r0
     f5c:	0f 92       	push	r0
     f5e:	4d b7       	in	r20, 0x3d	; 61
     f60:	5e b7       	in	r21, 0x3e	; 62
     f62:	0f 92       	push	r0
     f64:	e9 d0       	rcall	.+466    	; 0x1138 <modf>
     f66:	e6 e2       	ldi	r30, 0x26	; 38
     f68:	f0 e0       	ldi	r31, 0x00	; 0
     f6a:	3f d0       	rcall	.+126    	; 0xfea <__fp_powser>
     f6c:	4f 91       	pop	r20
     f6e:	5f 91       	pop	r21
     f70:	ef 91       	pop	r30
     f72:	ff 91       	pop	r31
     f74:	e5 95       	asr	r30
     f76:	ee 1f       	adc	r30, r30
     f78:	ff 1f       	adc	r31, r31
     f7a:	49 f0       	breq	.+18     	; 0xf8e <exp+0x4e>
     f7c:	fe 57       	subi	r31, 0x7E	; 126
     f7e:	e0 68       	ori	r30, 0x80	; 128
     f80:	44 27       	eor	r20, r20
     f82:	ee 0f       	add	r30, r30
     f84:	44 1f       	adc	r20, r20
     f86:	fa 95       	dec	r31
     f88:	e1 f7       	brne	.-8      	; 0xf82 <exp+0x42>
     f8a:	41 95       	neg	r20
     f8c:	55 0b       	sbc	r21, r21
     f8e:	5b d0       	rcall	.+182    	; 0x1046 <ldexp>
     f90:	0f 90       	pop	r0
     f92:	07 fe       	sbrs	r0, 7
     f94:	4f c0       	rjmp	.+158    	; 0x1034 <inverse>
     f96:	08 95       	ret

00000f98 <__fp_mintl>:
     f98:	88 23       	and	r24, r24
     f9a:	71 f4       	brne	.+28     	; 0xfb8 <__fp_mintl+0x20>
     f9c:	77 23       	and	r23, r23
     f9e:	21 f0       	breq	.+8      	; 0xfa8 <__fp_mintl+0x10>
     fa0:	98 50       	subi	r25, 0x08	; 8
     fa2:	87 2b       	or	r24, r23
     fa4:	76 2f       	mov	r23, r22
     fa6:	07 c0       	rjmp	.+14     	; 0xfb6 <__fp_mintl+0x1e>
     fa8:	66 23       	and	r22, r22
     faa:	11 f4       	brne	.+4      	; 0xfb0 <__fp_mintl+0x18>
     fac:	99 27       	eor	r25, r25
     fae:	0d c0       	rjmp	.+26     	; 0xfca <__fp_mintl+0x32>
     fb0:	90 51       	subi	r25, 0x10	; 16
     fb2:	86 2b       	or	r24, r22
     fb4:	70 e0       	ldi	r23, 0x00	; 0
     fb6:	60 e0       	ldi	r22, 0x00	; 0
     fb8:	2a f0       	brmi	.+10     	; 0xfc4 <__fp_mintl+0x2c>
     fba:	9a 95       	dec	r25
     fbc:	66 0f       	add	r22, r22
     fbe:	77 1f       	adc	r23, r23
     fc0:	88 1f       	adc	r24, r24
     fc2:	da f7       	brpl	.-10     	; 0xfba <__fp_mintl+0x22>
     fc4:	88 0f       	add	r24, r24
     fc6:	96 95       	lsr	r25
     fc8:	87 95       	ror	r24
     fca:	97 f9       	bld	r25, 7
     fcc:	08 95       	ret

00000fce <__fp_mpack>:
     fce:	9f 3f       	cpi	r25, 0xFF	; 255
     fd0:	31 f0       	breq	.+12     	; 0xfde <__fp_mpack_finite+0xc>

00000fd2 <__fp_mpack_finite>:
     fd2:	91 50       	subi	r25, 0x01	; 1
     fd4:	20 f4       	brcc	.+8      	; 0xfde <__fp_mpack_finite+0xc>
     fd6:	87 95       	ror	r24
     fd8:	77 95       	ror	r23
     fda:	67 95       	ror	r22
     fdc:	b7 95       	ror	r27
     fde:	88 0f       	add	r24, r24
     fe0:	91 1d       	adc	r25, r1
     fe2:	96 95       	lsr	r25
     fe4:	87 95       	ror	r24
     fe6:	97 f9       	bld	r25, 7
     fe8:	08 95       	ret

00000fea <__fp_powser>:
     fea:	df 93       	push	r29
     fec:	cf 93       	push	r28
     fee:	1f 93       	push	r17
     ff0:	0f 93       	push	r16
     ff2:	ff 92       	push	r15
     ff4:	ef 92       	push	r14
     ff6:	df 92       	push	r13
     ff8:	7b 01       	movw	r14, r22
     ffa:	8c 01       	movw	r16, r24
     ffc:	68 94       	set
     ffe:	05 c0       	rjmp	.+10     	; 0x100a <__fp_powser+0x20>
    1000:	da 2e       	mov	r13, r26
    1002:	ef 01       	movw	r28, r30
    1004:	d5 de       	rcall	.-598    	; 0xdb0 <__mulsf3x>
    1006:	fe 01       	movw	r30, r28
    1008:	e8 94       	clt
    100a:	a5 91       	lpm	r26, Z+
    100c:	25 91       	lpm	r18, Z+
    100e:	35 91       	lpm	r19, Z+
    1010:	45 91       	lpm	r20, Z+
    1012:	55 91       	lpm	r21, Z+
    1014:	ae f3       	brts	.-22     	; 0x1000 <__fp_powser+0x16>
    1016:	ef 01       	movw	r28, r30
    1018:	8a dd       	rcall	.-1260   	; 0xb2e <__addsf3x>
    101a:	fe 01       	movw	r30, r28
    101c:	97 01       	movw	r18, r14
    101e:	a8 01       	movw	r20, r16
    1020:	da 94       	dec	r13
    1022:	79 f7       	brne	.-34     	; 0x1002 <__fp_powser+0x18>
    1024:	df 90       	pop	r13
    1026:	ef 90       	pop	r14
    1028:	ff 90       	pop	r15
    102a:	0f 91       	pop	r16
    102c:	1f 91       	pop	r17
    102e:	cf 91       	pop	r28
    1030:	df 91       	pop	r29
    1032:	08 95       	ret

00001034 <inverse>:
    1034:	9b 01       	movw	r18, r22
    1036:	ac 01       	movw	r20, r24
    1038:	60 e0       	ldi	r22, 0x00	; 0
    103a:	70 e0       	ldi	r23, 0x00	; 0
    103c:	80 e8       	ldi	r24, 0x80	; 128
    103e:	9f e3       	ldi	r25, 0x3F	; 63
    1040:	ae c0       	rjmp	.+348    	; 0x119e <__divsf3>
    1042:	59 ce       	rjmp	.-846    	; 0xcf6 <__fp_inf>
    1044:	c4 cf       	rjmp	.-120    	; 0xfce <__fp_mpack>

00001046 <ldexp>:
    1046:	87 de       	rcall	.-754    	; 0xd56 <__fp_splitA>
    1048:	e8 f3       	brcs	.-6      	; 0x1044 <inverse+0x10>
    104a:	99 23       	and	r25, r25
    104c:	d9 f3       	breq	.-10     	; 0x1044 <inverse+0x10>
    104e:	94 0f       	add	r25, r20
    1050:	51 1d       	adc	r21, r1
    1052:	bb f3       	brvs	.-18     	; 0x1042 <inverse+0xe>
    1054:	91 50       	subi	r25, 0x01	; 1
    1056:	50 40       	sbci	r21, 0x00	; 0
    1058:	94 f0       	brlt	.+36     	; 0x107e <ldexp+0x38>
    105a:	59 f0       	breq	.+22     	; 0x1072 <ldexp+0x2c>
    105c:	88 23       	and	r24, r24
    105e:	32 f0       	brmi	.+12     	; 0x106c <ldexp+0x26>
    1060:	66 0f       	add	r22, r22
    1062:	77 1f       	adc	r23, r23
    1064:	88 1f       	adc	r24, r24
    1066:	91 50       	subi	r25, 0x01	; 1
    1068:	50 40       	sbci	r21, 0x00	; 0
    106a:	c1 f7       	brne	.-16     	; 0x105c <ldexp+0x16>
    106c:	9e 3f       	cpi	r25, 0xFE	; 254
    106e:	51 05       	cpc	r21, r1
    1070:	44 f7       	brge	.-48     	; 0x1042 <inverse+0xe>
    1072:	88 0f       	add	r24, r24
    1074:	91 1d       	adc	r25, r1
    1076:	96 95       	lsr	r25
    1078:	87 95       	ror	r24
    107a:	97 f9       	bld	r25, 7
    107c:	08 95       	ret
    107e:	5f 3f       	cpi	r21, 0xFF	; 255
    1080:	ac f0       	brlt	.+42     	; 0x10ac <ldexp+0x66>
    1082:	98 3e       	cpi	r25, 0xE8	; 232
    1084:	9c f0       	brlt	.+38     	; 0x10ac <ldexp+0x66>
    1086:	bb 27       	eor	r27, r27
    1088:	86 95       	lsr	r24
    108a:	77 95       	ror	r23
    108c:	67 95       	ror	r22
    108e:	b7 95       	ror	r27
    1090:	08 f4       	brcc	.+2      	; 0x1094 <ldexp+0x4e>
    1092:	b1 60       	ori	r27, 0x01	; 1
    1094:	93 95       	inc	r25
    1096:	c1 f7       	brne	.-16     	; 0x1088 <ldexp+0x42>
    1098:	bb 0f       	add	r27, r27
    109a:	58 f7       	brcc	.-42     	; 0x1072 <ldexp+0x2c>
    109c:	11 f4       	brne	.+4      	; 0x10a2 <ldexp+0x5c>
    109e:	60 ff       	sbrs	r22, 0
    10a0:	e8 cf       	rjmp	.-48     	; 0x1072 <ldexp+0x2c>
    10a2:	6f 5f       	subi	r22, 0xFF	; 255
    10a4:	7f 4f       	sbci	r23, 0xFF	; 255
    10a6:	8f 4f       	sbci	r24, 0xFF	; 255
    10a8:	9f 4f       	sbci	r25, 0xFF	; 255
    10aa:	e3 cf       	rjmp	.-58     	; 0x1072 <ldexp+0x2c>
    10ac:	6f ce       	rjmp	.-802    	; 0xd8c <__fp_szero>
    10ae:	0e f0       	brts	.+2      	; 0x10b2 <ldexp+0x6c>
    10b0:	8e cf       	rjmp	.-228    	; 0xfce <__fp_mpack>
    10b2:	27 ce       	rjmp	.-946    	; 0xd02 <__fp_nan>
    10b4:	68 94       	set
    10b6:	1f ce       	rjmp	.-962    	; 0xcf6 <__fp_inf>

000010b8 <log>:
    10b8:	4e de       	rcall	.-868    	; 0xd56 <__fp_splitA>
    10ba:	c8 f3       	brcs	.-14     	; 0x10ae <ldexp+0x68>
    10bc:	99 23       	and	r25, r25
    10be:	d1 f3       	breq	.-12     	; 0x10b4 <ldexp+0x6e>
    10c0:	c6 f3       	brts	.-16     	; 0x10b2 <ldexp+0x6c>
    10c2:	df 93       	push	r29
    10c4:	cf 93       	push	r28
    10c6:	1f 93       	push	r17
    10c8:	0f 93       	push	r16
    10ca:	ff 92       	push	r15
    10cc:	c9 2f       	mov	r28, r25
    10ce:	dd 27       	eor	r29, r29
    10d0:	88 23       	and	r24, r24
    10d2:	2a f0       	brmi	.+10     	; 0x10de <log+0x26>
    10d4:	21 97       	sbiw	r28, 0x01	; 1
    10d6:	66 0f       	add	r22, r22
    10d8:	77 1f       	adc	r23, r23
    10da:	88 1f       	adc	r24, r24
    10dc:	da f7       	brpl	.-10     	; 0x10d4 <log+0x1c>
    10de:	20 e0       	ldi	r18, 0x00	; 0
    10e0:	30 e0       	ldi	r19, 0x00	; 0
    10e2:	40 e8       	ldi	r20, 0x80	; 128
    10e4:	5f eb       	ldi	r21, 0xBF	; 191
    10e6:	9f e3       	ldi	r25, 0x3F	; 63
    10e8:	88 39       	cpi	r24, 0x98	; 152
    10ea:	20 f0       	brcs	.+8      	; 0x10f4 <log+0x3c>
    10ec:	80 3e       	cpi	r24, 0xE0	; 224
    10ee:	30 f0       	brcs	.+12     	; 0x10fc <log+0x44>
    10f0:	21 96       	adiw	r28, 0x01	; 1
    10f2:	8f 77       	andi	r24, 0x7F	; 127
    10f4:	0b dd       	rcall	.-1514   	; 0xb0c <__addsf3>
    10f6:	ee e4       	ldi	r30, 0x4E	; 78
    10f8:	f0 e0       	ldi	r31, 0x00	; 0
    10fa:	03 c0       	rjmp	.+6      	; 0x1102 <log+0x4a>
    10fc:	07 dd       	rcall	.-1522   	; 0xb0c <__addsf3>
    10fe:	eb e7       	ldi	r30, 0x7B	; 123
    1100:	f0 e0       	ldi	r31, 0x00	; 0
    1102:	73 df       	rcall	.-282    	; 0xfea <__fp_powser>
    1104:	8b 01       	movw	r16, r22
    1106:	be 01       	movw	r22, r28
    1108:	ec 01       	movw	r28, r24
    110a:	fb 2e       	mov	r15, r27
    110c:	6f 57       	subi	r22, 0x7F	; 127
    110e:	71 09       	sbc	r23, r1
    1110:	75 95       	asr	r23
    1112:	77 1f       	adc	r23, r23
    1114:	88 0b       	sbc	r24, r24
    1116:	99 0b       	sbc	r25, r25
    1118:	8f dd       	rcall	.-1250   	; 0xc38 <__floatsisf>
    111a:	28 e1       	ldi	r18, 0x18	; 24
    111c:	32 e7       	ldi	r19, 0x72	; 114
    111e:	41 e3       	ldi	r20, 0x31	; 49
    1120:	5f e3       	ldi	r21, 0x3F	; 63
    1122:	46 de       	rcall	.-884    	; 0xdb0 <__mulsf3x>
    1124:	af 2d       	mov	r26, r15
    1126:	98 01       	movw	r18, r16
    1128:	ae 01       	movw	r20, r28
    112a:	ff 90       	pop	r15
    112c:	0f 91       	pop	r16
    112e:	1f 91       	pop	r17
    1130:	cf 91       	pop	r28
    1132:	df 91       	pop	r29
    1134:	fc dc       	rcall	.-1544   	; 0xb2e <__addsf3x>
    1136:	f6 cd       	rjmp	.-1044   	; 0xd24 <__fp_round>

00001138 <modf>:
    1138:	fa 01       	movw	r30, r20
    113a:	dc 01       	movw	r26, r24
    113c:	aa 0f       	add	r26, r26
    113e:	bb 1f       	adc	r27, r27
    1140:	9b 01       	movw	r18, r22
    1142:	ac 01       	movw	r20, r24
    1144:	bf 57       	subi	r27, 0x7F	; 127
    1146:	28 f4       	brcc	.+10     	; 0x1152 <modf+0x1a>
    1148:	22 27       	eor	r18, r18
    114a:	33 27       	eor	r19, r19
    114c:	44 27       	eor	r20, r20
    114e:	50 78       	andi	r21, 0x80	; 128
    1150:	1f c0       	rjmp	.+62     	; 0x1190 <modf+0x58>
    1152:	b7 51       	subi	r27, 0x17	; 23
    1154:	88 f4       	brcc	.+34     	; 0x1178 <modf+0x40>
    1156:	ab 2f       	mov	r26, r27
    1158:	00 24       	eor	r0, r0
    115a:	46 95       	lsr	r20
    115c:	37 95       	ror	r19
    115e:	27 95       	ror	r18
    1160:	01 1c       	adc	r0, r1
    1162:	a3 95       	inc	r26
    1164:	d2 f3       	brmi	.-12     	; 0x115a <modf+0x22>
    1166:	00 20       	and	r0, r0
    1168:	69 f0       	breq	.+26     	; 0x1184 <modf+0x4c>
    116a:	22 0f       	add	r18, r18
    116c:	33 1f       	adc	r19, r19
    116e:	44 1f       	adc	r20, r20
    1170:	b3 95       	inc	r27
    1172:	da f3       	brmi	.-10     	; 0x116a <modf+0x32>
    1174:	0d d0       	rcall	.+26     	; 0x1190 <modf+0x58>
    1176:	c9 cc       	rjmp	.-1646   	; 0xb0a <__subsf3>
    1178:	61 30       	cpi	r22, 0x01	; 1
    117a:	71 05       	cpc	r23, r1
    117c:	a0 e8       	ldi	r26, 0x80	; 128
    117e:	8a 07       	cpc	r24, r26
    1180:	b9 46       	sbci	r27, 0x69	; 105
    1182:	30 f4       	brcc	.+12     	; 0x1190 <modf+0x58>
    1184:	9b 01       	movw	r18, r22
    1186:	ac 01       	movw	r20, r24
    1188:	66 27       	eor	r22, r22
    118a:	77 27       	eor	r23, r23
    118c:	88 27       	eor	r24, r24
    118e:	90 78       	andi	r25, 0x80	; 128
    1190:	30 96       	adiw	r30, 0x00	; 0
    1192:	21 f0       	breq	.+8      	; 0x119c <modf+0x64>
    1194:	20 83       	st	Z, r18
    1196:	31 83       	std	Z+1, r19	; 0x01
    1198:	42 83       	std	Z+2, r20	; 0x02
    119a:	53 83       	std	Z+3, r21	; 0x03
    119c:	08 95       	ret

0000119e <__divsf3>:
    119e:	0c d0       	rcall	.+24     	; 0x11b8 <__divsf3x>
    11a0:	c1 cd       	rjmp	.-1150   	; 0xd24 <__fp_round>
    11a2:	b9 dd       	rcall	.-1166   	; 0xd16 <__fp_pscB>
    11a4:	40 f0       	brcs	.+16     	; 0x11b6 <__divsf3+0x18>
    11a6:	b0 dd       	rcall	.-1184   	; 0xd08 <__fp_pscA>
    11a8:	30 f0       	brcs	.+12     	; 0x11b6 <__divsf3+0x18>
    11aa:	21 f4       	brne	.+8      	; 0x11b4 <__divsf3+0x16>
    11ac:	5f 3f       	cpi	r21, 0xFF	; 255
    11ae:	19 f0       	breq	.+6      	; 0x11b6 <__divsf3+0x18>
    11b0:	a2 cd       	rjmp	.-1212   	; 0xcf6 <__fp_inf>
    11b2:	51 11       	cpse	r21, r1
    11b4:	eb cd       	rjmp	.-1066   	; 0xd8c <__fp_szero>
    11b6:	a5 cd       	rjmp	.-1206   	; 0xd02 <__fp_nan>

000011b8 <__divsf3x>:
    11b8:	c6 dd       	rcall	.-1140   	; 0xd46 <__fp_split3>
    11ba:	98 f3       	brcs	.-26     	; 0x11a2 <__divsf3+0x4>

000011bc <__divsf3_pse>:
    11bc:	99 23       	and	r25, r25
    11be:	c9 f3       	breq	.-14     	; 0x11b2 <__divsf3+0x14>
    11c0:	55 23       	and	r21, r21
    11c2:	b1 f3       	breq	.-20     	; 0x11b0 <__divsf3+0x12>
    11c4:	95 1b       	sub	r25, r21
    11c6:	55 0b       	sbc	r21, r21
    11c8:	bb 27       	eor	r27, r27
    11ca:	aa 27       	eor	r26, r26
    11cc:	62 17       	cp	r22, r18
    11ce:	73 07       	cpc	r23, r19
    11d0:	84 07       	cpc	r24, r20
    11d2:	38 f0       	brcs	.+14     	; 0x11e2 <__divsf3_pse+0x26>
    11d4:	9f 5f       	subi	r25, 0xFF	; 255
    11d6:	5f 4f       	sbci	r21, 0xFF	; 255
    11d8:	22 0f       	add	r18, r18
    11da:	33 1f       	adc	r19, r19
    11dc:	44 1f       	adc	r20, r20
    11de:	aa 1f       	adc	r26, r26
    11e0:	a9 f3       	breq	.-22     	; 0x11cc <__divsf3_pse+0x10>
    11e2:	33 d0       	rcall	.+102    	; 0x124a <__divsf3_pse+0x8e>
    11e4:	0e 2e       	mov	r0, r30
    11e6:	3a f0       	brmi	.+14     	; 0x11f6 <__divsf3_pse+0x3a>
    11e8:	e0 e8       	ldi	r30, 0x80	; 128
    11ea:	30 d0       	rcall	.+96     	; 0x124c <__divsf3_pse+0x90>
    11ec:	91 50       	subi	r25, 0x01	; 1
    11ee:	50 40       	sbci	r21, 0x00	; 0
    11f0:	e6 95       	lsr	r30
    11f2:	00 1c       	adc	r0, r0
    11f4:	ca f7       	brpl	.-14     	; 0x11e8 <__divsf3_pse+0x2c>
    11f6:	29 d0       	rcall	.+82     	; 0x124a <__divsf3_pse+0x8e>
    11f8:	fe 2f       	mov	r31, r30
    11fa:	27 d0       	rcall	.+78     	; 0x124a <__divsf3_pse+0x8e>
    11fc:	66 0f       	add	r22, r22
    11fe:	77 1f       	adc	r23, r23
    1200:	88 1f       	adc	r24, r24
    1202:	bb 1f       	adc	r27, r27
    1204:	26 17       	cp	r18, r22
    1206:	37 07       	cpc	r19, r23
    1208:	48 07       	cpc	r20, r24
    120a:	ab 07       	cpc	r26, r27
    120c:	b0 e8       	ldi	r27, 0x80	; 128
    120e:	09 f0       	breq	.+2      	; 0x1212 <__divsf3_pse+0x56>
    1210:	bb 0b       	sbc	r27, r27
    1212:	80 2d       	mov	r24, r0
    1214:	bf 01       	movw	r22, r30
    1216:	ff 27       	eor	r31, r31
    1218:	93 58       	subi	r25, 0x83	; 131
    121a:	5f 4f       	sbci	r21, 0xFF	; 255
    121c:	2a f0       	brmi	.+10     	; 0x1228 <__divsf3_pse+0x6c>
    121e:	9e 3f       	cpi	r25, 0xFE	; 254
    1220:	51 05       	cpc	r21, r1
    1222:	68 f0       	brcs	.+26     	; 0x123e <__divsf3_pse+0x82>
    1224:	68 cd       	rjmp	.-1328   	; 0xcf6 <__fp_inf>
    1226:	b2 cd       	rjmp	.-1180   	; 0xd8c <__fp_szero>
    1228:	5f 3f       	cpi	r21, 0xFF	; 255
    122a:	ec f3       	brlt	.-6      	; 0x1226 <__divsf3_pse+0x6a>
    122c:	98 3e       	cpi	r25, 0xE8	; 232
    122e:	dc f3       	brlt	.-10     	; 0x1226 <__divsf3_pse+0x6a>
    1230:	86 95       	lsr	r24
    1232:	77 95       	ror	r23
    1234:	67 95       	ror	r22
    1236:	b7 95       	ror	r27
    1238:	f7 95       	ror	r31
    123a:	9f 5f       	subi	r25, 0xFF	; 255
    123c:	c9 f7       	brne	.-14     	; 0x1230 <__divsf3_pse+0x74>
    123e:	88 0f       	add	r24, r24
    1240:	91 1d       	adc	r25, r1
    1242:	96 95       	lsr	r25
    1244:	87 95       	ror	r24
    1246:	97 f9       	bld	r25, 7
    1248:	08 95       	ret
    124a:	e1 e0       	ldi	r30, 0x01	; 1
    124c:	66 0f       	add	r22, r22
    124e:	77 1f       	adc	r23, r23
    1250:	88 1f       	adc	r24, r24
    1252:	bb 1f       	adc	r27, r27
    1254:	62 17       	cp	r22, r18
    1256:	73 07       	cpc	r23, r19
    1258:	84 07       	cpc	r24, r20
    125a:	ba 07       	cpc	r27, r26
    125c:	20 f0       	brcs	.+8      	; 0x1266 <__divsf3_pse+0xaa>
    125e:	62 1b       	sub	r22, r18
    1260:	73 0b       	sbc	r23, r19
    1262:	84 0b       	sbc	r24, r20
    1264:	ba 0b       	sbc	r27, r26
    1266:	ee 1f       	adc	r30, r30
    1268:	88 f7       	brcc	.-30     	; 0x124c <__divsf3_pse+0x90>
    126a:	e0 95       	com	r30
    126c:	08 95       	ret

0000126e <__udivmodsi4>:
    126e:	a1 e2       	ldi	r26, 0x21	; 33
    1270:	1a 2e       	mov	r1, r26
    1272:	aa 1b       	sub	r26, r26
    1274:	bb 1b       	sub	r27, r27
    1276:	fd 01       	movw	r30, r26
    1278:	0d c0       	rjmp	.+26     	; 0x1294 <__udivmodsi4_ep>

0000127a <__udivmodsi4_loop>:
    127a:	aa 1f       	adc	r26, r26
    127c:	bb 1f       	adc	r27, r27
    127e:	ee 1f       	adc	r30, r30
    1280:	ff 1f       	adc	r31, r31
    1282:	a2 17       	cp	r26, r18
    1284:	b3 07       	cpc	r27, r19
    1286:	e4 07       	cpc	r30, r20
    1288:	f5 07       	cpc	r31, r21
    128a:	20 f0       	brcs	.+8      	; 0x1294 <__udivmodsi4_ep>
    128c:	a2 1b       	sub	r26, r18
    128e:	b3 0b       	sbc	r27, r19
    1290:	e4 0b       	sbc	r30, r20
    1292:	f5 0b       	sbc	r31, r21

00001294 <__udivmodsi4_ep>:
    1294:	66 1f       	adc	r22, r22
    1296:	77 1f       	adc	r23, r23
    1298:	88 1f       	adc	r24, r24
    129a:	99 1f       	adc	r25, r25
    129c:	1a 94       	dec	r1
    129e:	69 f7       	brne	.-38     	; 0x127a <__udivmodsi4_loop>
    12a0:	60 95       	com	r22
    12a2:	70 95       	com	r23
    12a4:	80 95       	com	r24
    12a6:	90 95       	com	r25
    12a8:	9b 01       	movw	r18, r22
    12aa:	ac 01       	movw	r20, r24
    12ac:	bd 01       	movw	r22, r26
    12ae:	cf 01       	movw	r24, r30
    12b0:	08 95       	ret

000012b2 <malloc>:
    12b2:	0f 93       	push	r16
    12b4:	1f 93       	push	r17
    12b6:	cf 93       	push	r28
    12b8:	df 93       	push	r29
    12ba:	82 30       	cpi	r24, 0x02	; 2
    12bc:	91 05       	cpc	r25, r1
    12be:	10 f4       	brcc	.+4      	; 0x12c4 <malloc+0x12>
    12c0:	82 e0       	ldi	r24, 0x02	; 2
    12c2:	90 e0       	ldi	r25, 0x00	; 0
    12c4:	e0 91 71 00 	lds	r30, 0x0071	; 0x800071 <__flp>
    12c8:	f0 91 72 00 	lds	r31, 0x0072	; 0x800072 <__flp+0x1>
    12cc:	20 e0       	ldi	r18, 0x00	; 0
    12ce:	30 e0       	ldi	r19, 0x00	; 0
    12d0:	a0 e0       	ldi	r26, 0x00	; 0
    12d2:	b0 e0       	ldi	r27, 0x00	; 0
    12d4:	30 97       	sbiw	r30, 0x00	; 0
    12d6:	19 f1       	breq	.+70     	; 0x131e <malloc+0x6c>
    12d8:	40 81       	ld	r20, Z
    12da:	51 81       	ldd	r21, Z+1	; 0x01
    12dc:	02 81       	ldd	r16, Z+2	; 0x02
    12de:	13 81       	ldd	r17, Z+3	; 0x03
    12e0:	48 17       	cp	r20, r24
    12e2:	59 07       	cpc	r21, r25
    12e4:	c8 f0       	brcs	.+50     	; 0x1318 <malloc+0x66>
    12e6:	84 17       	cp	r24, r20
    12e8:	95 07       	cpc	r25, r21
    12ea:	69 f4       	brne	.+26     	; 0x1306 <malloc+0x54>
    12ec:	10 97       	sbiw	r26, 0x00	; 0
    12ee:	31 f0       	breq	.+12     	; 0x12fc <malloc+0x4a>
    12f0:	12 96       	adiw	r26, 0x02	; 2
    12f2:	0c 93       	st	X, r16
    12f4:	12 97       	sbiw	r26, 0x02	; 2
    12f6:	13 96       	adiw	r26, 0x03	; 3
    12f8:	1c 93       	st	X, r17
    12fa:	27 c0       	rjmp	.+78     	; 0x134a <malloc+0x98>
    12fc:	00 93 71 00 	sts	0x0071, r16	; 0x800071 <__flp>
    1300:	10 93 72 00 	sts	0x0072, r17	; 0x800072 <__flp+0x1>
    1304:	22 c0       	rjmp	.+68     	; 0x134a <malloc+0x98>
    1306:	21 15       	cp	r18, r1
    1308:	31 05       	cpc	r19, r1
    130a:	19 f0       	breq	.+6      	; 0x1312 <malloc+0x60>
    130c:	42 17       	cp	r20, r18
    130e:	53 07       	cpc	r21, r19
    1310:	18 f4       	brcc	.+6      	; 0x1318 <malloc+0x66>
    1312:	9a 01       	movw	r18, r20
    1314:	bd 01       	movw	r22, r26
    1316:	ef 01       	movw	r28, r30
    1318:	df 01       	movw	r26, r30
    131a:	f8 01       	movw	r30, r16
    131c:	db cf       	rjmp	.-74     	; 0x12d4 <malloc+0x22>
    131e:	21 15       	cp	r18, r1
    1320:	31 05       	cpc	r19, r1
    1322:	f9 f0       	breq	.+62     	; 0x1362 <malloc+0xb0>
    1324:	28 1b       	sub	r18, r24
    1326:	39 0b       	sbc	r19, r25
    1328:	24 30       	cpi	r18, 0x04	; 4
    132a:	31 05       	cpc	r19, r1
    132c:	80 f4       	brcc	.+32     	; 0x134e <malloc+0x9c>
    132e:	8a 81       	ldd	r24, Y+2	; 0x02
    1330:	9b 81       	ldd	r25, Y+3	; 0x03
    1332:	61 15       	cp	r22, r1
    1334:	71 05       	cpc	r23, r1
    1336:	21 f0       	breq	.+8      	; 0x1340 <malloc+0x8e>
    1338:	fb 01       	movw	r30, r22
    133a:	93 83       	std	Z+3, r25	; 0x03
    133c:	82 83       	std	Z+2, r24	; 0x02
    133e:	04 c0       	rjmp	.+8      	; 0x1348 <malloc+0x96>
    1340:	90 93 72 00 	sts	0x0072, r25	; 0x800072 <__flp+0x1>
    1344:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <__flp>
    1348:	fe 01       	movw	r30, r28
    134a:	32 96       	adiw	r30, 0x02	; 2
    134c:	44 c0       	rjmp	.+136    	; 0x13d6 <malloc+0x124>
    134e:	fe 01       	movw	r30, r28
    1350:	e2 0f       	add	r30, r18
    1352:	f3 1f       	adc	r31, r19
    1354:	81 93       	st	Z+, r24
    1356:	91 93       	st	Z+, r25
    1358:	22 50       	subi	r18, 0x02	; 2
    135a:	31 09       	sbc	r19, r1
    135c:	39 83       	std	Y+1, r19	; 0x01
    135e:	28 83       	st	Y, r18
    1360:	3a c0       	rjmp	.+116    	; 0x13d6 <malloc+0x124>
    1362:	20 91 6f 00 	lds	r18, 0x006F	; 0x80006f <__brkval>
    1366:	30 91 70 00 	lds	r19, 0x0070	; 0x800070 <__brkval+0x1>
    136a:	23 2b       	or	r18, r19
    136c:	41 f4       	brne	.+16     	; 0x137e <malloc+0xcc>
    136e:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <__malloc_heap_start>
    1372:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <__malloc_heap_start+0x1>
    1376:	30 93 70 00 	sts	0x0070, r19	; 0x800070 <__brkval+0x1>
    137a:	20 93 6f 00 	sts	0x006F, r18	; 0x80006f <__brkval>
    137e:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__data_start>
    1382:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__data_start+0x1>
    1386:	21 15       	cp	r18, r1
    1388:	31 05       	cpc	r19, r1
    138a:	41 f4       	brne	.+16     	; 0x139c <malloc+0xea>
    138c:	2d b7       	in	r18, 0x3d	; 61
    138e:	3e b7       	in	r19, 0x3e	; 62
    1390:	40 91 64 00 	lds	r20, 0x0064	; 0x800064 <__malloc_margin>
    1394:	50 91 65 00 	lds	r21, 0x0065	; 0x800065 <__malloc_margin+0x1>
    1398:	24 1b       	sub	r18, r20
    139a:	35 0b       	sbc	r19, r21
    139c:	e0 91 6f 00 	lds	r30, 0x006F	; 0x80006f <__brkval>
    13a0:	f0 91 70 00 	lds	r31, 0x0070	; 0x800070 <__brkval+0x1>
    13a4:	e2 17       	cp	r30, r18
    13a6:	f3 07       	cpc	r31, r19
    13a8:	a0 f4       	brcc	.+40     	; 0x13d2 <malloc+0x120>
    13aa:	2e 1b       	sub	r18, r30
    13ac:	3f 0b       	sbc	r19, r31
    13ae:	28 17       	cp	r18, r24
    13b0:	39 07       	cpc	r19, r25
    13b2:	78 f0       	brcs	.+30     	; 0x13d2 <malloc+0x120>
    13b4:	ac 01       	movw	r20, r24
    13b6:	4e 5f       	subi	r20, 0xFE	; 254
    13b8:	5f 4f       	sbci	r21, 0xFF	; 255
    13ba:	24 17       	cp	r18, r20
    13bc:	35 07       	cpc	r19, r21
    13be:	48 f0       	brcs	.+18     	; 0x13d2 <malloc+0x120>
    13c0:	4e 0f       	add	r20, r30
    13c2:	5f 1f       	adc	r21, r31
    13c4:	50 93 70 00 	sts	0x0070, r21	; 0x800070 <__brkval+0x1>
    13c8:	40 93 6f 00 	sts	0x006F, r20	; 0x80006f <__brkval>
    13cc:	81 93       	st	Z+, r24
    13ce:	91 93       	st	Z+, r25
    13d0:	02 c0       	rjmp	.+4      	; 0x13d6 <malloc+0x124>
    13d2:	e0 e0       	ldi	r30, 0x00	; 0
    13d4:	f0 e0       	ldi	r31, 0x00	; 0
    13d6:	cf 01       	movw	r24, r30
    13d8:	df 91       	pop	r29
    13da:	cf 91       	pop	r28
    13dc:	1f 91       	pop	r17
    13de:	0f 91       	pop	r16
    13e0:	08 95       	ret

000013e2 <free>:
    13e2:	cf 93       	push	r28
    13e4:	df 93       	push	r29
    13e6:	00 97       	sbiw	r24, 0x00	; 0
    13e8:	09 f4       	brne	.+2      	; 0x13ec <free+0xa>
    13ea:	81 c0       	rjmp	.+258    	; 0x14ee <free+0x10c>
    13ec:	fc 01       	movw	r30, r24
    13ee:	32 97       	sbiw	r30, 0x02	; 2
    13f0:	13 82       	std	Z+3, r1	; 0x03
    13f2:	12 82       	std	Z+2, r1	; 0x02
    13f4:	a0 91 71 00 	lds	r26, 0x0071	; 0x800071 <__flp>
    13f8:	b0 91 72 00 	lds	r27, 0x0072	; 0x800072 <__flp+0x1>
    13fc:	10 97       	sbiw	r26, 0x00	; 0
    13fe:	81 f4       	brne	.+32     	; 0x1420 <free+0x3e>
    1400:	20 81       	ld	r18, Z
    1402:	31 81       	ldd	r19, Z+1	; 0x01
    1404:	82 0f       	add	r24, r18
    1406:	93 1f       	adc	r25, r19
    1408:	20 91 6f 00 	lds	r18, 0x006F	; 0x80006f <__brkval>
    140c:	30 91 70 00 	lds	r19, 0x0070	; 0x800070 <__brkval+0x1>
    1410:	28 17       	cp	r18, r24
    1412:	39 07       	cpc	r19, r25
    1414:	51 f5       	brne	.+84     	; 0x146a <free+0x88>
    1416:	f0 93 70 00 	sts	0x0070, r31	; 0x800070 <__brkval+0x1>
    141a:	e0 93 6f 00 	sts	0x006F, r30	; 0x80006f <__brkval>
    141e:	67 c0       	rjmp	.+206    	; 0x14ee <free+0x10c>
    1420:	ed 01       	movw	r28, r26
    1422:	20 e0       	ldi	r18, 0x00	; 0
    1424:	30 e0       	ldi	r19, 0x00	; 0
    1426:	ce 17       	cp	r28, r30
    1428:	df 07       	cpc	r29, r31
    142a:	40 f4       	brcc	.+16     	; 0x143c <free+0x5a>
    142c:	4a 81       	ldd	r20, Y+2	; 0x02
    142e:	5b 81       	ldd	r21, Y+3	; 0x03
    1430:	9e 01       	movw	r18, r28
    1432:	41 15       	cp	r20, r1
    1434:	51 05       	cpc	r21, r1
    1436:	f1 f0       	breq	.+60     	; 0x1474 <free+0x92>
    1438:	ea 01       	movw	r28, r20
    143a:	f5 cf       	rjmp	.-22     	; 0x1426 <free+0x44>
    143c:	d3 83       	std	Z+3, r29	; 0x03
    143e:	c2 83       	std	Z+2, r28	; 0x02
    1440:	40 81       	ld	r20, Z
    1442:	51 81       	ldd	r21, Z+1	; 0x01
    1444:	84 0f       	add	r24, r20
    1446:	95 1f       	adc	r25, r21
    1448:	c8 17       	cp	r28, r24
    144a:	d9 07       	cpc	r29, r25
    144c:	59 f4       	brne	.+22     	; 0x1464 <free+0x82>
    144e:	88 81       	ld	r24, Y
    1450:	99 81       	ldd	r25, Y+1	; 0x01
    1452:	84 0f       	add	r24, r20
    1454:	95 1f       	adc	r25, r21
    1456:	02 96       	adiw	r24, 0x02	; 2
    1458:	91 83       	std	Z+1, r25	; 0x01
    145a:	80 83       	st	Z, r24
    145c:	8a 81       	ldd	r24, Y+2	; 0x02
    145e:	9b 81       	ldd	r25, Y+3	; 0x03
    1460:	93 83       	std	Z+3, r25	; 0x03
    1462:	82 83       	std	Z+2, r24	; 0x02
    1464:	21 15       	cp	r18, r1
    1466:	31 05       	cpc	r19, r1
    1468:	29 f4       	brne	.+10     	; 0x1474 <free+0x92>
    146a:	f0 93 72 00 	sts	0x0072, r31	; 0x800072 <__flp+0x1>
    146e:	e0 93 71 00 	sts	0x0071, r30	; 0x800071 <__flp>
    1472:	3d c0       	rjmp	.+122    	; 0x14ee <free+0x10c>
    1474:	e9 01       	movw	r28, r18
    1476:	fb 83       	std	Y+3, r31	; 0x03
    1478:	ea 83       	std	Y+2, r30	; 0x02
    147a:	49 91       	ld	r20, Y+
    147c:	59 91       	ld	r21, Y+
    147e:	c4 0f       	add	r28, r20
    1480:	d5 1f       	adc	r29, r21
    1482:	ec 17       	cp	r30, r28
    1484:	fd 07       	cpc	r31, r29
    1486:	61 f4       	brne	.+24     	; 0x14a0 <free+0xbe>
    1488:	80 81       	ld	r24, Z
    148a:	91 81       	ldd	r25, Z+1	; 0x01
    148c:	84 0f       	add	r24, r20
    148e:	95 1f       	adc	r25, r21
    1490:	02 96       	adiw	r24, 0x02	; 2
    1492:	e9 01       	movw	r28, r18
    1494:	99 83       	std	Y+1, r25	; 0x01
    1496:	88 83       	st	Y, r24
    1498:	82 81       	ldd	r24, Z+2	; 0x02
    149a:	93 81       	ldd	r25, Z+3	; 0x03
    149c:	9b 83       	std	Y+3, r25	; 0x03
    149e:	8a 83       	std	Y+2, r24	; 0x02
    14a0:	e0 e0       	ldi	r30, 0x00	; 0
    14a2:	f0 e0       	ldi	r31, 0x00	; 0
    14a4:	12 96       	adiw	r26, 0x02	; 2
    14a6:	8d 91       	ld	r24, X+
    14a8:	9c 91       	ld	r25, X
    14aa:	13 97       	sbiw	r26, 0x03	; 3
    14ac:	00 97       	sbiw	r24, 0x00	; 0
    14ae:	19 f0       	breq	.+6      	; 0x14b6 <free+0xd4>
    14b0:	fd 01       	movw	r30, r26
    14b2:	dc 01       	movw	r26, r24
    14b4:	f7 cf       	rjmp	.-18     	; 0x14a4 <free+0xc2>
    14b6:	8d 91       	ld	r24, X+
    14b8:	9c 91       	ld	r25, X
    14ba:	11 97       	sbiw	r26, 0x01	; 1
    14bc:	9d 01       	movw	r18, r26
    14be:	2e 5f       	subi	r18, 0xFE	; 254
    14c0:	3f 4f       	sbci	r19, 0xFF	; 255
    14c2:	82 0f       	add	r24, r18
    14c4:	93 1f       	adc	r25, r19
    14c6:	20 91 6f 00 	lds	r18, 0x006F	; 0x80006f <__brkval>
    14ca:	30 91 70 00 	lds	r19, 0x0070	; 0x800070 <__brkval+0x1>
    14ce:	28 17       	cp	r18, r24
    14d0:	39 07       	cpc	r19, r25
    14d2:	69 f4       	brne	.+26     	; 0x14ee <free+0x10c>
    14d4:	30 97       	sbiw	r30, 0x00	; 0
    14d6:	29 f4       	brne	.+10     	; 0x14e2 <free+0x100>
    14d8:	10 92 72 00 	sts	0x0072, r1	; 0x800072 <__flp+0x1>
    14dc:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <__flp>
    14e0:	02 c0       	rjmp	.+4      	; 0x14e6 <free+0x104>
    14e2:	13 82       	std	Z+3, r1	; 0x03
    14e4:	12 82       	std	Z+2, r1	; 0x02
    14e6:	b0 93 70 00 	sts	0x0070, r27	; 0x800070 <__brkval+0x1>
    14ea:	a0 93 6f 00 	sts	0x006F, r26	; 0x80006f <__brkval>
    14ee:	df 91       	pop	r29
    14f0:	cf 91       	pop	r28
    14f2:	08 95       	ret

000014f4 <strlcat>:
    14f4:	dc 01       	movw	r26, r24
    14f6:	fb 01       	movw	r30, r22
    14f8:	41 50       	subi	r20, 0x01	; 1
    14fa:	50 40       	sbci	r21, 0x00	; 0
    14fc:	70 f0       	brcs	.+28     	; 0x151a <strlcat+0x26>
    14fe:	0d 90       	ld	r0, X+
    1500:	00 20       	and	r0, r0
    1502:	d1 f7       	brne	.-12     	; 0x14f8 <strlcat+0x4>
    1504:	11 97       	sbiw	r26, 0x01	; 1
    1506:	04 c0       	rjmp	.+8      	; 0x1510 <strlcat+0x1c>
    1508:	01 90       	ld	r0, Z+
    150a:	0d 92       	st	X+, r0
    150c:	00 20       	and	r0, r0
    150e:	61 f0       	breq	.+24     	; 0x1528 <strlcat+0x34>
    1510:	41 50       	subi	r20, 0x01	; 1
    1512:	50 40       	sbci	r21, 0x00	; 0
    1514:	c8 f7       	brcc	.-14     	; 0x1508 <strlcat+0x14>
    1516:	1c 92       	st	X, r1
    1518:	bf 01       	movw	r22, r30
    151a:	01 90       	ld	r0, Z+
    151c:	00 20       	and	r0, r0
    151e:	e9 f7       	brne	.-6      	; 0x151a <strlcat+0x26>
    1520:	e6 1b       	sub	r30, r22
    1522:	f7 0b       	sbc	r31, r23
    1524:	ae 0f       	add	r26, r30
    1526:	bf 1f       	adc	r27, r31
    1528:	08 94       	sec
    152a:	a8 0b       	sbc	r26, r24
    152c:	b9 0b       	sbc	r27, r25
    152e:	cd 01       	movw	r24, r26
    1530:	08 95       	ret

00001532 <strlcpy>:
    1532:	dc 01       	movw	r26, r24
    1534:	fb 01       	movw	r30, r22
    1536:	41 50       	subi	r20, 0x01	; 1
    1538:	50 40       	sbci	r21, 0x00	; 0
    153a:	58 f0       	brcs	.+22     	; 0x1552 <strlcpy+0x20>
    153c:	49 f0       	breq	.+18     	; 0x1550 <strlcpy+0x1e>
    153e:	01 90       	ld	r0, Z+
    1540:	0d 92       	st	X+, r0
    1542:	00 20       	and	r0, r0
    1544:	c1 f7       	brne	.-16     	; 0x1536 <strlcpy+0x4>
    1546:	e6 1b       	sub	r30, r22
    1548:	f7 0b       	sbc	r31, r23
    154a:	31 97       	sbiw	r30, 0x01	; 1
    154c:	cf 01       	movw	r24, r30
    154e:	08 95       	ret
    1550:	1c 92       	st	X, r1
    1552:	01 90       	ld	r0, Z+
    1554:	00 20       	and	r0, r0
    1556:	e9 f7       	brne	.-6      	; 0x1552 <strlcpy+0x20>
    1558:	f6 cf       	rjmp	.-20     	; 0x1546 <strlcpy+0x14>

0000155a <_exit>:
    155a:	f8 94       	cli

0000155c <__stop_program>:
    155c:	ff cf       	rjmp	.-2      	; 0x155c <__stop_program>
