
MCP4921_Example.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000634  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000006  00800060  00000634  000006c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000014  00800066  00800066  000006ce  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000006ce  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000700  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000128  00000000  00000000  0000073c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001f10  00000000  00000000  00000864  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d27  00000000  00000000  00002774  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009b9  00000000  00000000  0000349b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000284  00000000  00000000  00003e54  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000070e  00000000  00000000  000040d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000842  00000000  00000000  000047e6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e8  00000000  00000000  00005028  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	13 c0       	rjmp	.+38     	; 0x28 <__ctors_end>
   2:	37 c0       	rjmp	.+110    	; 0x72 <__bad_interrupt>
   4:	36 c0       	rjmp	.+108    	; 0x72 <__bad_interrupt>
   6:	35 c0       	rjmp	.+106    	; 0x72 <__bad_interrupt>
   8:	34 c0       	rjmp	.+104    	; 0x72 <__bad_interrupt>
   a:	33 c0       	rjmp	.+102    	; 0x72 <__bad_interrupt>
   c:	32 c0       	rjmp	.+100    	; 0x72 <__bad_interrupt>
   e:	31 c0       	rjmp	.+98     	; 0x72 <__bad_interrupt>
  10:	30 c0       	rjmp	.+96     	; 0x72 <__bad_interrupt>
  12:	2f c0       	rjmp	.+94     	; 0x72 <__bad_interrupt>
  14:	2e c0       	rjmp	.+92     	; 0x72 <__bad_interrupt>
  16:	2d c0       	rjmp	.+90     	; 0x72 <__bad_interrupt>
  18:	2c c0       	rjmp	.+88     	; 0x72 <__bad_interrupt>
  1a:	2b c0       	rjmp	.+86     	; 0x72 <__bad_interrupt>
  1c:	2a c0       	rjmp	.+84     	; 0x72 <__bad_interrupt>
  1e:	29 c0       	rjmp	.+82     	; 0x72 <__bad_interrupt>
  20:	28 c0       	rjmp	.+80     	; 0x72 <__bad_interrupt>
  22:	27 c0       	rjmp	.+78     	; 0x72 <__bad_interrupt>
  24:	26 c0       	rjmp	.+76     	; 0x72 <__bad_interrupt>

00000026 <__ctors_start>:
  26:	e0 00       	.word	0x00e0	; ????

00000028 <__ctors_end>:
  28:	11 24       	eor	r1, r1
  2a:	1f be       	out	0x3f, r1	; 63
  2c:	cf e5       	ldi	r28, 0x5F	; 95
  2e:	d4 e0       	ldi	r29, 0x04	; 4
  30:	de bf       	out	0x3e, r29	; 62
  32:	cd bf       	out	0x3d, r28	; 61

00000034 <__do_clear_bss>:
  34:	20 e0       	ldi	r18, 0x00	; 0
  36:	a6 e6       	ldi	r26, 0x66	; 102
  38:	b0 e0       	ldi	r27, 0x00	; 0
  3a:	01 c0       	rjmp	.+2      	; 0x3e <.do_clear_bss_start>

0000003c <.do_clear_bss_loop>:
  3c:	1d 92       	st	X+, r1

0000003e <.do_clear_bss_start>:
  3e:	aa 37       	cpi	r26, 0x7A	; 122
  40:	b2 07       	cpc	r27, r18
  42:	e1 f7       	brne	.-8      	; 0x3c <.do_clear_bss_loop>

00000044 <__do_copy_data>:
  44:	10 e0       	ldi	r17, 0x00	; 0
  46:	a0 e6       	ldi	r26, 0x60	; 96
  48:	b0 e0       	ldi	r27, 0x00	; 0
  4a:	e4 e3       	ldi	r30, 0x34	; 52
  4c:	f6 e0       	ldi	r31, 0x06	; 6
  4e:	02 c0       	rjmp	.+4      	; 0x54 <__do_copy_data+0x10>
  50:	05 90       	lpm	r0, Z+
  52:	0d 92       	st	X+, r0
  54:	a6 36       	cpi	r26, 0x66	; 102
  56:	b1 07       	cpc	r27, r17
  58:	d9 f7       	brne	.-10     	; 0x50 <__do_copy_data+0xc>

0000005a <__do_global_ctors>:
  5a:	10 e0       	ldi	r17, 0x00	; 0
  5c:	c4 e1       	ldi	r28, 0x14	; 20
  5e:	d0 e0       	ldi	r29, 0x00	; 0
  60:	03 c0       	rjmp	.+6      	; 0x68 <__do_global_ctors+0xe>
  62:	21 97       	sbiw	r28, 0x01	; 1
  64:	fe 01       	movw	r30, r28
  66:	bd d1       	rcall	.+890    	; 0x3e2 <__tablejump2__>
  68:	c3 31       	cpi	r28, 0x13	; 19
  6a:	d1 07       	cpc	r29, r17
  6c:	d1 f7       	brne	.-12     	; 0x62 <__do_global_ctors+0x8>
  6e:	9c d0       	rcall	.+312    	; 0x1a8 <main>
  70:	df c2       	rjmp	.+1470   	; 0x630 <_exit>

00000072 <__bad_interrupt>:
  72:	c6 cf       	rjmp	.-116    	; 0x0 <__vectors>

00000074 <_Z41__static_initialization_and_destruction_0ii>:
	
	while (1)
	{
		
	}
  74:	0f 93       	push	r16
  76:	1f 93       	push	r17
  78:	cf 93       	push	r28
  7a:	df 93       	push	r29
  7c:	01 97       	sbiw	r24, 0x01	; 1
  7e:	09 f0       	breq	.+2      	; 0x82 <_Z41__static_initialization_and_destruction_0ii+0xe>
  80:	8e c0       	rjmp	.+284    	; 0x19e <_Z41__static_initialization_and_destruction_0ii+0x12a>
  82:	6f 3f       	cpi	r22, 0xFF	; 255
  84:	7f 4f       	sbci	r23, 0xFF	; 255
  86:	09 f0       	breq	.+2      	; 0x8a <_Z41__static_initialization_and_destruction_0ii+0x16>
  88:	8a c0       	rjmp	.+276    	; 0x19e <_Z41__static_initialization_and_destruction_0ii+0x12a>

#include "Port.h"
#include "SPI_Master.h"
#include "MCP4921.h"

Port *sck = new Port(&PORTB, &DDRB, &PINB, 5);
  8a:	87 e0       	ldi	r24, 0x07	; 7
  8c:	90 e0       	ldi	r25, 0x00	; 0
  8e:	4d d1       	rcall	.+666    	; 0x32a <_ZN4PortnwEj>
  90:	ec 01       	movw	r28, r24
  92:	05 e0       	ldi	r16, 0x05	; 5
  94:	26 e3       	ldi	r18, 0x36	; 54
  96:	30 e0       	ldi	r19, 0x00	; 0
  98:	47 e3       	ldi	r20, 0x37	; 55
  9a:	50 e0       	ldi	r21, 0x00	; 0
  9c:	68 e3       	ldi	r22, 0x38	; 56
  9e:	70 e0       	ldi	r23, 0x00	; 0
  a0:	32 d1       	rcall	.+612    	; 0x306 <_ZN4PortC1EPVhS1_S1_h>
  a2:	d0 93 75 00 	sts	0x0075, r29	; 0x800075 <sck+0x1>
  a6:	c0 93 74 00 	sts	0x0074, r28	; 0x800074 <sck>
Port *mosi = new Port(&PORTB, &DDRB, &PINB, 3);
  aa:	87 e0       	ldi	r24, 0x07	; 7
  ac:	90 e0       	ldi	r25, 0x00	; 0
  ae:	3d d1       	rcall	.+634    	; 0x32a <_ZN4PortnwEj>
  b0:	ec 01       	movw	r28, r24
  b2:	03 e0       	ldi	r16, 0x03	; 3
  b4:	26 e3       	ldi	r18, 0x36	; 54
  b6:	30 e0       	ldi	r19, 0x00	; 0
  b8:	47 e3       	ldi	r20, 0x37	; 55
  ba:	50 e0       	ldi	r21, 0x00	; 0
  bc:	68 e3       	ldi	r22, 0x38	; 56
  be:	70 e0       	ldi	r23, 0x00	; 0
  c0:	22 d1       	rcall	.+580    	; 0x306 <_ZN4PortC1EPVhS1_S1_h>
  c2:	d0 93 73 00 	sts	0x0073, r29	; 0x800073 <mosi+0x1>
  c6:	c0 93 72 00 	sts	0x0072, r28	; 0x800072 <mosi>
Port *miso = new Port(&PORTB, &DDRB, &PINB, 4);
  ca:	87 e0       	ldi	r24, 0x07	; 7
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	2d d1       	rcall	.+602    	; 0x32a <_ZN4PortnwEj>
  d0:	ec 01       	movw	r28, r24
  d2:	04 e0       	ldi	r16, 0x04	; 4
  d4:	26 e3       	ldi	r18, 0x36	; 54
  d6:	30 e0       	ldi	r19, 0x00	; 0
  d8:	47 e3       	ldi	r20, 0x37	; 55
  da:	50 e0       	ldi	r21, 0x00	; 0
  dc:	68 e3       	ldi	r22, 0x38	; 56
  de:	70 e0       	ldi	r23, 0x00	; 0
  e0:	12 d1       	rcall	.+548    	; 0x306 <_ZN4PortC1EPVhS1_S1_h>
  e2:	d0 93 71 00 	sts	0x0071, r29	; 0x800071 <miso+0x1>
  e6:	c0 93 70 00 	sts	0x0070, r28	; 0x800070 <miso>
Port *ss = new Port(&PORTB, &DDRB, &PINB, 2);
  ea:	87 e0       	ldi	r24, 0x07	; 7
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	1d d1       	rcall	.+570    	; 0x32a <_ZN4PortnwEj>
  f0:	ec 01       	movw	r28, r24
  f2:	02 e0       	ldi	r16, 0x02	; 2
  f4:	26 e3       	ldi	r18, 0x36	; 54
  f6:	30 e0       	ldi	r19, 0x00	; 0
  f8:	47 e3       	ldi	r20, 0x37	; 55
  fa:	50 e0       	ldi	r21, 0x00	; 0
  fc:	68 e3       	ldi	r22, 0x38	; 56
  fe:	70 e0       	ldi	r23, 0x00	; 0
 100:	02 d1       	rcall	.+516    	; 0x306 <_ZN4PortC1EPVhS1_S1_h>
 102:	d0 93 6f 00 	sts	0x006F, r29	; 0x80006f <ss+0x1>
 106:	c0 93 6e 00 	sts	0x006E, r28	; 0x80006e <ss>

SPI_Master *spi = new SPI_Master(sck, mosi, miso, ss);
 10a:	88 e0       	ldi	r24, 0x08	; 8
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	5f d1       	rcall	.+702    	; 0x3ce <_ZN10SPI_MasternwEj>
 110:	ec 01       	movw	r28, r24
 112:	00 91 6e 00 	lds	r16, 0x006E	; 0x80006e <ss>
 116:	10 91 6f 00 	lds	r17, 0x006F	; 0x80006f <ss+0x1>
 11a:	20 91 70 00 	lds	r18, 0x0070	; 0x800070 <miso>
 11e:	30 91 71 00 	lds	r19, 0x0071	; 0x800071 <miso+0x1>
 122:	40 91 72 00 	lds	r20, 0x0072	; 0x800072 <mosi>
 126:	50 91 73 00 	lds	r21, 0x0073	; 0x800073 <mosi+0x1>
 12a:	60 91 74 00 	lds	r22, 0x0074	; 0x800074 <sck>
 12e:	70 91 75 00 	lds	r23, 0x0075	; 0x800075 <sck+0x1>
 132:	05 d1       	rcall	.+522    	; 0x33e <_ZN10SPI_MasterC1EP4PortS1_S1_S1_>
 134:	d0 93 6d 00 	sts	0x006D, r29	; 0x80006d <spi+0x1>
 138:	c0 93 6c 00 	sts	0x006C, r28	; 0x80006c <spi>

Port *cs = new Port(&PORTB, &DDRB, &PINB, 0);
 13c:	87 e0       	ldi	r24, 0x07	; 7
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	f4 d0       	rcall	.+488    	; 0x32a <_ZN4PortnwEj>
 142:	ec 01       	movw	r28, r24
 144:	00 e0       	ldi	r16, 0x00	; 0
 146:	26 e3       	ldi	r18, 0x36	; 54
 148:	30 e0       	ldi	r19, 0x00	; 0
 14a:	47 e3       	ldi	r20, 0x37	; 55
 14c:	50 e0       	ldi	r21, 0x00	; 0
 14e:	68 e3       	ldi	r22, 0x38	; 56
 150:	70 e0       	ldi	r23, 0x00	; 0
 152:	d9 d0       	rcall	.+434    	; 0x306 <_ZN4PortC1EPVhS1_S1_h>
 154:	d0 93 6b 00 	sts	0x006B, r29	; 0x80006b <cs+0x1>
 158:	c0 93 6a 00 	sts	0x006A, r28	; 0x80006a <cs>
Port *ldac = new Port(&PORTB, &DDRB, &PINB, 1);
 15c:	87 e0       	ldi	r24, 0x07	; 7
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	e4 d0       	rcall	.+456    	; 0x32a <_ZN4PortnwEj>
 162:	ec 01       	movw	r28, r24
 164:	01 e0       	ldi	r16, 0x01	; 1
 166:	26 e3       	ldi	r18, 0x36	; 54
 168:	30 e0       	ldi	r19, 0x00	; 0
 16a:	47 e3       	ldi	r20, 0x37	; 55
 16c:	50 e0       	ldi	r21, 0x00	; 0
 16e:	68 e3       	ldi	r22, 0x38	; 56
 170:	70 e0       	ldi	r23, 0x00	; 0
 172:	c9 d0       	rcall	.+402    	; 0x306 <_ZN4PortC1EPVhS1_S1_h>
 174:	d0 93 69 00 	sts	0x0069, r29	; 0x800069 <ldac+0x1>
 178:	c0 93 68 00 	sts	0x0068, r28	; 0x800068 <ldac>

MCP4921 *dac = new MCP4921(cs, ldac);
 17c:	84 e0       	ldi	r24, 0x04	; 4
 17e:	90 e0       	ldi	r25, 0x00	; 0
 180:	6a d0       	rcall	.+212    	; 0x256 <_ZN7MCP4921nwEj>
 182:	ec 01       	movw	r28, r24
 184:	40 91 68 00 	lds	r20, 0x0068	; 0x800068 <ldac>
 188:	50 91 69 00 	lds	r21, 0x0069	; 0x800069 <ldac+0x1>
 18c:	60 91 6a 00 	lds	r22, 0x006A	; 0x80006a <cs>
 190:	70 91 6b 00 	lds	r23, 0x006B	; 0x80006b <cs+0x1>
 194:	1b d0       	rcall	.+54     	; 0x1cc <_ZN7MCP4921C1EP4PortS1_>
 196:	d0 93 67 00 	sts	0x0067, r29	; 0x800067 <__data_end+0x1>
 19a:	c0 93 66 00 	sts	0x0066, r28	; 0x800066 <__data_end>
	
	while (1)
	{
		
	}
 19e:	df 91       	pop	r29
 1a0:	cf 91       	pop	r28
 1a2:	1f 91       	pop	r17
 1a4:	0f 91       	pop	r16
 1a6:	08 95       	ret

000001a8 <main>:

MCP4921 *dac = new MCP4921(cs, ldac);

int main(void)
{
	dac->SetOutput(1022, spi);
 1a8:	40 91 6c 00 	lds	r20, 0x006C	; 0x80006c <spi>
 1ac:	50 91 6d 00 	lds	r21, 0x006D	; 0x80006d <spi+0x1>
 1b0:	6e ef       	ldi	r22, 0xFE	; 254
 1b2:	73 e0       	ldi	r23, 0x03	; 3
 1b4:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__data_end>
 1b8:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <__data_end+0x1>
 1bc:	20 d0       	rcall	.+64     	; 0x1fe <_ZN7MCP49219SetOutputEjP10SPI_Master>
 1be:	ff cf       	rjmp	.-2      	; 0x1be <main+0x16>

000001c0 <_GLOBAL__sub_I_sck>:
	
	while (1)
	{
		
	}
 1c0:	6f ef       	ldi	r22, 0xFF	; 255
 1c2:	7f ef       	ldi	r23, 0xFF	; 255
 1c4:	81 e0       	ldi	r24, 0x01	; 1
 1c6:	90 e0       	ldi	r25, 0x00	; 0
 1c8:	55 df       	rcall	.-342    	; 0x74 <_Z41__static_initialization_and_destruction_0ii>
 1ca:	08 95       	ret

000001cc <_ZN7MCP4921C1EP4PortS1_>:
	
	this->LDAC->Clear();
	this->LDAC->Set();
}

MCP4921::~MCP4921() {}
 1cc:	0f 93       	push	r16
 1ce:	1f 93       	push	r17
 1d0:	cf 93       	push	r28
 1d2:	df 93       	push	r29
 1d4:	ec 01       	movw	r28, r24
 1d6:	cb 01       	movw	r24, r22
 1d8:	8a 01       	movw	r16, r20
 1da:	79 83       	std	Y+1, r23	; 0x01
 1dc:	68 83       	st	Y, r22
 1de:	5a d0       	rcall	.+180    	; 0x294 <_ZN4Port11SetAsOutputEv>
 1e0:	88 81       	ld	r24, Y
 1e2:	99 81       	ldd	r25, Y+1	; 0x01
 1e4:	6a d0       	rcall	.+212    	; 0x2ba <_ZN4Port3SetEv>
 1e6:	1b 83       	std	Y+3, r17	; 0x03
 1e8:	0a 83       	std	Y+2, r16	; 0x02
 1ea:	c8 01       	movw	r24, r16
 1ec:	53 d0       	rcall	.+166    	; 0x294 <_ZN4Port11SetAsOutputEv>
 1ee:	8a 81       	ldd	r24, Y+2	; 0x02
 1f0:	9b 81       	ldd	r25, Y+3	; 0x03
 1f2:	63 d0       	rcall	.+198    	; 0x2ba <_ZN4Port3SetEv>
 1f4:	df 91       	pop	r29
 1f6:	cf 91       	pop	r28
 1f8:	1f 91       	pop	r17
 1fa:	0f 91       	pop	r16
 1fc:	08 95       	ret

000001fe <_ZN7MCP49219SetOutputEjP10SPI_Master>:
 1fe:	ef 92       	push	r14
 200:	ff 92       	push	r15
 202:	0f 93       	push	r16
 204:	1f 93       	push	r17
 206:	cf 93       	push	r28
 208:	df 93       	push	r29
 20a:	ec 01       	movw	r28, r24
 20c:	e6 2e       	mov	r14, r22
 20e:	8a 01       	movw	r16, r20
 210:	70 63       	ori	r23, 0x30	; 48
 212:	f7 2e       	mov	r15, r23
 214:	40 e0       	ldi	r20, 0x00	; 0
 216:	60 e0       	ldi	r22, 0x00	; 0
 218:	c8 01       	movw	r24, r16
 21a:	b4 d0       	rcall	.+360    	; 0x384 <_ZN10SPI_Master7SetModeE12SPI_Polarity9SPI_Phase>
 21c:	88 81       	ld	r24, Y
 21e:	99 81       	ldd	r25, Y+1	; 0x01
 220:	5e d0       	rcall	.+188    	; 0x2de <_ZN4Port5ClearEv>
 222:	6f 2d       	mov	r22, r15
 224:	c8 01       	movw	r24, r16
 226:	cd d0       	rcall	.+410    	; 0x3c2 <_ZN10SPI_Master8SendByteEh>
 228:	c8 01       	movw	r24, r16
 22a:	cf d0       	rcall	.+414    	; 0x3ca <_ZN10SPI_Master11ReceiveByteEv>
 22c:	6e 2d       	mov	r22, r14
 22e:	c8 01       	movw	r24, r16
 230:	c8 d0       	rcall	.+400    	; 0x3c2 <_ZN10SPI_Master8SendByteEh>
 232:	c8 01       	movw	r24, r16
 234:	ca d0       	rcall	.+404    	; 0x3ca <_ZN10SPI_Master11ReceiveByteEv>
 236:	88 81       	ld	r24, Y
 238:	99 81       	ldd	r25, Y+1	; 0x01
 23a:	3f d0       	rcall	.+126    	; 0x2ba <_ZN4Port3SetEv>
 23c:	8a 81       	ldd	r24, Y+2	; 0x02
 23e:	9b 81       	ldd	r25, Y+3	; 0x03
 240:	4e d0       	rcall	.+156    	; 0x2de <_ZN4Port5ClearEv>
 242:	8a 81       	ldd	r24, Y+2	; 0x02
 244:	9b 81       	ldd	r25, Y+3	; 0x03
 246:	39 d0       	rcall	.+114    	; 0x2ba <_ZN4Port3SetEv>
 248:	df 91       	pop	r29
 24a:	cf 91       	pop	r28
 24c:	1f 91       	pop	r17
 24e:	0f 91       	pop	r16
 250:	ff 90       	pop	r15
 252:	ef 90       	pop	r14
 254:	08 95       	ret

00000256 <_ZN7MCP4921nwEj>:

void* MCP4921::operator new(size_t size)
{
 256:	cf 93       	push	r28
 258:	df 93       	push	r29
 25a:	ec 01       	movw	r28, r24
	void* ptr;
	do
	{
		ptr = malloc(size);
 25c:	ce 01       	movw	r24, r28
 25e:	c7 d0       	rcall	.+398    	; 0x3ee <malloc>
	}while(ptr == nullptr);
 260:	00 97       	sbiw	r24, 0x00	; 0
 262:	e1 f3       	breq	.-8      	; 0x25c <_ZN7MCP4921nwEj+0x6>
	
	return ptr;
}
 264:	df 91       	pop	r29
 266:	cf 91       	pop	r28
 268:	08 95       	ret

0000026a <_ZN4Port10SetAsInputEv>:
bool Port::IsClear()
{
	return !(*this->PIN & (1<<this->pinNum));
}

Port::~Port(){}
 26a:	dc 01       	movw	r26, r24
 26c:	12 96       	adiw	r26, 0x02	; 2
 26e:	ed 91       	ld	r30, X+
 270:	fc 91       	ld	r31, X
 272:	13 97       	sbiw	r26, 0x03	; 3
 274:	40 81       	ld	r20, Z
 276:	21 e0       	ldi	r18, 0x01	; 1
 278:	30 e0       	ldi	r19, 0x00	; 0
 27a:	b9 01       	movw	r22, r18
 27c:	16 96       	adiw	r26, 0x06	; 6
 27e:	0c 90       	ld	r0, X
 280:	02 c0       	rjmp	.+4      	; 0x286 <_ZN4Port10SetAsInputEv+0x1c>
 282:	66 0f       	add	r22, r22
 284:	77 1f       	adc	r23, r23
 286:	0a 94       	dec	r0
 288:	e2 f7       	brpl	.-8      	; 0x282 <_ZN4Port10SetAsInputEv+0x18>
 28a:	cb 01       	movw	r24, r22
 28c:	80 95       	com	r24
 28e:	84 23       	and	r24, r20
 290:	80 83       	st	Z, r24
 292:	08 95       	ret

00000294 <_ZN4Port11SetAsOutputEv>:
 294:	dc 01       	movw	r26, r24
 296:	12 96       	adiw	r26, 0x02	; 2
 298:	ed 91       	ld	r30, X+
 29a:	fc 91       	ld	r31, X
 29c:	13 97       	sbiw	r26, 0x03	; 3
 29e:	40 81       	ld	r20, Z
 2a0:	21 e0       	ldi	r18, 0x01	; 1
 2a2:	30 e0       	ldi	r19, 0x00	; 0
 2a4:	c9 01       	movw	r24, r18
 2a6:	16 96       	adiw	r26, 0x06	; 6
 2a8:	0c 90       	ld	r0, X
 2aa:	02 c0       	rjmp	.+4      	; 0x2b0 <_ZN4Port11SetAsOutputEv+0x1c>
 2ac:	88 0f       	add	r24, r24
 2ae:	99 1f       	adc	r25, r25
 2b0:	0a 94       	dec	r0
 2b2:	e2 f7       	brpl	.-8      	; 0x2ac <_ZN4Port11SetAsOutputEv+0x18>
 2b4:	84 2b       	or	r24, r20
 2b6:	80 83       	st	Z, r24
 2b8:	08 95       	ret

000002ba <_ZN4Port3SetEv>:
 2ba:	dc 01       	movw	r26, r24
 2bc:	ed 91       	ld	r30, X+
 2be:	fc 91       	ld	r31, X
 2c0:	11 97       	sbiw	r26, 0x01	; 1
 2c2:	40 81       	ld	r20, Z
 2c4:	21 e0       	ldi	r18, 0x01	; 1
 2c6:	30 e0       	ldi	r19, 0x00	; 0
 2c8:	c9 01       	movw	r24, r18
 2ca:	16 96       	adiw	r26, 0x06	; 6
 2cc:	0c 90       	ld	r0, X
 2ce:	02 c0       	rjmp	.+4      	; 0x2d4 <_ZN4Port3SetEv+0x1a>
 2d0:	88 0f       	add	r24, r24
 2d2:	99 1f       	adc	r25, r25
 2d4:	0a 94       	dec	r0
 2d6:	e2 f7       	brpl	.-8      	; 0x2d0 <_ZN4Port3SetEv+0x16>
 2d8:	84 2b       	or	r24, r20
 2da:	80 83       	st	Z, r24
 2dc:	08 95       	ret

000002de <_ZN4Port5ClearEv>:
 2de:	dc 01       	movw	r26, r24
 2e0:	ed 91       	ld	r30, X+
 2e2:	fc 91       	ld	r31, X
 2e4:	11 97       	sbiw	r26, 0x01	; 1
 2e6:	40 81       	ld	r20, Z
 2e8:	21 e0       	ldi	r18, 0x01	; 1
 2ea:	30 e0       	ldi	r19, 0x00	; 0
 2ec:	b9 01       	movw	r22, r18
 2ee:	16 96       	adiw	r26, 0x06	; 6
 2f0:	0c 90       	ld	r0, X
 2f2:	02 c0       	rjmp	.+4      	; 0x2f8 <_ZN4Port5ClearEv+0x1a>
 2f4:	66 0f       	add	r22, r22
 2f6:	77 1f       	adc	r23, r23
 2f8:	0a 94       	dec	r0
 2fa:	e2 f7       	brpl	.-8      	; 0x2f4 <_ZN4Port5ClearEv+0x16>
 2fc:	cb 01       	movw	r24, r22
 2fe:	80 95       	com	r24
 300:	84 23       	and	r24, r20
 302:	80 83       	st	Z, r24
 304:	08 95       	ret

00000306 <_ZN4PortC1EPVhS1_S1_h>:
 306:	0f 93       	push	r16
 308:	cf 93       	push	r28
 30a:	df 93       	push	r29
 30c:	ec 01       	movw	r28, r24
 30e:	79 83       	std	Y+1, r23	; 0x01
 310:	68 83       	st	Y, r22
 312:	5b 83       	std	Y+3, r21	; 0x03
 314:	4a 83       	std	Y+2, r20	; 0x02
 316:	3d 83       	std	Y+5, r19	; 0x05
 318:	2c 83       	std	Y+4, r18	; 0x04
 31a:	0e 83       	std	Y+6, r16	; 0x06
 31c:	a6 df       	rcall	.-180    	; 0x26a <_ZN4Port10SetAsInputEv>
 31e:	ce 01       	movw	r24, r28
 320:	de df       	rcall	.-68     	; 0x2de <_ZN4Port5ClearEv>
 322:	df 91       	pop	r29
 324:	cf 91       	pop	r28
 326:	0f 91       	pop	r16
 328:	08 95       	ret

0000032a <_ZN4PortnwEj>:

void* Port::operator new(size_t size)
{
 32a:	cf 93       	push	r28
 32c:	df 93       	push	r29
 32e:	ec 01       	movw	r28, r24
	void* ptr;
	do
	{
		ptr = malloc(size);
 330:	ce 01       	movw	r24, r28
 332:	5d d0       	rcall	.+186    	; 0x3ee <malloc>
	}while(ptr == nullptr);
 334:	00 97       	sbiw	r24, 0x00	; 0
 336:	e1 f3       	breq	.-8      	; 0x330 <_ZN4PortnwEj+0x6>
	
	return ptr;
}
 338:	df 91       	pop	r29
 33a:	cf 91       	pop	r28
 33c:	08 95       	ret

0000033e <_ZN10SPI_MasterC1EP4PortS1_S1_S1_>:
{
	delete SCK;
	delete MOSI;
	delete MISO;
	delete SS;
}
 33e:	0f 93       	push	r16
 340:	1f 93       	push	r17
 342:	cf 93       	push	r28
 344:	df 93       	push	r29
 346:	ec 01       	movw	r28, r24
 348:	cb 01       	movw	r24, r22
 34a:	79 83       	std	Y+1, r23	; 0x01
 34c:	68 83       	st	Y, r22
 34e:	5b 83       	std	Y+3, r21	; 0x03
 350:	4a 83       	std	Y+2, r20	; 0x02
 352:	3d 83       	std	Y+5, r19	; 0x05
 354:	2c 83       	std	Y+4, r18	; 0x04
 356:	1f 83       	std	Y+7, r17	; 0x07
 358:	0e 83       	std	Y+6, r16	; 0x06
 35a:	9c df       	rcall	.-200    	; 0x294 <_ZN4Port11SetAsOutputEv>
 35c:	8a 81       	ldd	r24, Y+2	; 0x02
 35e:	9b 81       	ldd	r25, Y+3	; 0x03
 360:	99 df       	rcall	.-206    	; 0x294 <_ZN4Port11SetAsOutputEv>
 362:	8c 81       	ldd	r24, Y+4	; 0x04
 364:	9d 81       	ldd	r25, Y+5	; 0x05
 366:	a9 df       	rcall	.-174    	; 0x2ba <_ZN4Port3SetEv>
 368:	8e 81       	ldd	r24, Y+6	; 0x06
 36a:	9f 81       	ldd	r25, Y+7	; 0x07
 36c:	a6 df       	rcall	.-180    	; 0x2ba <_ZN4Port3SetEv>
 36e:	8e 81       	ldd	r24, Y+6	; 0x06
 370:	9f 81       	ldd	r25, Y+7	; 0x07
 372:	90 df       	rcall	.-224    	; 0x294 <_ZN4Port11SetAsOutputEv>
 374:	8d b1       	in	r24, 0x0d	; 13
 376:	83 65       	ori	r24, 0x53	; 83
 378:	8d b9       	out	0x0d, r24	; 13
 37a:	df 91       	pop	r29
 37c:	cf 91       	pop	r28
 37e:	1f 91       	pop	r17
 380:	0f 91       	pop	r16
 382:	08 95       	ret

00000384 <_ZN10SPI_Master7SetModeE12SPI_Polarity9SPI_Phase>:
 384:	8d b1       	in	r24, 0x0d	; 13
 386:	88 70       	andi	r24, 0x08	; 8
 388:	86 17       	cp	r24, r22
 38a:	59 f0       	breq	.+22     	; 0x3a2 <_ZN10SPI_Master7SetModeE12SPI_Polarity9SPI_Phase+0x1e>
 38c:	61 11       	cpse	r22, r1
 38e:	04 c0       	rjmp	.+8      	; 0x398 <_ZN10SPI_Master7SetModeE12SPI_Polarity9SPI_Phase+0x14>
 390:	8d b1       	in	r24, 0x0d	; 13
 392:	87 7f       	andi	r24, 0xF7	; 247
 394:	8d b9       	out	0x0d, r24	; 13
 396:	05 c0       	rjmp	.+10     	; 0x3a2 <_ZN10SPI_Master7SetModeE12SPI_Polarity9SPI_Phase+0x1e>
 398:	61 30       	cpi	r22, 0x01	; 1
 39a:	19 f4       	brne	.+6      	; 0x3a2 <_ZN10SPI_Master7SetModeE12SPI_Polarity9SPI_Phase+0x1e>
 39c:	8d b1       	in	r24, 0x0d	; 13
 39e:	88 60       	ori	r24, 0x08	; 8
 3a0:	8d b9       	out	0x0d, r24	; 13
 3a2:	8d b1       	in	r24, 0x0d	; 13
 3a4:	84 70       	andi	r24, 0x04	; 4
 3a6:	84 17       	cp	r24, r20
 3a8:	59 f0       	breq	.+22     	; 0x3c0 <_ZN10SPI_Master7SetModeE12SPI_Polarity9SPI_Phase+0x3c>
 3aa:	41 11       	cpse	r20, r1
 3ac:	04 c0       	rjmp	.+8      	; 0x3b6 <_ZN10SPI_Master7SetModeE12SPI_Polarity9SPI_Phase+0x32>
 3ae:	8d b1       	in	r24, 0x0d	; 13
 3b0:	8b 7f       	andi	r24, 0xFB	; 251
 3b2:	8d b9       	out	0x0d, r24	; 13
 3b4:	08 95       	ret
 3b6:	41 30       	cpi	r20, 0x01	; 1
 3b8:	19 f4       	brne	.+6      	; 0x3c0 <_ZN10SPI_Master7SetModeE12SPI_Polarity9SPI_Phase+0x3c>
 3ba:	8d b1       	in	r24, 0x0d	; 13
 3bc:	84 60       	ori	r24, 0x04	; 4
 3be:	8d b9       	out	0x0d, r24	; 13
 3c0:	08 95       	ret

000003c2 <_ZN10SPI_Master8SendByteEh>:
 3c2:	6f b9       	out	0x0f, r22	; 15
 3c4:	77 9b       	sbis	0x0e, 7	; 14
 3c6:	fe cf       	rjmp	.-4      	; 0x3c4 <_ZN10SPI_Master8SendByteEh+0x2>
 3c8:	08 95       	ret

000003ca <_ZN10SPI_Master11ReceiveByteEv>:
 3ca:	8f b1       	in	r24, 0x0f	; 15
 3cc:	08 95       	ret

000003ce <_ZN10SPI_MasternwEj>:

void* SPI_Master::operator new(size_t size)
{
 3ce:	cf 93       	push	r28
 3d0:	df 93       	push	r29
 3d2:	ec 01       	movw	r28, r24
	void* ptr;
	do
	{
		ptr = malloc(size);
 3d4:	ce 01       	movw	r24, r28
 3d6:	0b d0       	rcall	.+22     	; 0x3ee <malloc>
	}while(ptr == nullptr);
 3d8:	00 97       	sbiw	r24, 0x00	; 0
 3da:	e1 f3       	breq	.-8      	; 0x3d4 <_ZN10SPI_MasternwEj+0x6>
	
	return ptr;
}
 3dc:	df 91       	pop	r29
 3de:	cf 91       	pop	r28
 3e0:	08 95       	ret

000003e2 <__tablejump2__>:
 3e2:	ee 0f       	add	r30, r30
 3e4:	ff 1f       	adc	r31, r31
 3e6:	05 90       	lpm	r0, Z+
 3e8:	f4 91       	lpm	r31, Z
 3ea:	e0 2d       	mov	r30, r0
 3ec:	09 94       	ijmp

000003ee <malloc>:
 3ee:	0f 93       	push	r16
 3f0:	1f 93       	push	r17
 3f2:	cf 93       	push	r28
 3f4:	df 93       	push	r29
 3f6:	82 30       	cpi	r24, 0x02	; 2
 3f8:	91 05       	cpc	r25, r1
 3fa:	10 f4       	brcc	.+4      	; 0x400 <__DATA_REGION_LENGTH__>
 3fc:	82 e0       	ldi	r24, 0x02	; 2
 3fe:	90 e0       	ldi	r25, 0x00	; 0
 400:	e0 91 78 00 	lds	r30, 0x0078	; 0x800078 <__flp>
 404:	f0 91 79 00 	lds	r31, 0x0079	; 0x800079 <__flp+0x1>
 408:	20 e0       	ldi	r18, 0x00	; 0
 40a:	30 e0       	ldi	r19, 0x00	; 0
 40c:	a0 e0       	ldi	r26, 0x00	; 0
 40e:	b0 e0       	ldi	r27, 0x00	; 0
 410:	30 97       	sbiw	r30, 0x00	; 0
 412:	19 f1       	breq	.+70     	; 0x45a <__DATA_REGION_LENGTH__+0x5a>
 414:	40 81       	ld	r20, Z
 416:	51 81       	ldd	r21, Z+1	; 0x01
 418:	02 81       	ldd	r16, Z+2	; 0x02
 41a:	13 81       	ldd	r17, Z+3	; 0x03
 41c:	48 17       	cp	r20, r24
 41e:	59 07       	cpc	r21, r25
 420:	c8 f0       	brcs	.+50     	; 0x454 <__DATA_REGION_LENGTH__+0x54>
 422:	84 17       	cp	r24, r20
 424:	95 07       	cpc	r25, r21
 426:	69 f4       	brne	.+26     	; 0x442 <__DATA_REGION_LENGTH__+0x42>
 428:	10 97       	sbiw	r26, 0x00	; 0
 42a:	31 f0       	breq	.+12     	; 0x438 <__DATA_REGION_LENGTH__+0x38>
 42c:	12 96       	adiw	r26, 0x02	; 2
 42e:	0c 93       	st	X, r16
 430:	12 97       	sbiw	r26, 0x02	; 2
 432:	13 96       	adiw	r26, 0x03	; 3
 434:	1c 93       	st	X, r17
 436:	27 c0       	rjmp	.+78     	; 0x486 <__stack+0x27>
 438:	00 93 78 00 	sts	0x0078, r16	; 0x800078 <__flp>
 43c:	10 93 79 00 	sts	0x0079, r17	; 0x800079 <__flp+0x1>
 440:	22 c0       	rjmp	.+68     	; 0x486 <__stack+0x27>
 442:	21 15       	cp	r18, r1
 444:	31 05       	cpc	r19, r1
 446:	19 f0       	breq	.+6      	; 0x44e <__DATA_REGION_LENGTH__+0x4e>
 448:	42 17       	cp	r20, r18
 44a:	53 07       	cpc	r21, r19
 44c:	18 f4       	brcc	.+6      	; 0x454 <__DATA_REGION_LENGTH__+0x54>
 44e:	9a 01       	movw	r18, r20
 450:	bd 01       	movw	r22, r26
 452:	ef 01       	movw	r28, r30
 454:	df 01       	movw	r26, r30
 456:	f8 01       	movw	r30, r16
 458:	db cf       	rjmp	.-74     	; 0x410 <__DATA_REGION_LENGTH__+0x10>
 45a:	21 15       	cp	r18, r1
 45c:	31 05       	cpc	r19, r1
 45e:	f9 f0       	breq	.+62     	; 0x49e <__stack+0x3f>
 460:	28 1b       	sub	r18, r24
 462:	39 0b       	sbc	r19, r25
 464:	24 30       	cpi	r18, 0x04	; 4
 466:	31 05       	cpc	r19, r1
 468:	80 f4       	brcc	.+32     	; 0x48a <__stack+0x2b>
 46a:	8a 81       	ldd	r24, Y+2	; 0x02
 46c:	9b 81       	ldd	r25, Y+3	; 0x03
 46e:	61 15       	cp	r22, r1
 470:	71 05       	cpc	r23, r1
 472:	21 f0       	breq	.+8      	; 0x47c <__stack+0x1d>
 474:	fb 01       	movw	r30, r22
 476:	93 83       	std	Z+3, r25	; 0x03
 478:	82 83       	std	Z+2, r24	; 0x02
 47a:	04 c0       	rjmp	.+8      	; 0x484 <__stack+0x25>
 47c:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <__flp+0x1>
 480:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <__flp>
 484:	fe 01       	movw	r30, r28
 486:	32 96       	adiw	r30, 0x02	; 2
 488:	44 c0       	rjmp	.+136    	; 0x512 <__stack+0xb3>
 48a:	fe 01       	movw	r30, r28
 48c:	e2 0f       	add	r30, r18
 48e:	f3 1f       	adc	r31, r19
 490:	81 93       	st	Z+, r24
 492:	91 93       	st	Z+, r25
 494:	22 50       	subi	r18, 0x02	; 2
 496:	31 09       	sbc	r19, r1
 498:	39 83       	std	Y+1, r19	; 0x01
 49a:	28 83       	st	Y, r18
 49c:	3a c0       	rjmp	.+116    	; 0x512 <__stack+0xb3>
 49e:	20 91 76 00 	lds	r18, 0x0076	; 0x800076 <__brkval>
 4a2:	30 91 77 00 	lds	r19, 0x0077	; 0x800077 <__brkval+0x1>
 4a6:	23 2b       	or	r18, r19
 4a8:	41 f4       	brne	.+16     	; 0x4ba <__stack+0x5b>
 4aa:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <__malloc_heap_start>
 4ae:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <__malloc_heap_start+0x1>
 4b2:	30 93 77 00 	sts	0x0077, r19	; 0x800077 <__brkval+0x1>
 4b6:	20 93 76 00 	sts	0x0076, r18	; 0x800076 <__brkval>
 4ba:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 4be:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 4c2:	21 15       	cp	r18, r1
 4c4:	31 05       	cpc	r19, r1
 4c6:	41 f4       	brne	.+16     	; 0x4d8 <__stack+0x79>
 4c8:	2d b7       	in	r18, 0x3d	; 61
 4ca:	3e b7       	in	r19, 0x3e	; 62
 4cc:	40 91 64 00 	lds	r20, 0x0064	; 0x800064 <__malloc_margin>
 4d0:	50 91 65 00 	lds	r21, 0x0065	; 0x800065 <__malloc_margin+0x1>
 4d4:	24 1b       	sub	r18, r20
 4d6:	35 0b       	sbc	r19, r21
 4d8:	e0 91 76 00 	lds	r30, 0x0076	; 0x800076 <__brkval>
 4dc:	f0 91 77 00 	lds	r31, 0x0077	; 0x800077 <__brkval+0x1>
 4e0:	e2 17       	cp	r30, r18
 4e2:	f3 07       	cpc	r31, r19
 4e4:	a0 f4       	brcc	.+40     	; 0x50e <__stack+0xaf>
 4e6:	2e 1b       	sub	r18, r30
 4e8:	3f 0b       	sbc	r19, r31
 4ea:	28 17       	cp	r18, r24
 4ec:	39 07       	cpc	r19, r25
 4ee:	78 f0       	brcs	.+30     	; 0x50e <__stack+0xaf>
 4f0:	ac 01       	movw	r20, r24
 4f2:	4e 5f       	subi	r20, 0xFE	; 254
 4f4:	5f 4f       	sbci	r21, 0xFF	; 255
 4f6:	24 17       	cp	r18, r20
 4f8:	35 07       	cpc	r19, r21
 4fa:	48 f0       	brcs	.+18     	; 0x50e <__stack+0xaf>
 4fc:	4e 0f       	add	r20, r30
 4fe:	5f 1f       	adc	r21, r31
 500:	50 93 77 00 	sts	0x0077, r21	; 0x800077 <__brkval+0x1>
 504:	40 93 76 00 	sts	0x0076, r20	; 0x800076 <__brkval>
 508:	81 93       	st	Z+, r24
 50a:	91 93       	st	Z+, r25
 50c:	02 c0       	rjmp	.+4      	; 0x512 <__stack+0xb3>
 50e:	e0 e0       	ldi	r30, 0x00	; 0
 510:	f0 e0       	ldi	r31, 0x00	; 0
 512:	cf 01       	movw	r24, r30
 514:	df 91       	pop	r29
 516:	cf 91       	pop	r28
 518:	1f 91       	pop	r17
 51a:	0f 91       	pop	r16
 51c:	08 95       	ret

0000051e <free>:
 51e:	cf 93       	push	r28
 520:	df 93       	push	r29
 522:	00 97       	sbiw	r24, 0x00	; 0
 524:	09 f4       	brne	.+2      	; 0x528 <free+0xa>
 526:	81 c0       	rjmp	.+258    	; 0x62a <free+0x10c>
 528:	fc 01       	movw	r30, r24
 52a:	32 97       	sbiw	r30, 0x02	; 2
 52c:	13 82       	std	Z+3, r1	; 0x03
 52e:	12 82       	std	Z+2, r1	; 0x02
 530:	a0 91 78 00 	lds	r26, 0x0078	; 0x800078 <__flp>
 534:	b0 91 79 00 	lds	r27, 0x0079	; 0x800079 <__flp+0x1>
 538:	10 97       	sbiw	r26, 0x00	; 0
 53a:	81 f4       	brne	.+32     	; 0x55c <free+0x3e>
 53c:	20 81       	ld	r18, Z
 53e:	31 81       	ldd	r19, Z+1	; 0x01
 540:	82 0f       	add	r24, r18
 542:	93 1f       	adc	r25, r19
 544:	20 91 76 00 	lds	r18, 0x0076	; 0x800076 <__brkval>
 548:	30 91 77 00 	lds	r19, 0x0077	; 0x800077 <__brkval+0x1>
 54c:	28 17       	cp	r18, r24
 54e:	39 07       	cpc	r19, r25
 550:	51 f5       	brne	.+84     	; 0x5a6 <free+0x88>
 552:	f0 93 77 00 	sts	0x0077, r31	; 0x800077 <__brkval+0x1>
 556:	e0 93 76 00 	sts	0x0076, r30	; 0x800076 <__brkval>
 55a:	67 c0       	rjmp	.+206    	; 0x62a <free+0x10c>
 55c:	ed 01       	movw	r28, r26
 55e:	20 e0       	ldi	r18, 0x00	; 0
 560:	30 e0       	ldi	r19, 0x00	; 0
 562:	ce 17       	cp	r28, r30
 564:	df 07       	cpc	r29, r31
 566:	40 f4       	brcc	.+16     	; 0x578 <free+0x5a>
 568:	4a 81       	ldd	r20, Y+2	; 0x02
 56a:	5b 81       	ldd	r21, Y+3	; 0x03
 56c:	9e 01       	movw	r18, r28
 56e:	41 15       	cp	r20, r1
 570:	51 05       	cpc	r21, r1
 572:	f1 f0       	breq	.+60     	; 0x5b0 <free+0x92>
 574:	ea 01       	movw	r28, r20
 576:	f5 cf       	rjmp	.-22     	; 0x562 <free+0x44>
 578:	d3 83       	std	Z+3, r29	; 0x03
 57a:	c2 83       	std	Z+2, r28	; 0x02
 57c:	40 81       	ld	r20, Z
 57e:	51 81       	ldd	r21, Z+1	; 0x01
 580:	84 0f       	add	r24, r20
 582:	95 1f       	adc	r25, r21
 584:	c8 17       	cp	r28, r24
 586:	d9 07       	cpc	r29, r25
 588:	59 f4       	brne	.+22     	; 0x5a0 <free+0x82>
 58a:	88 81       	ld	r24, Y
 58c:	99 81       	ldd	r25, Y+1	; 0x01
 58e:	84 0f       	add	r24, r20
 590:	95 1f       	adc	r25, r21
 592:	02 96       	adiw	r24, 0x02	; 2
 594:	91 83       	std	Z+1, r25	; 0x01
 596:	80 83       	st	Z, r24
 598:	8a 81       	ldd	r24, Y+2	; 0x02
 59a:	9b 81       	ldd	r25, Y+3	; 0x03
 59c:	93 83       	std	Z+3, r25	; 0x03
 59e:	82 83       	std	Z+2, r24	; 0x02
 5a0:	21 15       	cp	r18, r1
 5a2:	31 05       	cpc	r19, r1
 5a4:	29 f4       	brne	.+10     	; 0x5b0 <free+0x92>
 5a6:	f0 93 79 00 	sts	0x0079, r31	; 0x800079 <__flp+0x1>
 5aa:	e0 93 78 00 	sts	0x0078, r30	; 0x800078 <__flp>
 5ae:	3d c0       	rjmp	.+122    	; 0x62a <free+0x10c>
 5b0:	e9 01       	movw	r28, r18
 5b2:	fb 83       	std	Y+3, r31	; 0x03
 5b4:	ea 83       	std	Y+2, r30	; 0x02
 5b6:	49 91       	ld	r20, Y+
 5b8:	59 91       	ld	r21, Y+
 5ba:	c4 0f       	add	r28, r20
 5bc:	d5 1f       	adc	r29, r21
 5be:	ec 17       	cp	r30, r28
 5c0:	fd 07       	cpc	r31, r29
 5c2:	61 f4       	brne	.+24     	; 0x5dc <free+0xbe>
 5c4:	80 81       	ld	r24, Z
 5c6:	91 81       	ldd	r25, Z+1	; 0x01
 5c8:	84 0f       	add	r24, r20
 5ca:	95 1f       	adc	r25, r21
 5cc:	02 96       	adiw	r24, 0x02	; 2
 5ce:	e9 01       	movw	r28, r18
 5d0:	99 83       	std	Y+1, r25	; 0x01
 5d2:	88 83       	st	Y, r24
 5d4:	82 81       	ldd	r24, Z+2	; 0x02
 5d6:	93 81       	ldd	r25, Z+3	; 0x03
 5d8:	9b 83       	std	Y+3, r25	; 0x03
 5da:	8a 83       	std	Y+2, r24	; 0x02
 5dc:	e0 e0       	ldi	r30, 0x00	; 0
 5de:	f0 e0       	ldi	r31, 0x00	; 0
 5e0:	12 96       	adiw	r26, 0x02	; 2
 5e2:	8d 91       	ld	r24, X+
 5e4:	9c 91       	ld	r25, X
 5e6:	13 97       	sbiw	r26, 0x03	; 3
 5e8:	00 97       	sbiw	r24, 0x00	; 0
 5ea:	19 f0       	breq	.+6      	; 0x5f2 <free+0xd4>
 5ec:	fd 01       	movw	r30, r26
 5ee:	dc 01       	movw	r26, r24
 5f0:	f7 cf       	rjmp	.-18     	; 0x5e0 <free+0xc2>
 5f2:	8d 91       	ld	r24, X+
 5f4:	9c 91       	ld	r25, X
 5f6:	11 97       	sbiw	r26, 0x01	; 1
 5f8:	9d 01       	movw	r18, r26
 5fa:	2e 5f       	subi	r18, 0xFE	; 254
 5fc:	3f 4f       	sbci	r19, 0xFF	; 255
 5fe:	82 0f       	add	r24, r18
 600:	93 1f       	adc	r25, r19
 602:	20 91 76 00 	lds	r18, 0x0076	; 0x800076 <__brkval>
 606:	30 91 77 00 	lds	r19, 0x0077	; 0x800077 <__brkval+0x1>
 60a:	28 17       	cp	r18, r24
 60c:	39 07       	cpc	r19, r25
 60e:	69 f4       	brne	.+26     	; 0x62a <free+0x10c>
 610:	30 97       	sbiw	r30, 0x00	; 0
 612:	29 f4       	brne	.+10     	; 0x61e <free+0x100>
 614:	10 92 79 00 	sts	0x0079, r1	; 0x800079 <__flp+0x1>
 618:	10 92 78 00 	sts	0x0078, r1	; 0x800078 <__flp>
 61c:	02 c0       	rjmp	.+4      	; 0x622 <free+0x104>
 61e:	13 82       	std	Z+3, r1	; 0x03
 620:	12 82       	std	Z+2, r1	; 0x02
 622:	b0 93 77 00 	sts	0x0077, r27	; 0x800077 <__brkval+0x1>
 626:	a0 93 76 00 	sts	0x0076, r26	; 0x800076 <__brkval>
 62a:	df 91       	pop	r29
 62c:	cf 91       	pop	r28
 62e:	08 95       	ret

00000630 <_exit>:
 630:	f8 94       	cli

00000632 <__stop_program>:
 632:	ff cf       	rjmp	.-2      	; 0x632 <__stop_program>
