
HD44780_PCF8574_Example.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000ef4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000032  00800060  00000ef4  00000f88  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000008  00800092  00800092  00000fba  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000fba  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000fec  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001d8  00000000  00000000  00001028  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002ae2  00000000  00000000  00001200  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e63  00000000  00000000  00003ce2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e33  00000000  00000000  00004b45  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005c4  00000000  00000000  00005978  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000f85  00000000  00000000  00005f3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000182d  00000000  00000000  00006ec1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001f0  00000000  00000000  000086ee  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	5c c0       	rjmp	.+184    	; 0xba <__ctors_end>
   2:	80 c0       	rjmp	.+256    	; 0x104 <__bad_interrupt>
   4:	7f c0       	rjmp	.+254    	; 0x104 <__bad_interrupt>
   6:	7e c0       	rjmp	.+252    	; 0x104 <__bad_interrupt>
   8:	7d c0       	rjmp	.+250    	; 0x104 <__bad_interrupt>
   a:	7c c0       	rjmp	.+248    	; 0x104 <__bad_interrupt>
   c:	7b c0       	rjmp	.+246    	; 0x104 <__bad_interrupt>
   e:	7a c0       	rjmp	.+244    	; 0x104 <__bad_interrupt>
  10:	79 c0       	rjmp	.+242    	; 0x104 <__bad_interrupt>
  12:	9b c3       	rjmp	.+1846   	; 0x74a <__vector_9>
  14:	77 c0       	rjmp	.+238    	; 0x104 <__bad_interrupt>
  16:	76 c0       	rjmp	.+236    	; 0x104 <__bad_interrupt>
  18:	75 c0       	rjmp	.+234    	; 0x104 <__bad_interrupt>
  1a:	74 c0       	rjmp	.+232    	; 0x104 <__bad_interrupt>
  1c:	73 c0       	rjmp	.+230    	; 0x104 <__bad_interrupt>
  1e:	72 c0       	rjmp	.+228    	; 0x104 <__bad_interrupt>
  20:	71 c0       	rjmp	.+226    	; 0x104 <__bad_interrupt>
  22:	6c c3       	rjmp	.+1752   	; 0x6fc <__vector_17>
  24:	6f c0       	rjmp	.+222    	; 0x104 <__bad_interrupt>
  26:	41 c1       	rjmp	.+642    	; 0x2aa <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0x30>
  28:	81 c1       	rjmp	.+770    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  2a:	80 c1       	rjmp	.+768    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  2c:	7f c1       	rjmp	.+766    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  2e:	7e c1       	rjmp	.+764    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  30:	7d c1       	rjmp	.+762    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  32:	7c c1       	rjmp	.+760    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  34:	7b c1       	rjmp	.+758    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  36:	3e c1       	rjmp	.+636    	; 0x2b4 <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0x3a>
  38:	79 c1       	rjmp	.+754    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  3a:	78 c1       	rjmp	.+752    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  3c:	77 c1       	rjmp	.+750    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  3e:	76 c1       	rjmp	.+748    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  40:	75 c1       	rjmp	.+746    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  42:	74 c1       	rjmp	.+744    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  44:	73 c1       	rjmp	.+742    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  46:	72 c1       	rjmp	.+740    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  48:	71 c1       	rjmp	.+738    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  4a:	70 c1       	rjmp	.+736    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  4c:	6f c1       	rjmp	.+734    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  4e:	6e c1       	rjmp	.+732    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  50:	6d c1       	rjmp	.+730    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  52:	6c c1       	rjmp	.+728    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  54:	6b c1       	rjmp	.+726    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  56:	33 c1       	rjmp	.+614    	; 0x2be <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0x44>
  58:	69 c1       	rjmp	.+722    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  5a:	68 c1       	rjmp	.+720    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  5c:	67 c1       	rjmp	.+718    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  5e:	66 c1       	rjmp	.+716    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  60:	65 c1       	rjmp	.+714    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  62:	64 c1       	rjmp	.+712    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  64:	63 c1       	rjmp	.+710    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  66:	21 c1       	rjmp	.+578    	; 0x2aa <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0x30>
  68:	61 c1       	rjmp	.+706    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  6a:	60 c1       	rjmp	.+704    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  6c:	5f c1       	rjmp	.+702    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  6e:	5e c1       	rjmp	.+700    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  70:	5d c1       	rjmp	.+698    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  72:	5c c1       	rjmp	.+696    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  74:	5b c1       	rjmp	.+694    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  76:	23 c1       	rjmp	.+582    	; 0x2be <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0x44>
  78:	59 c1       	rjmp	.+690    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  7a:	58 c1       	rjmp	.+688    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  7c:	57 c1       	rjmp	.+686    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  7e:	56 c1       	rjmp	.+684    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  80:	55 c1       	rjmp	.+682    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  82:	54 c1       	rjmp	.+680    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  84:	53 c1       	rjmp	.+678    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  86:	11 c1       	rjmp	.+546    	; 0x2aa <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0x30>
  88:	51 c1       	rjmp	.+674    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  8a:	50 c1       	rjmp	.+672    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  8c:	4f c1       	rjmp	.+670    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  8e:	4e c1       	rjmp	.+668    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  90:	4d c1       	rjmp	.+666    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  92:	4c c1       	rjmp	.+664    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  94:	4b c1       	rjmp	.+662    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  96:	00 c1       	rjmp	.+512    	; 0x298 <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0x1e>
  98:	49 c1       	rjmp	.+658    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  9a:	48 c1       	rjmp	.+656    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  9c:	47 c1       	rjmp	.+654    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  9e:	46 c1       	rjmp	.+652    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  a0:	45 c1       	rjmp	.+650    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  a2:	44 c1       	rjmp	.+648    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  a4:	43 c1       	rjmp	.+646    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  a6:	42 c1       	rjmp	.+644    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  a8:	41 c1       	rjmp	.+642    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  aa:	40 c1       	rjmp	.+640    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  ac:	3f c1       	rjmp	.+638    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  ae:	3e c1       	rjmp	.+636    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  b0:	3d c1       	rjmp	.+634    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  b2:	3c c1       	rjmp	.+632    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  b4:	3b c1       	rjmp	.+630    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
  b6:	f9 c0       	rjmp	.+498    	; 0x2aa <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0x30>

000000b8 <__ctors_start>:
  b8:	09 04       	cpc	r0, r9

000000ba <__ctors_end>:
  ba:	11 24       	eor	r1, r1
  bc:	1f be       	out	0x3f, r1	; 63
  be:	cf e5       	ldi	r28, 0x5F	; 95
  c0:	d4 e0       	ldi	r29, 0x04	; 4
  c2:	de bf       	out	0x3e, r29	; 62
  c4:	cd bf       	out	0x3d, r28	; 61

000000c6 <__do_copy_data>:
  c6:	10 e0       	ldi	r17, 0x00	; 0
  c8:	a0 e6       	ldi	r26, 0x60	; 96
  ca:	b0 e0       	ldi	r27, 0x00	; 0
  cc:	e4 ef       	ldi	r30, 0xF4	; 244
  ce:	fe e0       	ldi	r31, 0x0E	; 14
  d0:	02 c0       	rjmp	.+4      	; 0xd6 <__do_copy_data+0x10>
  d2:	05 90       	lpm	r0, Z+
  d4:	0d 92       	st	X+, r0
  d6:	a2 39       	cpi	r26, 0x92	; 146
  d8:	b1 07       	cpc	r27, r17
  da:	d9 f7       	brne	.-10     	; 0xd2 <__do_copy_data+0xc>

000000dc <__do_clear_bss>:
  dc:	20 e0       	ldi	r18, 0x00	; 0
  de:	a2 e9       	ldi	r26, 0x92	; 146
  e0:	b0 e0       	ldi	r27, 0x00	; 0
  e2:	01 c0       	rjmp	.+2      	; 0xe6 <.do_clear_bss_start>

000000e4 <.do_clear_bss_loop>:
  e4:	1d 92       	st	X+, r1

000000e6 <.do_clear_bss_start>:
  e6:	aa 39       	cpi	r26, 0x9A	; 154
  e8:	b2 07       	cpc	r27, r18
  ea:	e1 f7       	brne	.-8      	; 0xe4 <.do_clear_bss_loop>

000000ec <__do_global_ctors>:
  ec:	10 e0       	ldi	r17, 0x00	; 0
  ee:	cd e5       	ldi	r28, 0x5D	; 93
  f0:	d0 e0       	ldi	r29, 0x00	; 0
  f2:	03 c0       	rjmp	.+6      	; 0xfa <__do_global_ctors+0xe>
  f4:	21 97       	sbiw	r28, 0x01	; 1
  f6:	fe 01       	movw	r30, r28
  f8:	d5 d4       	rcall	.+2474   	; 0xaa4 <__tablejump2__>
  fa:	cc 35       	cpi	r28, 0x5C	; 92
  fc:	d1 07       	cpc	r29, r17
  fe:	d1 f7       	brne	.-12     	; 0xf4 <__do_global_ctors+0x8>
 100:	4b d3       	rcall	.+1686   	; 0x798 <main>
 102:	f6 c6       	rjmp	.+3564   	; 0xef0 <_exit>

00000104 <__bad_interrupt>:
 104:	7d cf       	rjmp	.-262    	; 0x0 <__vectors>

00000106 <_ZN15HD44780_PCF857414ClockFrequencyEv>:
	this->delay[this->writePointer] = 50;
	
	UpdateWritePointer();
	
	this->transactionStatus = TWI_InProcess;
}
 106:	60 e5       	ldi	r22, 0x50	; 80
 108:	73 ec       	ldi	r23, 0xC3	; 195
 10a:	80 e0       	ldi	r24, 0x00	; 0
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	08 95       	ret

00000110 <_ZN15HD44780_PCF857420GetTransactionStatusEv>:
 110:	fc 01       	movw	r30, r24
 112:	86 81       	ldd	r24, Z+6	; 0x06
 114:	81 30       	cpi	r24, 0x01	; 1
 116:	09 f0       	breq	.+2      	; 0x11a <_ZN15HD44780_PCF857420GetTransactionStatusEv+0xa>
 118:	16 82       	std	Z+6, r1	; 0x06
 11a:	08 95       	ret

0000011c <_ZN15HD44780_PCF8574nwEj>:
 11c:	cf 93       	push	r28
 11e:	df 93       	push	r29
 120:	ec 01       	movw	r28, r24
 122:	ce 01       	movw	r24, r28
 124:	c5 d4       	rcall	.+2442   	; 0xab0 <malloc>
 126:	00 97       	sbiw	r24, 0x00	; 0
 128:	e1 f3       	breq	.-8      	; 0x122 <_ZN15HD44780_PCF8574nwEj+0x6>
 12a:	df 91       	pop	r29
 12c:	cf 91       	pop	r28
 12e:	08 95       	ret

00000130 <_ZN15HD44780_PCF857416ClearDataCounterEv>:
 130:	fc 01       	movw	r30, r24
 132:	11 ae       	std	Z+57, r1	; 0x39
 134:	08 95       	ret

00000136 <_ZN15HD44780_PCF857413PrepareBufferEh>:
 136:	ff 92       	push	r15
 138:	0f 93       	push	r16
 13a:	1f 93       	push	r17
 13c:	cf 93       	push	r28
 13e:	df 93       	push	r29
 140:	8c 01       	movw	r16, r24
 142:	f6 2e       	mov	r15, r22
 144:	fc 01       	movw	r30, r24
 146:	c4 ad       	ldd	r28, Z+60	; 0x3c
 148:	d0 e0       	ldi	r29, 0x00	; 0
 14a:	ec 0f       	add	r30, r28
 14c:	fd 1f       	adc	r31, r29
 14e:	63 8f       	std	Z+27, r22	; 0x1b
 150:	fe 01       	movw	r30, r28
 152:	ee 0f       	add	r30, r30
 154:	ff 1f       	adc	r31, r31
 156:	e8 0f       	add	r30, r24
 158:	f9 1f       	adc	r31, r25
 15a:	10 86       	std	Z+8, r1	; 0x08
 15c:	17 82       	std	Z+7, r1	; 0x07
 15e:	8f 2d       	mov	r24, r15
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	a6 d4       	rcall	.+2380   	; 0xab0 <malloc>
 164:	fe 01       	movw	r30, r28
 166:	ee 0f       	add	r30, r30
 168:	ff 1f       	adc	r31, r31
 16a:	e0 0f       	add	r30, r16
 16c:	f1 1f       	adc	r31, r17
 16e:	90 87       	std	Z+8, r25	; 0x08
 170:	87 83       	std	Z+7, r24	; 0x07
 172:	89 2b       	or	r24, r25
 174:	a1 f3       	breq	.-24     	; 0x15e <_ZN15HD44780_PCF857413PrepareBufferEh+0x28>
 176:	df 91       	pop	r29
 178:	cf 91       	pop	r28
 17a:	1f 91       	pop	r17
 17c:	0f 91       	pop	r16
 17e:	ff 90       	pop	r15
 180:	08 95       	ret

00000182 <_ZN15HD44780_PCF85748FormByteEh16HD44780_DataType>:
 182:	cf 93       	push	r28
 184:	df 93       	push	r29
 186:	00 d0       	rcall	.+0      	; 0x188 <_ZN15HD44780_PCF85748FormByteEh16HD44780_DataType+0x6>
 188:	00 d0       	rcall	.+0      	; 0x18a <_ZN15HD44780_PCF85748FormByteEh16HD44780_DataType+0x8>
 18a:	cd b7       	in	r28, 0x3d	; 61
 18c:	de b7       	in	r29, 0x3e	; 62
 18e:	19 82       	std	Y+1, r1	; 0x01
 190:	1a 82       	std	Y+2, r1	; 0x02
 192:	1b 82       	std	Y+3, r1	; 0x03
 194:	1c 82       	std	Y+4, r1	; 0x04
 196:	21 e0       	ldi	r18, 0x01	; 1
 198:	fe 01       	movw	r30, r28
 19a:	31 96       	adiw	r30, 0x01	; 1
 19c:	25 30       	cpi	r18, 0x05	; 5
 19e:	48 f5       	brcc	.+82     	; 0x1f2 <_ZN15HD44780_PCF85748FormByteEh16HD44780_DataType+0x70>
 1a0:	86 2f       	mov	r24, r22
 1a2:	88 1f       	adc	r24, r24
 1a4:	88 27       	eor	r24, r24
 1a6:	88 1f       	adc	r24, r24
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	96 95       	lsr	r25
 1ac:	98 2f       	mov	r25, r24
 1ae:	88 27       	eor	r24, r24
 1b0:	97 95       	ror	r25
 1b2:	87 95       	ror	r24
 1b4:	96 2f       	mov	r25, r22
 1b6:	90 77       	andi	r25, 0x70	; 112
 1b8:	89 2b       	or	r24, r25
 1ba:	90 81       	ld	r25, Z
 1bc:	89 2b       	or	r24, r25
 1be:	88 60       	ori	r24, 0x08	; 8
 1c0:	8d 7f       	andi	r24, 0xFD	; 253
 1c2:	80 83       	st	Z, r24
 1c4:	41 30       	cpi	r20, 0x01	; 1
 1c6:	19 f4       	brne	.+6      	; 0x1ce <_ZN15HD44780_PCF85748FormByteEh16HD44780_DataType+0x4c>
 1c8:	8e 7f       	andi	r24, 0xFE	; 254
 1ca:	80 83       	st	Z, r24
 1cc:	04 c0       	rjmp	.+8      	; 0x1d6 <_ZN15HD44780_PCF85748FormByteEh16HD44780_DataType+0x54>
 1ce:	41 11       	cpse	r20, r1
 1d0:	02 c0       	rjmp	.+4      	; 0x1d6 <_ZN15HD44780_PCF85748FormByteEh16HD44780_DataType+0x54>
 1d2:	81 60       	ori	r24, 0x01	; 1
 1d4:	80 83       	st	Z, r24
 1d6:	20 fd       	sbrc	r18, 0
 1d8:	06 c0       	rjmp	.+12     	; 0x1e6 <_ZN15HD44780_PCF85748FormByteEh16HD44780_DataType+0x64>
 1da:	80 81       	ld	r24, Z
 1dc:	8b 7f       	andi	r24, 0xFB	; 251
 1de:	80 83       	st	Z, r24
 1e0:	62 95       	swap	r22
 1e2:	60 7f       	andi	r22, 0xF0	; 240
 1e4:	03 c0       	rjmp	.+6      	; 0x1ec <_ZN15HD44780_PCF85748FormByteEh16HD44780_DataType+0x6a>
 1e6:	80 81       	ld	r24, Z
 1e8:	84 60       	ori	r24, 0x04	; 4
 1ea:	80 83       	st	Z, r24
 1ec:	31 96       	adiw	r30, 0x01	; 1
 1ee:	2f 5f       	subi	r18, 0xFF	; 255
 1f0:	d5 cf       	rjmp	.-86     	; 0x19c <_ZN15HD44780_PCF85748FormByteEh16HD44780_DataType+0x1a>
 1f2:	69 81       	ldd	r22, Y+1	; 0x01
 1f4:	7a 81       	ldd	r23, Y+2	; 0x02
 1f6:	8b 81       	ldd	r24, Y+3	; 0x03
 1f8:	9c 81       	ldd	r25, Y+4	; 0x04
 1fa:	0f 90       	pop	r0
 1fc:	0f 90       	pop	r0
 1fe:	0f 90       	pop	r0
 200:	0f 90       	pop	r0
 202:	df 91       	pop	r29
 204:	cf 91       	pop	r28
 206:	08 95       	ret

00000208 <_ZN15HD44780_PCF857418UpdateWritePointerEv>:
 208:	fc 01       	movw	r30, r24
 20a:	24 ad       	ldd	r18, Z+60	; 0x3c
 20c:	2f 5f       	subi	r18, 0xFF	; 255
 20e:	9d ec       	ldi	r25, 0xCD	; 205
 210:	29 9f       	mul	r18, r25
 212:	91 2d       	mov	r25, r1
 214:	11 24       	eor	r1, r1
 216:	96 95       	lsr	r25
 218:	96 95       	lsr	r25
 21a:	96 95       	lsr	r25
 21c:	99 0f       	add	r25, r25
 21e:	89 2f       	mov	r24, r25
 220:	88 0f       	add	r24, r24
 222:	88 0f       	add	r24, r24
 224:	98 0f       	add	r25, r24
 226:	29 1b       	sub	r18, r25
 228:	24 af       	std	Z+60, r18	; 0x3c
 22a:	82 ad       	ldd	r24, Z+58	; 0x3a
 22c:	8f 5f       	subi	r24, 0xFF	; 255
 22e:	82 af       	std	Z+58, r24	; 0x3a
 230:	08 95       	ret

00000232 <_ZN15HD44780_PCF857417UpdateReadPointerEv>:
 232:	cf 93       	push	r28
 234:	df 93       	push	r29
 236:	ec 01       	movw	r28, r24
 238:	eb ad       	ldd	r30, Y+59	; 0x3b
 23a:	f0 e0       	ldi	r31, 0x00	; 0
 23c:	ee 0f       	add	r30, r30
 23e:	ff 1f       	adc	r31, r31
 240:	e8 0f       	add	r30, r24
 242:	f9 1f       	adc	r31, r25
 244:	87 81       	ldd	r24, Z+7	; 0x07
 246:	90 85       	ldd	r25, Z+8	; 0x08
 248:	cb d4       	rcall	.+2454   	; 0xbe0 <free>
 24a:	9b ad       	ldd	r25, Y+59	; 0x3b
 24c:	9f 5f       	subi	r25, 0xFF	; 255
 24e:	8d ec       	ldi	r24, 0xCD	; 205
 250:	98 9f       	mul	r25, r24
 252:	81 2d       	mov	r24, r1
 254:	11 24       	eor	r1, r1
 256:	86 95       	lsr	r24
 258:	86 95       	lsr	r24
 25a:	86 95       	lsr	r24
 25c:	88 0f       	add	r24, r24
 25e:	28 2f       	mov	r18, r24
 260:	22 0f       	add	r18, r18
 262:	22 0f       	add	r18, r18
 264:	82 0f       	add	r24, r18
 266:	98 1b       	sub	r25, r24
 268:	9b af       	std	Y+59, r25	; 0x3b
 26a:	ce 01       	movw	r24, r28
 26c:	61 df       	rcall	.-318    	; 0x130 <_ZN15HD44780_PCF857416ClearDataCounterEv>
 26e:	8a ad       	ldd	r24, Y+58	; 0x3a
 270:	81 50       	subi	r24, 0x01	; 1
 272:	8a af       	std	Y+58, r24	; 0x3a
 274:	df 91       	pop	r29
 276:	cf 91       	pop	r28
 278:	08 95       	ret

0000027a <_ZN15HD44780_PCF857413NextOperationE10TWI_Status>:
 27a:	cf 93       	push	r28
 27c:	df 93       	push	r29
 27e:	fc 01       	movw	r30, r24
 280:	65 83       	std	Z+5, r22	; 0x05
 282:	46 2f       	mov	r20, r22
 284:	50 e0       	ldi	r21, 0x00	; 0
 286:	49 34       	cpi	r20, 0x49	; 73
 288:	51 05       	cpc	r21, r1
 28a:	08 f0       	brcs	.+2      	; 0x28e <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0x14>
 28c:	4f c0       	rjmp	.+158    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
 28e:	ec 01       	movw	r28, r24
 290:	fa 01       	movw	r30, r20
 292:	ed 5e       	subi	r30, 0xED	; 237
 294:	ff 4f       	sbci	r31, 0xFF	; 255
 296:	09 94       	ijmp
 298:	8a 81       	ldd	r24, Y+2	; 0x02
 29a:	9b 81       	ldd	r25, Y+3	; 0x03
 29c:	ac d3       	rcall	.+1880   	; 0x9f6 <_ZN3TWI4StopEv>
 29e:	ce 01       	movw	r24, r28
 2a0:	47 df       	rcall	.-370    	; 0x130 <_ZN15HD44780_PCF857416ClearDataCounterEv>
 2a2:	8a 81       	ldd	r24, Y+2	; 0x02
 2a4:	9b 81       	ldd	r25, Y+3	; 0x03
 2a6:	e9 d2       	rcall	.+1490   	; 0x87a <_ZN3TWI5StartEv>
 2a8:	41 c0       	rjmp	.+130    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
 2aa:	42 df       	rcall	.-380    	; 0x130 <_ZN15HD44780_PCF857416ClearDataCounterEv>
 2ac:	8a 81       	ldd	r24, Y+2	; 0x02
 2ae:	9b 81       	ldd	r25, Y+3	; 0x03
 2b0:	b8 d3       	rcall	.+1904   	; 0xa22 <_ZN3TWI16DisableInterruptEv>
 2b2:	3c c0       	rjmp	.+120    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
 2b4:	6c 81       	ldd	r22, Y+4	; 0x04
 2b6:	8a 81       	ldd	r24, Y+2	; 0x02
 2b8:	9b 81       	ldd	r25, Y+3	; 0x03
 2ba:	e2 d2       	rcall	.+1476   	; 0x880 <_ZN3TWI11WriteToTWDREh>
 2bc:	37 c0       	rjmp	.+110    	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
 2be:	8a ad       	ldd	r24, Y+58	; 0x3a
 2c0:	88 23       	and	r24, r24
 2c2:	79 f1       	breq	.+94     	; 0x322 <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xa8>
 2c4:	39 ad       	ldd	r19, Y+57	; 0x39
 2c6:	8b ad       	ldd	r24, Y+59	; 0x3b
 2c8:	90 e0       	ldi	r25, 0x00	; 0
 2ca:	fe 01       	movw	r30, r28
 2cc:	e8 0f       	add	r30, r24
 2ce:	f9 1f       	adc	r31, r25
 2d0:	23 8d       	ldd	r18, Z+27	; 0x1b
 2d2:	32 17       	cp	r19, r18
 2d4:	18 f5       	brcc	.+70     	; 0x31c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xa2>
 2d6:	88 0f       	add	r24, r24
 2d8:	99 1f       	adc	r25, r25
 2da:	fe 01       	movw	r30, r28
 2dc:	e8 0f       	add	r30, r24
 2de:	f9 1f       	adc	r31, r25
 2e0:	85 a1       	ldd	r24, Z+37	; 0x25
 2e2:	96 a1       	ldd	r25, Z+38	; 0x26
 2e4:	00 97       	sbiw	r24, 0x00	; 0
 2e6:	31 f0       	breq	.+12     	; 0x2f4 <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0x7a>
 2e8:	f5 e8       	ldi	r31, 0x85	; 133
 2ea:	fa 95       	dec	r31
 2ec:	f1 f7       	brne	.-4      	; 0x2ea <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0x70>
 2ee:	00 00       	nop
 2f0:	c2 97       	sbiw	r24, 0x32	; 50
 2f2:	f8 cf       	rjmp	.-16     	; 0x2e4 <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0x6a>
 2f4:	eb ad       	ldd	r30, Y+59	; 0x3b
 2f6:	f0 e0       	ldi	r31, 0x00	; 0
 2f8:	ee 0f       	add	r30, r30
 2fa:	ff 1f       	adc	r31, r31
 2fc:	ec 0f       	add	r30, r28
 2fe:	fd 1f       	adc	r31, r29
 300:	07 80       	ldd	r0, Z+7	; 0x07
 302:	f0 85       	ldd	r31, Z+8	; 0x08
 304:	e0 2d       	mov	r30, r0
 306:	89 ad       	ldd	r24, Y+57	; 0x39
 308:	e8 0f       	add	r30, r24
 30a:	f1 1d       	adc	r31, r1
 30c:	60 81       	ld	r22, Z
 30e:	8a 81       	ldd	r24, Y+2	; 0x02
 310:	9b 81       	ldd	r25, Y+3	; 0x03
 312:	b6 d2       	rcall	.+1388   	; 0x880 <_ZN3TWI11WriteToTWDREh>
 314:	89 ad       	ldd	r24, Y+57	; 0x39
 316:	8f 5f       	subi	r24, 0xFF	; 255
 318:	89 af       	std	Y+57, r24	; 0x39
 31a:	08 c0       	rjmp	.+16     	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
 31c:	ce 01       	movw	r24, r28
 31e:	89 df       	rcall	.-238    	; 0x232 <_ZN15HD44780_PCF857417UpdateReadPointerEv>
 320:	05 c0       	rjmp	.+10     	; 0x32c <_ZN15HD44780_PCF857413NextOperationE10TWI_Status+0xb2>
 322:	8a 81       	ldd	r24, Y+2	; 0x02
 324:	9b 81       	ldd	r25, Y+3	; 0x03
 326:	67 d3       	rcall	.+1742   	; 0x9f6 <_ZN3TWI4StopEv>
 328:	82 e0       	ldi	r24, 0x02	; 2
 32a:	8e 83       	std	Y+6, r24	; 0x06
 32c:	df 91       	pop	r29
 32e:	cf 91       	pop	r28
 330:	08 95       	ret

00000332 <_ZN15HD44780_PCF857410AddCommandEhj>:
 332:	ff 92       	push	r15
 334:	0f 93       	push	r16
 336:	1f 93       	push	r17
 338:	cf 93       	push	r28
 33a:	df 93       	push	r29
 33c:	ec 01       	movw	r28, r24
 33e:	f6 2e       	mov	r15, r22
 340:	8a 01       	movw	r16, r20
 342:	8a ad       	ldd	r24, Y+58	; 0x3a
 344:	8a 30       	cpi	r24, 0x0A	; 10
 346:	e9 f3       	breq	.-6      	; 0x342 <_ZN15HD44780_PCF857410AddCommandEhj+0x10>
 348:	64 e0       	ldi	r22, 0x04	; 4
 34a:	ce 01       	movw	r24, r28
 34c:	f4 de       	rcall	.-536    	; 0x136 <_ZN15HD44780_PCF857413PrepareBufferEh>
 34e:	41 e0       	ldi	r20, 0x01	; 1
 350:	6f 2d       	mov	r22, r15
 352:	ce 01       	movw	r24, r28
 354:	16 df       	rcall	.-468    	; 0x182 <_ZN15HD44780_PCF85748FormByteEh16HD44780_DataType>
 356:	ec ad       	ldd	r30, Y+60	; 0x3c
 358:	f0 e0       	ldi	r31, 0x00	; 0
 35a:	ee 0f       	add	r30, r30
 35c:	ff 1f       	adc	r31, r31
 35e:	ec 0f       	add	r30, r28
 360:	fd 1f       	adc	r31, r29
 362:	07 80       	ldd	r0, Z+7	; 0x07
 364:	f0 85       	ldd	r31, Z+8	; 0x08
 366:	e0 2d       	mov	r30, r0
 368:	60 83       	st	Z, r22
 36a:	71 83       	std	Z+1, r23	; 0x01
 36c:	82 83       	std	Z+2, r24	; 0x02
 36e:	93 83       	std	Z+3, r25	; 0x03
 370:	ec ad       	ldd	r30, Y+60	; 0x3c
 372:	f0 e0       	ldi	r31, 0x00	; 0
 374:	ee 0f       	add	r30, r30
 376:	ff 1f       	adc	r31, r31
 378:	ec 0f       	add	r30, r28
 37a:	fd 1f       	adc	r31, r29
 37c:	16 a3       	std	Z+38, r17	; 0x26
 37e:	05 a3       	std	Z+37, r16	; 0x25
 380:	ce 01       	movw	r24, r28
 382:	42 df       	rcall	.-380    	; 0x208 <_ZN15HD44780_PCF857418UpdateWritePointerEv>
 384:	81 e0       	ldi	r24, 0x01	; 1
 386:	8e 83       	std	Y+6, r24	; 0x06
 388:	df 91       	pop	r29
 38a:	cf 91       	pop	r28
 38c:	1f 91       	pop	r17
 38e:	0f 91       	pop	r16
 390:	ff 90       	pop	r15
 392:	08 95       	ret

00000394 <_ZN15HD44780_PCF85742OnEv>:
 394:	42 e3       	ldi	r20, 0x32	; 50
 396:	50 e0       	ldi	r21, 0x00	; 0
 398:	6c e0       	ldi	r22, 0x0C	; 12
 39a:	cb df       	rcall	.-106    	; 0x332 <_ZN15HD44780_PCF857410AddCommandEhj>
 39c:	08 95       	ret

0000039e <_ZN15HD44780_PCF85743OffEv>:
 39e:	42 e3       	ldi	r20, 0x32	; 50
 3a0:	50 e0       	ldi	r21, 0x00	; 0
 3a2:	68 e0       	ldi	r22, 0x08	; 8
 3a4:	c6 df       	rcall	.-116    	; 0x332 <_ZN15HD44780_PCF857410AddCommandEhj>
 3a6:	08 95       	ret

000003a8 <_ZN15HD44780_PCF85745ClearEv>:
 3a8:	40 ed       	ldi	r20, 0xD0	; 208
 3aa:	57 e0       	ldi	r21, 0x07	; 7
 3ac:	61 e0       	ldi	r22, 0x01	; 1
 3ae:	c1 df       	rcall	.-126    	; 0x332 <_ZN15HD44780_PCF857410AddCommandEhj>
 3b0:	08 95       	ret

000003b2 <_ZN15HD44780_PCF8574C1EP3TWIhhh12HD44780_Type>:
 3b2:	ef 92       	push	r14
 3b4:	ff 92       	push	r15
 3b6:	0f 93       	push	r16
 3b8:	1f 93       	push	r17
 3ba:	cf 93       	push	r28
 3bc:	df 93       	push	r29
 3be:	ec 01       	movw	r28, r24
 3c0:	8a e6       	ldi	r24, 0x6A	; 106
 3c2:	90 e0       	ldi	r25, 0x00	; 0
 3c4:	99 83       	std	Y+1, r25	; 0x01
 3c6:	88 83       	st	Y, r24
 3c8:	7b 83       	std	Y+3, r23	; 0x03
 3ca:	6a 83       	std	Y+2, r22	; 0x02
 3cc:	50 e0       	ldi	r21, 0x00	; 0
 3ce:	44 0f       	add	r20, r20
 3d0:	55 1f       	adc	r21, r21
 3d2:	44 0f       	add	r20, r20
 3d4:	55 1f       	adc	r21, r21
 3d6:	44 0f       	add	r20, r20
 3d8:	55 1f       	adc	r21, r21
 3da:	30 e0       	ldi	r19, 0x00	; 0
 3dc:	22 0f       	add	r18, r18
 3de:	33 1f       	adc	r19, r19
 3e0:	22 0f       	add	r18, r18
 3e2:	33 1f       	adc	r19, r19
 3e4:	10 e0       	ldi	r17, 0x00	; 0
 3e6:	00 0f       	add	r16, r16
 3e8:	11 1f       	adc	r17, r17
 3ea:	40 64       	ori	r20, 0x40	; 64
 3ec:	24 2b       	or	r18, r20
 3ee:	02 2b       	or	r16, r18
 3f0:	0c 83       	std	Y+4, r16	; 0x04
 3f2:	88 ef       	ldi	r24, 0xF8	; 248
 3f4:	8d 83       	std	Y+5, r24	; 0x05
 3f6:	f7 01       	movw	r30, r14
 3f8:	f6 95       	lsr	r31
 3fa:	e7 95       	ror	r30
 3fc:	f6 95       	lsr	r31
 3fe:	e7 95       	ror	r30
 400:	9f 01       	movw	r18, r30
 402:	ab e7       	ldi	r26, 0x7B	; 123
 404:	b4 e1       	ldi	r27, 0x14	; 20
 406:	42 d3       	rcall	.+1668   	; 0xa8c <__umulhisi3>
 408:	ac 01       	movw	r20, r24
 40a:	56 95       	lsr	r21
 40c:	47 95       	ror	r20
 40e:	4d af       	std	Y+61, r20	; 0x3d
 410:	24 e6       	ldi	r18, 0x64	; 100
 412:	24 9f       	mul	r18, r20
 414:	c0 01       	movw	r24, r0
 416:	25 9f       	mul	r18, r21
 418:	90 0d       	add	r25, r0
 41a:	11 24       	eor	r1, r1
 41c:	e8 1a       	sub	r14, r24
 41e:	f9 0a       	sbc	r15, r25
 420:	ee ae       	std	Y+62, r14	; 0x3e
 422:	ce 01       	movw	r24, r28
 424:	85 de       	rcall	.-758    	; 0x130 <_ZN15HD44780_PCF857416ClearDataCounterEv>
 426:	1a ae       	std	Y+58, r1	; 0x3a
 428:	1b ae       	std	Y+59, r1	; 0x3b
 42a:	1c ae       	std	Y+60, r1	; 0x3c
 42c:	48 e8       	ldi	r20, 0x88	; 136
 42e:	53 e1       	ldi	r21, 0x13	; 19
 430:	63 e3       	ldi	r22, 0x33	; 51
 432:	ce 01       	movw	r24, r28
 434:	7e df       	rcall	.-260    	; 0x332 <_ZN15HD44780_PCF857410AddCommandEhj>
 436:	44 e6       	ldi	r20, 0x64	; 100
 438:	50 e0       	ldi	r21, 0x00	; 0
 43a:	62 e3       	ldi	r22, 0x32	; 50
 43c:	ce 01       	movw	r24, r28
 43e:	79 df       	rcall	.-270    	; 0x332 <_ZN15HD44780_PCF857410AddCommandEhj>
 440:	42 e3       	ldi	r20, 0x32	; 50
 442:	50 e0       	ldi	r21, 0x00	; 0
 444:	68 e2       	ldi	r22, 0x28	; 40
 446:	ce 01       	movw	r24, r28
 448:	74 df       	rcall	.-280    	; 0x332 <_ZN15HD44780_PCF857410AddCommandEhj>
 44a:	ce 01       	movw	r24, r28
 44c:	a8 df       	rcall	.-176    	; 0x39e <_ZN15HD44780_PCF85743OffEv>
 44e:	ce 01       	movw	r24, r28
 450:	ab df       	rcall	.-170    	; 0x3a8 <_ZN15HD44780_PCF85745ClearEv>
 452:	42 e3       	ldi	r20, 0x32	; 50
 454:	50 e0       	ldi	r21, 0x00	; 0
 456:	66 e0       	ldi	r22, 0x06	; 6
 458:	ce 01       	movw	r24, r28
 45a:	6b df       	rcall	.-298    	; 0x332 <_ZN15HD44780_PCF857410AddCommandEhj>
 45c:	ce 01       	movw	r24, r28
 45e:	9a df       	rcall	.-204    	; 0x394 <_ZN15HD44780_PCF85742OnEv>
 460:	df 91       	pop	r29
 462:	cf 91       	pop	r28
 464:	1f 91       	pop	r17
 466:	0f 91       	pop	r16
 468:	ff 90       	pop	r15
 46a:	ef 90       	pop	r14
 46c:	08 95       	ret

0000046e <_ZN15HD44780_PCF857412InsertSymbolEhPKc>:
 46e:	cf 92       	push	r12
 470:	df 92       	push	r13
 472:	ff 92       	push	r15
 474:	0f 93       	push	r16
 476:	1f 93       	push	r17
 478:	cf 93       	push	r28
 47a:	df 93       	push	r29
 47c:	ec 01       	movw	r28, r24
 47e:	6a 01       	movw	r12, r20
 480:	70 e0       	ldi	r23, 0x00	; 0
 482:	66 0f       	add	r22, r22
 484:	77 1f       	adc	r23, r23
 486:	66 0f       	add	r22, r22
 488:	77 1f       	adc	r23, r23
 48a:	66 0f       	add	r22, r22
 48c:	77 1f       	adc	r23, r23
 48e:	60 64       	ori	r22, 0x40	; 64
 490:	42 e3       	ldi	r20, 0x32	; 50
 492:	50 e0       	ldi	r21, 0x00	; 0
 494:	4e df       	rcall	.-356    	; 0x332 <_ZN15HD44780_PCF857410AddCommandEhj>
 496:	6c e1       	ldi	r22, 0x1C	; 28
 498:	ce 01       	movw	r24, r28
 49a:	4d de       	rcall	.-870    	; 0x136 <_ZN15HD44780_PCF857413PrepareBufferEh>
 49c:	f1 2c       	mov	r15, r1
 49e:	8c ad       	ldd	r24, Y+60	; 0x3c
 4a0:	90 e0       	ldi	r25, 0x00	; 0
 4a2:	fe 01       	movw	r30, r28
 4a4:	e8 0f       	add	r30, r24
 4a6:	f9 1f       	adc	r31, r25
 4a8:	23 8d       	ldd	r18, Z+27	; 0x1b
 4aa:	f2 16       	cp	r15, r18
 4ac:	d8 f4       	brcc	.+54     	; 0x4e4 <_ZN15HD44780_PCF857412InsertSymbolEhPKc+0x76>
 4ae:	86 01       	movw	r16, r12
 4b0:	0f 5f       	subi	r16, 0xFF	; 255
 4b2:	1f 4f       	sbci	r17, 0xFF	; 255
 4b4:	40 e0       	ldi	r20, 0x00	; 0
 4b6:	f6 01       	movw	r30, r12
 4b8:	60 81       	ld	r22, Z
 4ba:	ce 01       	movw	r24, r28
 4bc:	62 de       	rcall	.-828    	; 0x182 <_ZN15HD44780_PCF85748FormByteEh16HD44780_DataType>
 4be:	ec ad       	ldd	r30, Y+60	; 0x3c
 4c0:	f0 e0       	ldi	r31, 0x00	; 0
 4c2:	ee 0f       	add	r30, r30
 4c4:	ff 1f       	adc	r31, r31
 4c6:	ec 0f       	add	r30, r28
 4c8:	fd 1f       	adc	r31, r29
 4ca:	07 80       	ldd	r0, Z+7	; 0x07
 4cc:	f0 85       	ldd	r31, Z+8	; 0x08
 4ce:	e0 2d       	mov	r30, r0
 4d0:	ef 0d       	add	r30, r15
 4d2:	f1 1d       	adc	r31, r1
 4d4:	60 83       	st	Z, r22
 4d6:	71 83       	std	Z+1, r23	; 0x01
 4d8:	82 83       	std	Z+2, r24	; 0x02
 4da:	93 83       	std	Z+3, r25	; 0x03
 4dc:	f4 e0       	ldi	r31, 0x04	; 4
 4de:	ff 0e       	add	r15, r31
 4e0:	68 01       	movw	r12, r16
 4e2:	dd cf       	rjmp	.-70     	; 0x49e <_ZN15HD44780_PCF857412InsertSymbolEhPKc+0x30>
 4e4:	88 0f       	add	r24, r24
 4e6:	99 1f       	adc	r25, r25
 4e8:	fe 01       	movw	r30, r28
 4ea:	e8 0f       	add	r30, r24
 4ec:	f9 1f       	adc	r31, r25
 4ee:	82 e3       	ldi	r24, 0x32	; 50
 4f0:	90 e0       	ldi	r25, 0x00	; 0
 4f2:	96 a3       	std	Z+38, r25	; 0x26
 4f4:	85 a3       	std	Z+37, r24	; 0x25
 4f6:	ce 01       	movw	r24, r28
 4f8:	87 de       	rcall	.-754    	; 0x208 <_ZN15HD44780_PCF857418UpdateWritePointerEv>
 4fa:	81 e0       	ldi	r24, 0x01	; 1
 4fc:	8e 83       	std	Y+6, r24	; 0x06
 4fe:	df 91       	pop	r29
 500:	cf 91       	pop	r28
 502:	1f 91       	pop	r17
 504:	0f 91       	pop	r16
 506:	ff 90       	pop	r15
 508:	df 90       	pop	r13
 50a:	cf 90       	pop	r12
 50c:	08 95       	ret

0000050e <_ZN15HD44780_PCF857417SetCursorPositionEhh>:
 50e:	42 30       	cpi	r20, 0x02	; 2
 510:	20 f0       	brcs	.+8      	; 0x51a <_ZN15HD44780_PCF857417SetCursorPositionEhh+0xc>
 512:	41 70       	andi	r20, 0x01	; 1
 514:	fc 01       	movw	r30, r24
 516:	25 ad       	ldd	r18, Z+61	; 0x3d
 518:	62 0f       	add	r22, r18
 51a:	f0 e4       	ldi	r31, 0x40	; 64
 51c:	4f 9f       	mul	r20, r31
 51e:	60 0d       	add	r22, r0
 520:	11 24       	eor	r1, r1
 522:	60 68       	ori	r22, 0x80	; 128
 524:	42 e3       	ldi	r20, 0x32	; 50
 526:	50 e0       	ldi	r21, 0x00	; 0
 528:	04 df       	rcall	.-504    	; 0x332 <_ZN15HD44780_PCF857410AddCommandEhj>
 52a:	08 95       	ret

0000052c <_ZN15HD44780_PCF857414CursorOversideEhh>:
 52c:	fc 01       	movw	r30, r24
 52e:	25 ad       	ldd	r18, Z+61	; 0x3d
 530:	62 17       	cp	r22, r18
 532:	28 f4       	brcc	.+10     	; 0x53e <_ZN15HD44780_PCF857414CursorOversideEhh+0x12>
 534:	86 ad       	ldd	r24, Z+62	; 0x3e
 536:	48 17       	cp	r20, r24
 538:	20 f0       	brcs	.+8      	; 0x542 <_ZN15HD44780_PCF857414CursorOversideEhh+0x16>
 53a:	81 e0       	ldi	r24, 0x01	; 1
 53c:	08 95       	ret
 53e:	81 e0       	ldi	r24, 0x01	; 1
 540:	08 95       	ret
 542:	80 e0       	ldi	r24, 0x00	; 0
 544:	08 95       	ret

00000546 <_ZN15HD44780_PCF857415NormaliseLengthERhh>:
 546:	fb 01       	movw	r30, r22
 548:	50 81       	ld	r21, Z
 54a:	25 2f       	mov	r18, r21
 54c:	30 e0       	ldi	r19, 0x00	; 0
 54e:	24 0f       	add	r18, r20
 550:	31 1d       	adc	r19, r1
 552:	fc 01       	movw	r30, r24
 554:	85 ad       	ldd	r24, Z+61	; 0x3d
 556:	e8 2f       	mov	r30, r24
 558:	f0 e0       	ldi	r31, 0x00	; 0
 55a:	e2 17       	cp	r30, r18
 55c:	f3 07       	cpc	r31, r19
 55e:	14 f4       	brge	.+4      	; 0x564 <_ZN15HD44780_PCF857415NormaliseLengthERhh+0x1e>
 560:	58 2f       	mov	r21, r24
 562:	54 1b       	sub	r21, r20
 564:	fb 01       	movw	r30, r22
 566:	50 83       	st	Z, r21
 568:	08 95       	ret

0000056a <_ZN15HD44780_PCF85745PrintEPKchh>:

void HD44780_PCF8574::Print(const char *text, uint8_t slot, uint8_t line)
{
 56a:	af 92       	push	r10
 56c:	bf 92       	push	r11
 56e:	df 92       	push	r13
 570:	ef 92       	push	r14
 572:	ff 92       	push	r15
 574:	0f 93       	push	r16
 576:	1f 93       	push	r17
 578:	cf 93       	push	r28
 57a:	df 93       	push	r29
 57c:	1f 92       	push	r1
 57e:	cd b7       	in	r28, 0x3d	; 61
 580:	de b7       	in	r29, 0x3e	; 62
 582:	7c 01       	movw	r14, r24
 584:	5b 01       	movw	r10, r22
 586:	14 2f       	mov	r17, r20
 588:	02 2f       	mov	r16, r18
	if(CursorOverside(slot, line)) return;
 58a:	42 2f       	mov	r20, r18
 58c:	61 2f       	mov	r22, r17
 58e:	ce df       	rcall	.-100    	; 0x52c <_ZN15HD44780_PCF857414CursorOversideEhh>
 590:	81 11       	cpse	r24, r1
 592:	50 c0       	rjmp	.+160    	; 0x634 <_ZN15HD44780_PCF85745PrintEPKchh+0xca>
	SetCursorPosition(slot, line);
 594:	40 2f       	mov	r20, r16
 596:	61 2f       	mov	r22, r17
 598:	c7 01       	movw	r24, r14
 59a:	b9 df       	rcall	.-142    	; 0x50e <_ZN15HD44780_PCF857417SetCursorPositionEhh>
	
	while(bufferCounter == LCD_BUF_SIZE);	
 59c:	d7 01       	movw	r26, r14
 59e:	da 96       	adiw	r26, 0x3a	; 58
 5a0:	8c 91       	ld	r24, X
 5a2:	8a 30       	cpi	r24, 0x0A	; 10
 5a4:	d9 f3       	breq	.-10     	; 0x59c <_ZN15HD44780_PCF85745PrintEPKchh+0x32>
	
	uint8_t length = strlen(text);
 5a6:	f5 01       	movw	r30, r10
 5a8:	01 90       	ld	r0, Z+
 5aa:	00 20       	and	r0, r0
 5ac:	e9 f7       	brne	.-6      	; 0x5a8 <_ZN15HD44780_PCF85745PrintEPKchh+0x3e>
 5ae:	31 97       	sbiw	r30, 0x01	; 1
 5b0:	ea 19       	sub	r30, r10
 5b2:	fb 09       	sbc	r31, r11
 5b4:	e9 83       	std	Y+1, r30	; 0x01
	NormaliseLength(length, slot);
 5b6:	41 2f       	mov	r20, r17
 5b8:	be 01       	movw	r22, r28
 5ba:	6f 5f       	subi	r22, 0xFF	; 255
 5bc:	7f 4f       	sbci	r23, 0xFF	; 255
 5be:	c7 01       	movw	r24, r14
 5c0:	c2 df       	rcall	.-124    	; 0x546 <_ZN15HD44780_PCF857415NormaliseLengthERhh>
	PrepareBuffer(length * sizeof(uint32_t));	
 5c2:	69 81       	ldd	r22, Y+1	; 0x01
 5c4:	66 0f       	add	r22, r22
 5c6:	66 0f       	add	r22, r22
 5c8:	c7 01       	movw	r24, r14
 5ca:	b5 dd       	rcall	.-1174   	; 0x136 <_ZN15HD44780_PCF857413PrepareBufferEh>

	for(uint8_t i = 0; i < this->dataSize[this->writePointer]; i += sizeof(uint32_t))
 5cc:	d1 2c       	mov	r13, r1
 5ce:	f7 01       	movw	r30, r14
 5d0:	84 ad       	ldd	r24, Z+60	; 0x3c
 5d2:	90 e0       	ldi	r25, 0x00	; 0
 5d4:	e8 0f       	add	r30, r24
 5d6:	f9 1f       	adc	r31, r25
 5d8:	23 8d       	ldd	r18, Z+27	; 0x1b
 5da:	d2 16       	cp	r13, r18
 5dc:	e8 f4       	brcc	.+58     	; 0x618 <_ZN15HD44780_PCF85745PrintEPKchh+0xae>
	{		
		uint32_t _data = FormByte(*text++, LCD_Data);		
 5de:	85 01       	movw	r16, r10
 5e0:	0f 5f       	subi	r16, 0xFF	; 255
 5e2:	1f 4f       	sbci	r17, 0xFF	; 255
 5e4:	40 e0       	ldi	r20, 0x00	; 0
 5e6:	d5 01       	movw	r26, r10
 5e8:	6c 91       	ld	r22, X
 5ea:	c7 01       	movw	r24, r14
 5ec:	ca dd       	rcall	.-1132   	; 0x182 <_ZN15HD44780_PCF85748FormByteEh16HD44780_DataType>
				
		memcpy(buffer[this->writePointer] + i, (uint8_t*)&_data, sizeof(uint32_t));
 5ee:	d7 01       	movw	r26, r14
 5f0:	dc 96       	adiw	r26, 0x3c	; 60
 5f2:	ec 91       	ld	r30, X
 5f4:	f0 e0       	ldi	r31, 0x00	; 0
 5f6:	ee 0f       	add	r30, r30
 5f8:	ff 1f       	adc	r31, r31
 5fa:	ee 0d       	add	r30, r14
 5fc:	ff 1d       	adc	r31, r15
 5fe:	07 80       	ldd	r0, Z+7	; 0x07
 600:	f0 85       	ldd	r31, Z+8	; 0x08
 602:	e0 2d       	mov	r30, r0
 604:	ed 0d       	add	r30, r13
 606:	f1 1d       	adc	r31, r1
 608:	60 83       	st	Z, r22
 60a:	71 83       	std	Z+1, r23	; 0x01
 60c:	82 83       	std	Z+2, r24	; 0x02
 60e:	93 83       	std	Z+3, r25	; 0x03
	
	uint8_t length = strlen(text);
	NormaliseLength(length, slot);
	PrepareBuffer(length * sizeof(uint32_t));	

	for(uint8_t i = 0; i < this->dataSize[this->writePointer]; i += sizeof(uint32_t))
 610:	b4 e0       	ldi	r27, 0x04	; 4
 612:	db 0e       	add	r13, r27
	{		
		uint32_t _data = FormByte(*text++, LCD_Data);		
 614:	58 01       	movw	r10, r16
	
	uint8_t length = strlen(text);
	NormaliseLength(length, slot);
	PrepareBuffer(length * sizeof(uint32_t));	

	for(uint8_t i = 0; i < this->dataSize[this->writePointer]; i += sizeof(uint32_t))
 616:	db cf       	rjmp	.-74     	; 0x5ce <_ZN15HD44780_PCF85745PrintEPKchh+0x64>
		uint32_t _data = FormByte(*text++, LCD_Data);		
				
		memcpy(buffer[this->writePointer] + i, (uint8_t*)&_data, sizeof(uint32_t));
	}
	
	this->delay[this->writePointer] = 50;
 618:	88 0f       	add	r24, r24
 61a:	99 1f       	adc	r25, r25
 61c:	f7 01       	movw	r30, r14
 61e:	e8 0f       	add	r30, r24
 620:	f9 1f       	adc	r31, r25
 622:	82 e3       	ldi	r24, 0x32	; 50
 624:	90 e0       	ldi	r25, 0x00	; 0
 626:	96 a3       	std	Z+38, r25	; 0x26
 628:	85 a3       	std	Z+37, r24	; 0x25
	
	UpdateWritePointer();
 62a:	c7 01       	movw	r24, r14
 62c:	ed dd       	rcall	.-1062   	; 0x208 <_ZN15HD44780_PCF857418UpdateWritePointerEv>
	
	this->transactionStatus = TWI_InProcess;
 62e:	81 e0       	ldi	r24, 0x01	; 1
 630:	f7 01       	movw	r30, r14
 632:	86 83       	std	Z+6, r24	; 0x06
}
 634:	0f 90       	pop	r0
 636:	df 91       	pop	r29
 638:	cf 91       	pop	r28
 63a:	1f 91       	pop	r17
 63c:	0f 91       	pop	r16
 63e:	ff 90       	pop	r15
 640:	ef 90       	pop	r14
 642:	df 90       	pop	r13
 644:	bf 90       	pop	r11
 646:	af 90       	pop	r10
 648:	08 95       	ret

0000064a <_ZN15HD44780_PCF857414PrintAlignmentEPKch17HD44780_Alignment>:

void HD44780_PCF8574::PrintAlignment(const char* text, uint8_t line, HD44780_Alignment alignment)
{
 64a:	54 2f       	mov	r21, r20
	uint8_t slot = 0;
	
	switch(alignment)
 64c:	21 30       	cpi	r18, 0x01	; 1
 64e:	19 f0       	breq	.+6      	; 0x656 <_ZN15HD44780_PCF857414PrintAlignmentEPKch17HD44780_Alignment+0xc>
 650:	22 30       	cpi	r18, 0x02	; 2
 652:	69 f0       	breq	.+26     	; 0x66e <_ZN15HD44780_PCF857414PrintAlignmentEPKch17HD44780_Alignment+0x24>
 654:	1c c0       	rjmp	.+56     	; 0x68e <_ZN15HD44780_PCF857414PrintAlignmentEPKch17HD44780_Alignment+0x44>
			slot = 0;
		}break;
		
		case RIGHT_SIDE:
		{
			slot = symbols - strlen(text);
 656:	fc 01       	movw	r30, r24
 658:	25 ad       	ldd	r18, Z+61	; 0x3d
 65a:	fb 01       	movw	r30, r22
 65c:	01 90       	ld	r0, Z+
 65e:	00 20       	and	r0, r0
 660:	e9 f7       	brne	.-6      	; 0x65c <_ZN15HD44780_PCF857414PrintAlignmentEPKch17HD44780_Alignment+0x12>
 662:	31 97       	sbiw	r30, 0x01	; 1
 664:	e6 1b       	sub	r30, r22
 666:	f7 0b       	sbc	r31, r23
 668:	42 2f       	mov	r20, r18
 66a:	4e 1b       	sub	r20, r30
		}break;
 66c:	11 c0       	rjmp	.+34     	; 0x690 <_ZN15HD44780_PCF857414PrintAlignmentEPKch17HD44780_Alignment+0x46>
		
		case CENTER_SCREEN:
		{
			slot = (symbols - strlen(text)) / 2;
 66e:	fc 01       	movw	r30, r24
 670:	25 ad       	ldd	r18, Z+61	; 0x3d
 672:	fb 01       	movw	r30, r22
 674:	01 90       	ld	r0, Z+
 676:	00 20       	and	r0, r0
 678:	e9 f7       	brne	.-6      	; 0x674 <_ZN15HD44780_PCF857414PrintAlignmentEPKch17HD44780_Alignment+0x2a>
 67a:	31 97       	sbiw	r30, 0x01	; 1
 67c:	e6 1b       	sub	r30, r22
 67e:	f7 0b       	sbc	r31, r23
 680:	30 e0       	ldi	r19, 0x00	; 0
 682:	2e 1b       	sub	r18, r30
 684:	3f 0b       	sbc	r19, r31
 686:	36 95       	lsr	r19
 688:	27 95       	ror	r18
 68a:	42 2f       	mov	r20, r18
		}break;
 68c:	01 c0       	rjmp	.+2      	; 0x690 <_ZN15HD44780_PCF857414PrintAlignmentEPKch17HD44780_Alignment+0x46>
	this->transactionStatus = TWI_InProcess;
}

void HD44780_PCF8574::PrintAlignment(const char* text, uint8_t line, HD44780_Alignment alignment)
{
	uint8_t slot = 0;
 68e:	40 e0       	ldi	r20, 0x00	; 0
		{
			slot = (symbols - strlen(text)) / 2;
		}break;
	}
	
	Print(text, slot, line);
 690:	25 2f       	mov	r18, r21
 692:	6b df       	rcall	.-298    	; 0x56a <_ZN15HD44780_PCF85745PrintEPKchh>
 694:	08 95       	ret

00000696 <_Z41__static_initialization_and_destruction_0ii>:


    while (1) 
    {
    }
}
 696:	ef 92       	push	r14
 698:	ff 92       	push	r15
 69a:	0f 93       	push	r16
 69c:	cf 93       	push	r28
 69e:	df 93       	push	r29
 6a0:	01 97       	sbiw	r24, 0x01	; 1
 6a2:	31 f5       	brne	.+76     	; 0x6f0 <_Z41__static_initialization_and_destruction_0ii+0x5a>
 6a4:	6f 3f       	cpi	r22, 0xFF	; 255
 6a6:	7f 4f       	sbci	r23, 0xFF	; 255
 6a8:	19 f5       	brne	.+70     	; 0x6f0 <_Z41__static_initialization_and_destruction_0ii+0x5a>
#define Rectangle (const char[]){0b00011111, 0b00010001, 0b00010001, 0b00010001, 0b00010001, 0b00010001, 0b00011111}
#define RectAddr 1
#define RectangleSymbol (const char[]){RectAddr, '\0'}


TWI *twi = new TWI(F_CPU);
 6aa:	8a e0       	ldi	r24, 0x0A	; 10
 6ac:	90 e0       	ldi	r25, 0x00	; 0
 6ae:	ec d0       	rcall	.+472    	; 0x888 <_ZN3TWInwEj>
 6b0:	ec 01       	movw	r28, r24
 6b2:	40 e0       	ldi	r20, 0x00	; 0
 6b4:	52 e1       	ldi	r21, 0x12	; 18
 6b6:	6a e7       	ldi	r22, 0x7A	; 122
 6b8:	70 e0       	ldi	r23, 0x00	; 0
 6ba:	fe d0       	rcall	.+508    	; 0x8b8 <_ZN3TWIC1Em>
 6bc:	d0 93 95 00 	sts	0x0095, r29	; 0x800095 <twi+0x1>
 6c0:	c0 93 94 00 	sts	0x0094, r28	; 0x800094 <twi>

HD44780_PCF8574 *lcd = new HD44780_PCF8574(twi, 0, 0, 1, WH2004);
 6c4:	8f e3       	ldi	r24, 0x3F	; 63
 6c6:	90 e0       	ldi	r25, 0x00	; 0
 6c8:	29 dd       	rcall	.-1454   	; 0x11c <_ZN15HD44780_PCF8574nwEj>
 6ca:	ec 01       	movw	r28, r24
 6cc:	60 91 94 00 	lds	r22, 0x0094	; 0x800094 <twi>
 6d0:	70 91 95 00 	lds	r23, 0x0095	; 0x800095 <twi+0x1>
 6d4:	0f 2e       	mov	r0, r31
 6d6:	f4 ed       	ldi	r31, 0xD4	; 212
 6d8:	ef 2e       	mov	r14, r31
 6da:	f7 e0       	ldi	r31, 0x07	; 7
 6dc:	ff 2e       	mov	r15, r31
 6de:	f0 2d       	mov	r31, r0
 6e0:	01 e0       	ldi	r16, 0x01	; 1
 6e2:	20 e0       	ldi	r18, 0x00	; 0
 6e4:	40 e0       	ldi	r20, 0x00	; 0
 6e6:	65 de       	rcall	.-822    	; 0x3b2 <_ZN15HD44780_PCF8574C1EP3TWIhhh12HD44780_Type>
 6e8:	d0 93 93 00 	sts	0x0093, r29	; 0x800093 <__data_end+0x1>
 6ec:	c0 93 92 00 	sts	0x0092, r28	; 0x800092 <__data_end>


    while (1) 
    {
    }
}
 6f0:	df 91       	pop	r29
 6f2:	cf 91       	pop	r28
 6f4:	0f 91       	pop	r16
 6f6:	ff 90       	pop	r15
 6f8:	ef 90       	pop	r14
 6fa:	08 95       	ret

000006fc <__vector_17>:

HD44780_PCF8574 *lcd = new HD44780_PCF8574(twi, 0, 0, 1, WH2004);


ISR(TWI_vect)
{
 6fc:	1f 92       	push	r1
 6fe:	0f 92       	push	r0
 700:	0f b6       	in	r0, 0x3f	; 63
 702:	0f 92       	push	r0
 704:	11 24       	eor	r1, r1
 706:	2f 93       	push	r18
 708:	3f 93       	push	r19
 70a:	4f 93       	push	r20
 70c:	5f 93       	push	r21
 70e:	6f 93       	push	r22
 710:	7f 93       	push	r23
 712:	8f 93       	push	r24
 714:	9f 93       	push	r25
 716:	af 93       	push	r26
 718:	bf 93       	push	r27
 71a:	ef 93       	push	r30
 71c:	ff 93       	push	r31
	twi->HandleDataChange();
 71e:	80 91 94 00 	lds	r24, 0x0094	; 0x800094 <twi>
 722:	90 91 95 00 	lds	r25, 0x0095	; 0x800095 <twi+0x1>
 726:	25 d1       	rcall	.+586    	; 0x972 <_ZN3TWI16HandleDataChangeEv>
}
 728:	ff 91       	pop	r31
 72a:	ef 91       	pop	r30
 72c:	bf 91       	pop	r27
 72e:	af 91       	pop	r26
 730:	9f 91       	pop	r25
 732:	8f 91       	pop	r24
 734:	7f 91       	pop	r23
 736:	6f 91       	pop	r22
 738:	5f 91       	pop	r21
 73a:	4f 91       	pop	r20
 73c:	3f 91       	pop	r19
 73e:	2f 91       	pop	r18
 740:	0f 90       	pop	r0
 742:	0f be       	out	0x3f, r0	; 63
 744:	0f 90       	pop	r0
 746:	1f 90       	pop	r1
 748:	18 95       	reti

0000074a <__vector_9>:

ISR(TIMER0_OVF_vect)
{
 74a:	1f 92       	push	r1
 74c:	0f 92       	push	r0
 74e:	0f b6       	in	r0, 0x3f	; 63
 750:	0f 92       	push	r0
 752:	11 24       	eor	r1, r1
 754:	2f 93       	push	r18
 756:	3f 93       	push	r19
 758:	4f 93       	push	r20
 75a:	5f 93       	push	r21
 75c:	6f 93       	push	r22
 75e:	7f 93       	push	r23
 760:	8f 93       	push	r24
 762:	9f 93       	push	r25
 764:	af 93       	push	r26
 766:	bf 93       	push	r27
 768:	ef 93       	push	r30
 76a:	ff 93       	push	r31
	twi->CheckDevices();
 76c:	80 91 94 00 	lds	r24, 0x0094	; 0x800094 <twi>
 770:	90 91 95 00 	lds	r25, 0x0095	; 0x800095 <twi+0x1>
 774:	17 d1       	rcall	.+558    	; 0x9a4 <_ZN3TWI12CheckDevicesEv>
}
 776:	ff 91       	pop	r31
 778:	ef 91       	pop	r30
 77a:	bf 91       	pop	r27
 77c:	af 91       	pop	r26
 77e:	9f 91       	pop	r25
 780:	8f 91       	pop	r24
 782:	7f 91       	pop	r23
 784:	6f 91       	pop	r22
 786:	5f 91       	pop	r21
 788:	4f 91       	pop	r20
 78a:	3f 91       	pop	r19
 78c:	2f 91       	pop	r18
 78e:	0f 90       	pop	r0
 790:	0f be       	out	0x3f, r0	; 63
 792:	0f 90       	pop	r0
 794:	1f 90       	pop	r1
 796:	18 95       	reti

00000798 <main>:

int main(void)
{
	//T0
	TCCR0|=(1<<CS02)|(1<<CS00);	//prescaler 1024
 798:	83 b7       	in	r24, 0x33	; 51
 79a:	85 60       	ori	r24, 0x05	; 5
 79c:	83 bf       	out	0x33, r24	; 51
	TIMSK|=(1<<TOIE0);			//enable interrupt OVF
 79e:	89 b7       	in	r24, 0x39	; 57
 7a0:	81 60       	ori	r24, 0x01	; 1
 7a2:	89 bf       	out	0x39, r24	; 57

	twi->AddDevice(lcd);
 7a4:	60 91 92 00 	lds	r22, 0x0092	; 0x800092 <__data_end>
 7a8:	70 91 93 00 	lds	r23, 0x0093	; 0x800093 <__data_end+0x1>
 7ac:	80 91 94 00 	lds	r24, 0x0094	; 0x800094 <twi>
 7b0:	90 91 95 00 	lds	r25, 0x0095	; 0x800095 <twi+0x1>
 7b4:	cb d0       	rcall	.+406    	; 0x94c <_ZN3TWI9AddDeviceEP4ITWI>
		
	sei();
 7b6:	78 94       	sei
		
	lcd->InsertSymbol(RectAddr, Rectangle);
 7b8:	4b e8       	ldi	r20, 0x8B	; 139
 7ba:	50 e0       	ldi	r21, 0x00	; 0
 7bc:	61 e0       	ldi	r22, 0x01	; 1
 7be:	80 91 92 00 	lds	r24, 0x0092	; 0x800092 <__data_end>
 7c2:	90 91 93 00 	lds	r25, 0x0093	; 0x800093 <__data_end+0x1>
 7c6:	53 de       	rcall	.-858    	; 0x46e <_ZN15HD44780_PCF857412InsertSymbolEhPKc>
		
	lcd->Print("hello", 5, 0);
 7c8:	20 e0       	ldi	r18, 0x00	; 0
 7ca:	45 e0       	ldi	r20, 0x05	; 5
 7cc:	60 e7       	ldi	r22, 0x70	; 112
 7ce:	70 e0       	ldi	r23, 0x00	; 0
 7d0:	80 91 92 00 	lds	r24, 0x0092	; 0x800092 <__data_end>
 7d4:	90 91 93 00 	lds	r25, 0x0093	; 0x800093 <__data_end+0x1>
 7d8:	c8 de       	rcall	.-624    	; 0x56a <_ZN15HD44780_PCF85745PrintEPKchh>
	lcd->PrintAlignment("alignment", 2, CENTER_SCREEN);
 7da:	22 e0       	ldi	r18, 0x02	; 2
 7dc:	42 e0       	ldi	r20, 0x02	; 2
 7de:	66 e7       	ldi	r22, 0x76	; 118
 7e0:	70 e0       	ldi	r23, 0x00	; 0
 7e2:	80 91 92 00 	lds	r24, 0x0092	; 0x800092 <__data_end>
 7e6:	90 91 93 00 	lds	r25, 0x0093	; 0x800093 <__data_end+0x1>
 7ea:	2f df       	rcall	.-418    	; 0x64a <_ZN15HD44780_PCF857414PrintAlignmentEPKch17HD44780_Alignment>
	lcd->Print("overflow", 17, 3);
 7ec:	23 e0       	ldi	r18, 0x03	; 3
 7ee:	41 e1       	ldi	r20, 0x11	; 17
 7f0:	60 e8       	ldi	r22, 0x80	; 128
 7f2:	70 e0       	ldi	r23, 0x00	; 0
 7f4:	80 91 92 00 	lds	r24, 0x0092	; 0x800092 <__data_end>
 7f8:	90 91 93 00 	lds	r25, 0x0093	; 0x800093 <__data_end+0x1>
 7fc:	b6 de       	rcall	.-660    	; 0x56a <_ZN15HD44780_PCF85745PrintEPKchh>
		
	lcd->Print(RectangleSymbol, 0, 3);
 7fe:	23 e0       	ldi	r18, 0x03	; 3
 800:	40 e0       	ldi	r20, 0x00	; 0
 802:	69 e8       	ldi	r22, 0x89	; 137
 804:	70 e0       	ldi	r23, 0x00	; 0
 806:	80 91 92 00 	lds	r24, 0x0092	; 0x800092 <__data_end>
 80a:	90 91 93 00 	lds	r25, 0x0093	; 0x800093 <__data_end+0x1>
 80e:	ad de       	rcall	.-678    	; 0x56a <_ZN15HD44780_PCF85745PrintEPKchh>
 810:	ff cf       	rjmp	.-2      	; 0x810 <main+0x78>

00000812 <_GLOBAL__sub_I_twi>:


    while (1) 
    {
    }
}
 812:	6f ef       	ldi	r22, 0xFF	; 255
 814:	7f ef       	ldi	r23, 0xFF	; 255
 816:	81 e0       	ldi	r24, 0x01	; 1
 818:	90 e0       	ldi	r25, 0x00	; 0
 81a:	3d df       	rcall	.-390    	; 0x696 <_Z41__static_initialization_and_destruction_0ii>
 81c:	08 95       	ret

0000081e <_ZN3TWI17SetClockFrequencyEm>:
	return ptr;
}

void TWI::operator delete(void* ptr)
{
	free(ptr);
 81e:	cf 92       	push	r12
 820:	df 92       	push	r13
 822:	ef 92       	push	r14
 824:	ff 92       	push	r15
 826:	cf 93       	push	r28
 828:	df 93       	push	r29
 82a:	ec 01       	movw	r28, r24
 82c:	6a 01       	movw	r12, r20
 82e:	7b 01       	movw	r14, r22
 830:	8c 81       	ldd	r24, Y+4	; 0x04
 832:	9d 81       	ldd	r25, Y+5	; 0x05
 834:	ae 81       	ldd	r26, Y+6	; 0x06
 836:	bf 81       	ldd	r27, Y+7	; 0x07
 838:	84 17       	cp	r24, r20
 83a:	95 07       	cpc	r25, r21
 83c:	a6 07       	cpc	r26, r22
 83e:	b7 07       	cpc	r27, r23
 840:	a9 f0       	breq	.+42     	; 0x86c <_ZN3TWI17SetClockFrequencyEm+0x4e>
 842:	68 81       	ld	r22, Y
 844:	79 81       	ldd	r23, Y+1	; 0x01
 846:	8a 81       	ldd	r24, Y+2	; 0x02
 848:	9b 81       	ldd	r25, Y+3	; 0x03
 84a:	a7 01       	movw	r20, r14
 84c:	96 01       	movw	r18, r12
 84e:	fc d0       	rcall	.+504    	; 0xa48 <__udivmodsi4>
 850:	da 01       	movw	r26, r20
 852:	c9 01       	movw	r24, r18
 854:	40 97       	sbiw	r24, 0x10	; 16
 856:	a1 09       	sbc	r26, r1
 858:	b1 09       	sbc	r27, r1
 85a:	b6 95       	lsr	r27
 85c:	a7 95       	ror	r26
 85e:	97 95       	ror	r25
 860:	87 95       	ror	r24
 862:	80 b9       	out	0x00, r24	; 0
 864:	cc 82       	std	Y+4, r12	; 0x04
 866:	dd 82       	std	Y+5, r13	; 0x05
 868:	ee 82       	std	Y+6, r14	; 0x06
 86a:	ff 82       	std	Y+7, r15	; 0x07
 86c:	df 91       	pop	r29
 86e:	cf 91       	pop	r28
 870:	ff 90       	pop	r15
 872:	ef 90       	pop	r14
 874:	df 90       	pop	r13
 876:	cf 90       	pop	r12
 878:	08 95       	ret

0000087a <_ZN3TWI5StartEv>:
 87a:	85 ea       	ldi	r24, 0xA5	; 165
 87c:	86 bf       	out	0x36, r24	; 54
 87e:	08 95       	ret

00000880 <_ZN3TWI11WriteToTWDREh>:
 880:	63 b9       	out	0x03, r22	; 3
 882:	85 e8       	ldi	r24, 0x85	; 133
 884:	86 bf       	out	0x36, r24	; 54
 886:	08 95       	ret

00000888 <_ZN3TWInwEj>:
 888:	cf 93       	push	r28
 88a:	df 93       	push	r29
 88c:	ec 01       	movw	r28, r24
 88e:	ce 01       	movw	r24, r28
 890:	0f d1       	rcall	.+542    	; 0xab0 <malloc>
 892:	00 97       	sbiw	r24, 0x00	; 0
 894:	e1 f3       	breq	.-8      	; 0x88e <_ZN3TWInwEj+0x6>
 896:	df 91       	pop	r29
 898:	cf 91       	pop	r28
 89a:	08 95       	ret

0000089c <_ZN7DevicesI4ITWIEnwEj>:
{
	free((T**)this->devicesList);
}

template <typename T>
void* Devices<T>::operator new(size_t size)
 89c:	cf 93       	push	r28
 89e:	df 93       	push	r29
 8a0:	ec 01       	movw	r28, r24
{
	void* ptr;
	do
	{
		ptr = malloc(size);
 8a2:	ce 01       	movw	r24, r28
 8a4:	05 d1       	rcall	.+522    	; 0xab0 <malloc>

template <typename T>
void* Devices<T>::operator new(size_t size)
{
	void* ptr;
	do
 8a6:	00 97       	sbiw	r24, 0x00	; 0
 8a8:	e1 f3       	breq	.-8      	; 0x8a2 <_ZN7DevicesI4ITWIEnwEj+0x6>
	{
		ptr = malloc(size);
	}while(ptr == nullptr);
	
	return ptr;
}
 8aa:	df 91       	pop	r29
 8ac:	cf 91       	pop	r28
 8ae:	08 95       	ret

000008b0 <_ZN7DevicesI4ITWIEC1Ev>:
};

template <typename T>
Devices<T>::Devices()
{
	this->selectedDevice = 0;
 8b0:	fc 01       	movw	r30, r24
 8b2:	12 82       	std	Z+2, r1	; 0x02
	this->devicesQuantity = 0;
 8b4:	13 82       	std	Z+3, r1	; 0x03
 8b6:	08 95       	ret

000008b8 <_ZN3TWIC1Em>:
﻿#include "TWI.h"

TWI::TWI(uint32_t processorFrequency)
 8b8:	cf 92       	push	r12
 8ba:	df 92       	push	r13
 8bc:	ef 92       	push	r14
 8be:	ff 92       	push	r15
 8c0:	0f 93       	push	r16
 8c2:	1f 93       	push	r17
 8c4:	cf 93       	push	r28
 8c6:	df 93       	push	r29
 8c8:	ec 01       	movw	r28, r24
 8ca:	6a 01       	movw	r12, r20
 8cc:	7b 01       	movw	r14, r22
{
	this->devices = new Devices<ITWI>();
 8ce:	84 e0       	ldi	r24, 0x04	; 4
 8d0:	90 e0       	ldi	r25, 0x00	; 0
 8d2:	e4 df       	rcall	.-56     	; 0x89c <_ZN7DevicesI4ITWIEnwEj>
 8d4:	8c 01       	movw	r16, r24
 8d6:	ec df       	rcall	.-40     	; 0x8b0 <_ZN7DevicesI4ITWIEC1Ev>
 8d8:	19 87       	std	Y+9, r17	; 0x09
 8da:	08 87       	std	Y+8, r16	; 0x08
	
	this->processorFrequency = processorFrequency;
 8dc:	c8 82       	st	Y, r12
 8de:	d9 82       	std	Y+1, r13	; 0x01
 8e0:	ea 82       	std	Y+2, r14	; 0x02
 8e2:	fb 82       	std	Y+3, r15	; 0x03
}
 8e4:	df 91       	pop	r29
 8e6:	cf 91       	pop	r28
 8e8:	1f 91       	pop	r17
 8ea:	0f 91       	pop	r16
 8ec:	ff 90       	pop	r15
 8ee:	ef 90       	pop	r14
 8f0:	df 90       	pop	r13
 8f2:	cf 90       	pop	r12
 8f4:	08 95       	ret

000008f6 <_ZN7DevicesI4ITWIE3AddEPS0_>:
}

template <typename T>
void Devices<T>::Add(T *device)
 8f6:	ef 92       	push	r14
 8f8:	ff 92       	push	r15
 8fa:	0f 93       	push	r16
 8fc:	1f 93       	push	r17
 8fe:	cf 93       	push	r28
 900:	df 93       	push	r29
 902:	8c 01       	movw	r16, r24
 904:	7b 01       	movw	r14, r22
{
	this->devicesQuantity++;
 906:	fc 01       	movw	r30, r24
 908:	c3 81       	ldd	r28, Z+3	; 0x03
 90a:	cf 5f       	subi	r28, 0xFF	; 255
 90c:	c3 83       	std	Z+3, r28	; 0x03
		
	uint16_t newSize = this->devicesQuantity * sizeof(T*);
 90e:	d0 e0       	ldi	r29, 0x00	; 0
 910:	cc 0f       	add	r28, r28
 912:	dd 1f       	adc	r29, r29
	
	T **ptr = nullptr;		
	do 
	{
		ptr = (T**)realloc(this->devicesList, newSize);
 914:	be 01       	movw	r22, r28
 916:	f8 01       	movw	r30, r16
 918:	80 81       	ld	r24, Z
 91a:	91 81       	ldd	r25, Z+1	; 0x01
 91c:	ea d1       	rcall	.+980    	; 0xcf2 <realloc>
	this->devicesQuantity++;
		
	uint16_t newSize = this->devicesQuantity * sizeof(T*);
	
	T **ptr = nullptr;		
	do 
 91e:	00 97       	sbiw	r24, 0x00	; 0
 920:	c9 f3       	breq	.-14     	; 0x914 <_ZN7DevicesI4ITWIE3AddEPS0_+0x1e>
	{
		ptr = (T**)realloc(this->devicesList, newSize);
	}while (ptr == nullptr);
	
	this->devicesList = ptr;
 922:	f8 01       	movw	r30, r16
 924:	91 83       	std	Z+1, r25	; 0x01
 926:	80 83       	st	Z, r24
	
	this->devicesList[this->devicesQuantity - 1] = device;
 928:	23 81       	ldd	r18, Z+3	; 0x03
 92a:	30 e0       	ldi	r19, 0x00	; 0
 92c:	21 50       	subi	r18, 0x01	; 1
 92e:	30 48       	sbci	r19, 0x80	; 128
 930:	22 0f       	add	r18, r18
 932:	33 1f       	adc	r19, r19
 934:	fc 01       	movw	r30, r24
 936:	e2 0f       	add	r30, r18
 938:	f3 1f       	adc	r31, r19
 93a:	f1 82       	std	Z+1, r15	; 0x01
 93c:	e0 82       	st	Z, r14
}
 93e:	df 91       	pop	r29
 940:	cf 91       	pop	r28
 942:	1f 91       	pop	r17
 944:	0f 91       	pop	r16
 946:	ff 90       	pop	r15
 948:	ef 90       	pop	r14
 94a:	08 95       	ret

0000094c <_ZN3TWI9AddDeviceEP4ITWI>:

void TWI::AddDevice(ITWI *device)
{
	this->devices->Add(device);
 94c:	fc 01       	movw	r30, r24
 94e:	80 85       	ldd	r24, Z+8	; 0x08
 950:	91 85       	ldd	r25, Z+9	; 0x09
 952:	d1 df       	rcall	.-94     	; 0x8f6 <_ZN7DevicesI4ITWIE3AddEPS0_>
 954:	08 95       	ret

00000956 <_ZN7DevicesI4ITWIE13CurrentDeviceEv>:
}

template <typename T>
T* Devices<T>::CurrentDevice()
{
	return this->devicesList[this->selectedDevice];
 956:	dc 01       	movw	r26, r24
 958:	12 96       	adiw	r26, 0x02	; 2
 95a:	ec 91       	ld	r30, X
 95c:	12 97       	sbiw	r26, 0x02	; 2
 95e:	f0 e0       	ldi	r31, 0x00	; 0
 960:	ee 0f       	add	r30, r30
 962:	ff 1f       	adc	r31, r31
 964:	8d 91       	ld	r24, X+
 966:	9c 91       	ld	r25, X
 968:	e8 0f       	add	r30, r24
 96a:	f9 1f       	adc	r31, r25
}
 96c:	80 81       	ld	r24, Z
 96e:	91 81       	ldd	r25, Z+1	; 0x01
 970:	08 95       	ret

00000972 <_ZN3TWI16HandleDataChangeEv>:
	}
}

void TWI::HandleDataChange()
{	
	this->devices->CurrentDevice()->NextOperation((TWI_Status)(TWSR & TWI_NoActions));
 972:	dc 01       	movw	r26, r24
 974:	18 96       	adiw	r26, 0x08	; 8
 976:	8d 91       	ld	r24, X+
 978:	9c 91       	ld	r25, X
 97a:	19 97       	sbiw	r26, 0x09	; 9
 97c:	ec df       	rcall	.-40     	; 0x956 <_ZN7DevicesI4ITWIE13CurrentDeviceEv>
 97e:	dc 01       	movw	r26, r24
 980:	ed 91       	ld	r30, X+
 982:	fc 91       	ld	r31, X
 984:	04 80       	ldd	r0, Z+4	; 0x04
 986:	f5 81       	ldd	r31, Z+5	; 0x05
 988:	e0 2d       	mov	r30, r0
 98a:	61 b1       	in	r22, 0x01	; 1
 98c:	68 7f       	andi	r22, 0xF8	; 248
 98e:	09 95       	icall
 990:	08 95       	ret

00000992 <_ZN7DevicesI4ITWIE4NextEv>:
	
	this->devicesList[this->devicesQuantity - 1] = device;
}

template <typename T>
void Devices<T>::Next()
 992:	fc 01       	movw	r30, r24
{
	if(this->devicesQuantity > 0)
 994:	63 81       	ldd	r22, Z+3	; 0x03
 996:	66 23       	and	r22, r22
 998:	21 f0       	breq	.+8      	; 0x9a2 <_ZN7DevicesI4ITWIE4NextEv+0x10>
	{
		++this->selectedDevice %= this->devicesQuantity;
 99a:	82 81       	ldd	r24, Z+2	; 0x02
 99c:	8f 5f       	subi	r24, 0xFF	; 255
 99e:	48 d0       	rcall	.+144    	; 0xa30 <__udivmodqi4>
 9a0:	92 83       	std	Z+2, r25	; 0x02
 9a2:	08 95       	ret

000009a4 <_ZN3TWI12CheckDevicesEv>:
		this->clockFrequency = clockFrequency;
	}
}

void TWI::CheckDevices()
{
 9a4:	cf 93       	push	r28
 9a6:	df 93       	push	r29
	if(TWCR & (1<<TWIE)) return;
 9a8:	06 b6       	in	r0, 0x36	; 54
 9aa:	00 fc       	sbrc	r0, 0
 9ac:	21 c0       	rjmp	.+66     	; 0x9f0 <_ZN3TWI12CheckDevicesEv+0x4c>
 9ae:	ec 01       	movw	r28, r24
	
	if(this->devices->CurrentDevice()->GetTransactionStatus() == TWI_InProcess)
 9b0:	88 85       	ldd	r24, Y+8	; 0x08
 9b2:	99 85       	ldd	r25, Y+9	; 0x09
 9b4:	d0 df       	rcall	.-96     	; 0x956 <_ZN7DevicesI4ITWIE13CurrentDeviceEv>
 9b6:	dc 01       	movw	r26, r24
 9b8:	ed 91       	ld	r30, X+
 9ba:	fc 91       	ld	r31, X
 9bc:	02 80       	ldd	r0, Z+2	; 0x02
 9be:	f3 81       	ldd	r31, Z+3	; 0x03
 9c0:	e0 2d       	mov	r30, r0
 9c2:	09 95       	icall
 9c4:	81 30       	cpi	r24, 0x01	; 1
 9c6:	89 f4       	brne	.+34     	; 0x9ea <_ZN3TWI12CheckDevicesEv+0x46>
	{
		SetClockFrequency(this->devices->CurrentDevice()->ClockFrequency());
 9c8:	88 85       	ldd	r24, Y+8	; 0x08
 9ca:	99 85       	ldd	r25, Y+9	; 0x09
 9cc:	c4 df       	rcall	.-120    	; 0x956 <_ZN7DevicesI4ITWIE13CurrentDeviceEv>
 9ce:	dc 01       	movw	r26, r24
 9d0:	ed 91       	ld	r30, X+
 9d2:	fc 91       	ld	r31, X
 9d4:	01 90       	ld	r0, Z+
 9d6:	f0 81       	ld	r31, Z
 9d8:	e0 2d       	mov	r30, r0
 9da:	09 95       	icall
 9dc:	ab 01       	movw	r20, r22
 9de:	bc 01       	movw	r22, r24
 9e0:	ce 01       	movw	r24, r28
 9e2:	1d df       	rcall	.-454    	; 0x81e <_ZN3TWI17SetClockFrequencyEm>
		
		Start();		
 9e4:	ce 01       	movw	r24, r28
 9e6:	49 df       	rcall	.-366    	; 0x87a <_ZN3TWI5StartEv>
 9e8:	03 c0       	rjmp	.+6      	; 0x9f0 <_ZN3TWI12CheckDevicesEv+0x4c>
	}
	
	else
	{
		this->devices->Next();
 9ea:	88 85       	ldd	r24, Y+8	; 0x08
 9ec:	99 85       	ldd	r25, Y+9	; 0x09
 9ee:	d1 df       	rcall	.-94     	; 0x992 <_ZN7DevicesI4ITWIE4NextEv>
	}
}
 9f0:	df 91       	pop	r29
 9f2:	cf 91       	pop	r28
 9f4:	08 95       	ret

000009f6 <_ZN3TWI4StopEv>:
	uint8_t data = TWDR;
	return data;
}

void TWI::Stop()
{
 9f6:	cf 93       	push	r28
 9f8:	df 93       	push	r29
 9fa:	ec 01       	movw	r28, r24
	TWCR = (1<<TWEN)|(1<<TWINT)|(1<<TWSTO)|(0<<TWIE);
 9fc:	84 e9       	ldi	r24, 0x94	; 148
 9fe:	86 bf       	out	0x36, r24	; 54
	
	this->devices->CurrentDevice()->NextOperation(TWI_NoActions);
 a00:	88 85       	ldd	r24, Y+8	; 0x08
 a02:	99 85       	ldd	r25, Y+9	; 0x09
 a04:	a8 df       	rcall	.-176    	; 0x956 <_ZN7DevicesI4ITWIE13CurrentDeviceEv>
 a06:	dc 01       	movw	r26, r24
 a08:	ed 91       	ld	r30, X+
 a0a:	fc 91       	ld	r31, X
 a0c:	04 80       	ldd	r0, Z+4	; 0x04
 a0e:	f5 81       	ldd	r31, Z+5	; 0x05
 a10:	e0 2d       	mov	r30, r0
 a12:	68 ef       	ldi	r22, 0xF8	; 248
 a14:	09 95       	icall
	
	this->devices->Next();
 a16:	88 85       	ldd	r24, Y+8	; 0x08
 a18:	99 85       	ldd	r25, Y+9	; 0x09
 a1a:	bb df       	rcall	.-138    	; 0x992 <_ZN7DevicesI4ITWIE4NextEv>
}
 a1c:	df 91       	pop	r29
 a1e:	cf 91       	pop	r28
 a20:	08 95       	ret

00000a22 <_ZN3TWI16DisableInterruptEv>:

void TWI::DisableInterrupt()
{
	TWCR = (1<<TWEN)|(0<<TWIE)|(0<<TWINT)|(0<<TWEA)|(0<<TWSTA)|(1<<TWSTO)|(0<<TWWC);
 a22:	24 e1       	ldi	r18, 0x14	; 20
 a24:	26 bf       	out	0x36, r18	; 54
	
	this->devices->Next();
 a26:	fc 01       	movw	r30, r24
 a28:	80 85       	ldd	r24, Z+8	; 0x08
 a2a:	91 85       	ldd	r25, Z+9	; 0x09
 a2c:	b2 df       	rcall	.-156    	; 0x992 <_ZN7DevicesI4ITWIE4NextEv>
 a2e:	08 95       	ret

00000a30 <__udivmodqi4>:
 a30:	99 1b       	sub	r25, r25
 a32:	79 e0       	ldi	r23, 0x09	; 9
 a34:	04 c0       	rjmp	.+8      	; 0xa3e <__udivmodqi4_ep>

00000a36 <__udivmodqi4_loop>:
 a36:	99 1f       	adc	r25, r25
 a38:	96 17       	cp	r25, r22
 a3a:	08 f0       	brcs	.+2      	; 0xa3e <__udivmodqi4_ep>
 a3c:	96 1b       	sub	r25, r22

00000a3e <__udivmodqi4_ep>:
 a3e:	88 1f       	adc	r24, r24
 a40:	7a 95       	dec	r23
 a42:	c9 f7       	brne	.-14     	; 0xa36 <__udivmodqi4_loop>
 a44:	80 95       	com	r24
 a46:	08 95       	ret

00000a48 <__udivmodsi4>:
 a48:	a1 e2       	ldi	r26, 0x21	; 33
 a4a:	1a 2e       	mov	r1, r26
 a4c:	aa 1b       	sub	r26, r26
 a4e:	bb 1b       	sub	r27, r27
 a50:	fd 01       	movw	r30, r26
 a52:	0d c0       	rjmp	.+26     	; 0xa6e <__udivmodsi4_ep>

00000a54 <__udivmodsi4_loop>:
 a54:	aa 1f       	adc	r26, r26
 a56:	bb 1f       	adc	r27, r27
 a58:	ee 1f       	adc	r30, r30
 a5a:	ff 1f       	adc	r31, r31
 a5c:	a2 17       	cp	r26, r18
 a5e:	b3 07       	cpc	r27, r19
 a60:	e4 07       	cpc	r30, r20
 a62:	f5 07       	cpc	r31, r21
 a64:	20 f0       	brcs	.+8      	; 0xa6e <__udivmodsi4_ep>
 a66:	a2 1b       	sub	r26, r18
 a68:	b3 0b       	sbc	r27, r19
 a6a:	e4 0b       	sbc	r30, r20
 a6c:	f5 0b       	sbc	r31, r21

00000a6e <__udivmodsi4_ep>:
 a6e:	66 1f       	adc	r22, r22
 a70:	77 1f       	adc	r23, r23
 a72:	88 1f       	adc	r24, r24
 a74:	99 1f       	adc	r25, r25
 a76:	1a 94       	dec	r1
 a78:	69 f7       	brne	.-38     	; 0xa54 <__udivmodsi4_loop>
 a7a:	60 95       	com	r22
 a7c:	70 95       	com	r23
 a7e:	80 95       	com	r24
 a80:	90 95       	com	r25
 a82:	9b 01       	movw	r18, r22
 a84:	ac 01       	movw	r20, r24
 a86:	bd 01       	movw	r22, r26
 a88:	cf 01       	movw	r24, r30
 a8a:	08 95       	ret

00000a8c <__umulhisi3>:
 a8c:	a2 9f       	mul	r26, r18
 a8e:	b0 01       	movw	r22, r0
 a90:	b3 9f       	mul	r27, r19
 a92:	c0 01       	movw	r24, r0
 a94:	a3 9f       	mul	r26, r19
 a96:	01 d0       	rcall	.+2      	; 0xa9a <__umulhisi3+0xe>
 a98:	b2 9f       	mul	r27, r18
 a9a:	70 0d       	add	r23, r0
 a9c:	81 1d       	adc	r24, r1
 a9e:	11 24       	eor	r1, r1
 aa0:	91 1d       	adc	r25, r1
 aa2:	08 95       	ret

00000aa4 <__tablejump2__>:
 aa4:	ee 0f       	add	r30, r30
 aa6:	ff 1f       	adc	r31, r31
 aa8:	05 90       	lpm	r0, Z+
 aaa:	f4 91       	lpm	r31, Z
 aac:	e0 2d       	mov	r30, r0
 aae:	09 94       	ijmp

00000ab0 <malloc>:
 ab0:	0f 93       	push	r16
 ab2:	1f 93       	push	r17
 ab4:	cf 93       	push	r28
 ab6:	df 93       	push	r29
 ab8:	82 30       	cpi	r24, 0x02	; 2
 aba:	91 05       	cpc	r25, r1
 abc:	10 f4       	brcc	.+4      	; 0xac2 <malloc+0x12>
 abe:	82 e0       	ldi	r24, 0x02	; 2
 ac0:	90 e0       	ldi	r25, 0x00	; 0
 ac2:	e0 91 98 00 	lds	r30, 0x0098	; 0x800098 <__flp>
 ac6:	f0 91 99 00 	lds	r31, 0x0099	; 0x800099 <__flp+0x1>
 aca:	20 e0       	ldi	r18, 0x00	; 0
 acc:	30 e0       	ldi	r19, 0x00	; 0
 ace:	a0 e0       	ldi	r26, 0x00	; 0
 ad0:	b0 e0       	ldi	r27, 0x00	; 0
 ad2:	30 97       	sbiw	r30, 0x00	; 0
 ad4:	19 f1       	breq	.+70     	; 0xb1c <malloc+0x6c>
 ad6:	40 81       	ld	r20, Z
 ad8:	51 81       	ldd	r21, Z+1	; 0x01
 ada:	02 81       	ldd	r16, Z+2	; 0x02
 adc:	13 81       	ldd	r17, Z+3	; 0x03
 ade:	48 17       	cp	r20, r24
 ae0:	59 07       	cpc	r21, r25
 ae2:	c8 f0       	brcs	.+50     	; 0xb16 <malloc+0x66>
 ae4:	84 17       	cp	r24, r20
 ae6:	95 07       	cpc	r25, r21
 ae8:	69 f4       	brne	.+26     	; 0xb04 <malloc+0x54>
 aea:	10 97       	sbiw	r26, 0x00	; 0
 aec:	31 f0       	breq	.+12     	; 0xafa <malloc+0x4a>
 aee:	12 96       	adiw	r26, 0x02	; 2
 af0:	0c 93       	st	X, r16
 af2:	12 97       	sbiw	r26, 0x02	; 2
 af4:	13 96       	adiw	r26, 0x03	; 3
 af6:	1c 93       	st	X, r17
 af8:	27 c0       	rjmp	.+78     	; 0xb48 <malloc+0x98>
 afa:	00 93 98 00 	sts	0x0098, r16	; 0x800098 <__flp>
 afe:	10 93 99 00 	sts	0x0099, r17	; 0x800099 <__flp+0x1>
 b02:	22 c0       	rjmp	.+68     	; 0xb48 <malloc+0x98>
 b04:	21 15       	cp	r18, r1
 b06:	31 05       	cpc	r19, r1
 b08:	19 f0       	breq	.+6      	; 0xb10 <malloc+0x60>
 b0a:	42 17       	cp	r20, r18
 b0c:	53 07       	cpc	r21, r19
 b0e:	18 f4       	brcc	.+6      	; 0xb16 <malloc+0x66>
 b10:	9a 01       	movw	r18, r20
 b12:	bd 01       	movw	r22, r26
 b14:	ef 01       	movw	r28, r30
 b16:	df 01       	movw	r26, r30
 b18:	f8 01       	movw	r30, r16
 b1a:	db cf       	rjmp	.-74     	; 0xad2 <malloc+0x22>
 b1c:	21 15       	cp	r18, r1
 b1e:	31 05       	cpc	r19, r1
 b20:	f9 f0       	breq	.+62     	; 0xb60 <malloc+0xb0>
 b22:	28 1b       	sub	r18, r24
 b24:	39 0b       	sbc	r19, r25
 b26:	24 30       	cpi	r18, 0x04	; 4
 b28:	31 05       	cpc	r19, r1
 b2a:	80 f4       	brcc	.+32     	; 0xb4c <malloc+0x9c>
 b2c:	8a 81       	ldd	r24, Y+2	; 0x02
 b2e:	9b 81       	ldd	r25, Y+3	; 0x03
 b30:	61 15       	cp	r22, r1
 b32:	71 05       	cpc	r23, r1
 b34:	21 f0       	breq	.+8      	; 0xb3e <malloc+0x8e>
 b36:	fb 01       	movw	r30, r22
 b38:	93 83       	std	Z+3, r25	; 0x03
 b3a:	82 83       	std	Z+2, r24	; 0x02
 b3c:	04 c0       	rjmp	.+8      	; 0xb46 <malloc+0x96>
 b3e:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__flp+0x1>
 b42:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__flp>
 b46:	fe 01       	movw	r30, r28
 b48:	32 96       	adiw	r30, 0x02	; 2
 b4a:	44 c0       	rjmp	.+136    	; 0xbd4 <malloc+0x124>
 b4c:	fe 01       	movw	r30, r28
 b4e:	e2 0f       	add	r30, r18
 b50:	f3 1f       	adc	r31, r19
 b52:	81 93       	st	Z+, r24
 b54:	91 93       	st	Z+, r25
 b56:	22 50       	subi	r18, 0x02	; 2
 b58:	31 09       	sbc	r19, r1
 b5a:	39 83       	std	Y+1, r19	; 0x01
 b5c:	28 83       	st	Y, r18
 b5e:	3a c0       	rjmp	.+116    	; 0xbd4 <malloc+0x124>
 b60:	20 91 96 00 	lds	r18, 0x0096	; 0x800096 <__brkval>
 b64:	30 91 97 00 	lds	r19, 0x0097	; 0x800097 <__brkval+0x1>
 b68:	23 2b       	or	r18, r19
 b6a:	41 f4       	brne	.+16     	; 0xb7c <malloc+0xcc>
 b6c:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <__malloc_heap_start>
 b70:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <__malloc_heap_start+0x1>
 b74:	30 93 97 00 	sts	0x0097, r19	; 0x800097 <__brkval+0x1>
 b78:	20 93 96 00 	sts	0x0096, r18	; 0x800096 <__brkval>
 b7c:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 b80:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 b84:	21 15       	cp	r18, r1
 b86:	31 05       	cpc	r19, r1
 b88:	41 f4       	brne	.+16     	; 0xb9a <malloc+0xea>
 b8a:	2d b7       	in	r18, 0x3d	; 61
 b8c:	3e b7       	in	r19, 0x3e	; 62
 b8e:	40 91 64 00 	lds	r20, 0x0064	; 0x800064 <__malloc_margin>
 b92:	50 91 65 00 	lds	r21, 0x0065	; 0x800065 <__malloc_margin+0x1>
 b96:	24 1b       	sub	r18, r20
 b98:	35 0b       	sbc	r19, r21
 b9a:	e0 91 96 00 	lds	r30, 0x0096	; 0x800096 <__brkval>
 b9e:	f0 91 97 00 	lds	r31, 0x0097	; 0x800097 <__brkval+0x1>
 ba2:	e2 17       	cp	r30, r18
 ba4:	f3 07       	cpc	r31, r19
 ba6:	a0 f4       	brcc	.+40     	; 0xbd0 <malloc+0x120>
 ba8:	2e 1b       	sub	r18, r30
 baa:	3f 0b       	sbc	r19, r31
 bac:	28 17       	cp	r18, r24
 bae:	39 07       	cpc	r19, r25
 bb0:	78 f0       	brcs	.+30     	; 0xbd0 <malloc+0x120>
 bb2:	ac 01       	movw	r20, r24
 bb4:	4e 5f       	subi	r20, 0xFE	; 254
 bb6:	5f 4f       	sbci	r21, 0xFF	; 255
 bb8:	24 17       	cp	r18, r20
 bba:	35 07       	cpc	r19, r21
 bbc:	48 f0       	brcs	.+18     	; 0xbd0 <malloc+0x120>
 bbe:	4e 0f       	add	r20, r30
 bc0:	5f 1f       	adc	r21, r31
 bc2:	50 93 97 00 	sts	0x0097, r21	; 0x800097 <__brkval+0x1>
 bc6:	40 93 96 00 	sts	0x0096, r20	; 0x800096 <__brkval>
 bca:	81 93       	st	Z+, r24
 bcc:	91 93       	st	Z+, r25
 bce:	02 c0       	rjmp	.+4      	; 0xbd4 <malloc+0x124>
 bd0:	e0 e0       	ldi	r30, 0x00	; 0
 bd2:	f0 e0       	ldi	r31, 0x00	; 0
 bd4:	cf 01       	movw	r24, r30
 bd6:	df 91       	pop	r29
 bd8:	cf 91       	pop	r28
 bda:	1f 91       	pop	r17
 bdc:	0f 91       	pop	r16
 bde:	08 95       	ret

00000be0 <free>:
 be0:	cf 93       	push	r28
 be2:	df 93       	push	r29
 be4:	00 97       	sbiw	r24, 0x00	; 0
 be6:	09 f4       	brne	.+2      	; 0xbea <free+0xa>
 be8:	81 c0       	rjmp	.+258    	; 0xcec <free+0x10c>
 bea:	fc 01       	movw	r30, r24
 bec:	32 97       	sbiw	r30, 0x02	; 2
 bee:	13 82       	std	Z+3, r1	; 0x03
 bf0:	12 82       	std	Z+2, r1	; 0x02
 bf2:	a0 91 98 00 	lds	r26, 0x0098	; 0x800098 <__flp>
 bf6:	b0 91 99 00 	lds	r27, 0x0099	; 0x800099 <__flp+0x1>
 bfa:	10 97       	sbiw	r26, 0x00	; 0
 bfc:	81 f4       	brne	.+32     	; 0xc1e <free+0x3e>
 bfe:	20 81       	ld	r18, Z
 c00:	31 81       	ldd	r19, Z+1	; 0x01
 c02:	82 0f       	add	r24, r18
 c04:	93 1f       	adc	r25, r19
 c06:	20 91 96 00 	lds	r18, 0x0096	; 0x800096 <__brkval>
 c0a:	30 91 97 00 	lds	r19, 0x0097	; 0x800097 <__brkval+0x1>
 c0e:	28 17       	cp	r18, r24
 c10:	39 07       	cpc	r19, r25
 c12:	51 f5       	brne	.+84     	; 0xc68 <free+0x88>
 c14:	f0 93 97 00 	sts	0x0097, r31	; 0x800097 <__brkval+0x1>
 c18:	e0 93 96 00 	sts	0x0096, r30	; 0x800096 <__brkval>
 c1c:	67 c0       	rjmp	.+206    	; 0xcec <free+0x10c>
 c1e:	ed 01       	movw	r28, r26
 c20:	20 e0       	ldi	r18, 0x00	; 0
 c22:	30 e0       	ldi	r19, 0x00	; 0
 c24:	ce 17       	cp	r28, r30
 c26:	df 07       	cpc	r29, r31
 c28:	40 f4       	brcc	.+16     	; 0xc3a <free+0x5a>
 c2a:	4a 81       	ldd	r20, Y+2	; 0x02
 c2c:	5b 81       	ldd	r21, Y+3	; 0x03
 c2e:	9e 01       	movw	r18, r28
 c30:	41 15       	cp	r20, r1
 c32:	51 05       	cpc	r21, r1
 c34:	f1 f0       	breq	.+60     	; 0xc72 <free+0x92>
 c36:	ea 01       	movw	r28, r20
 c38:	f5 cf       	rjmp	.-22     	; 0xc24 <free+0x44>
 c3a:	d3 83       	std	Z+3, r29	; 0x03
 c3c:	c2 83       	std	Z+2, r28	; 0x02
 c3e:	40 81       	ld	r20, Z
 c40:	51 81       	ldd	r21, Z+1	; 0x01
 c42:	84 0f       	add	r24, r20
 c44:	95 1f       	adc	r25, r21
 c46:	c8 17       	cp	r28, r24
 c48:	d9 07       	cpc	r29, r25
 c4a:	59 f4       	brne	.+22     	; 0xc62 <free+0x82>
 c4c:	88 81       	ld	r24, Y
 c4e:	99 81       	ldd	r25, Y+1	; 0x01
 c50:	84 0f       	add	r24, r20
 c52:	95 1f       	adc	r25, r21
 c54:	02 96       	adiw	r24, 0x02	; 2
 c56:	91 83       	std	Z+1, r25	; 0x01
 c58:	80 83       	st	Z, r24
 c5a:	8a 81       	ldd	r24, Y+2	; 0x02
 c5c:	9b 81       	ldd	r25, Y+3	; 0x03
 c5e:	93 83       	std	Z+3, r25	; 0x03
 c60:	82 83       	std	Z+2, r24	; 0x02
 c62:	21 15       	cp	r18, r1
 c64:	31 05       	cpc	r19, r1
 c66:	29 f4       	brne	.+10     	; 0xc72 <free+0x92>
 c68:	f0 93 99 00 	sts	0x0099, r31	; 0x800099 <__flp+0x1>
 c6c:	e0 93 98 00 	sts	0x0098, r30	; 0x800098 <__flp>
 c70:	3d c0       	rjmp	.+122    	; 0xcec <free+0x10c>
 c72:	e9 01       	movw	r28, r18
 c74:	fb 83       	std	Y+3, r31	; 0x03
 c76:	ea 83       	std	Y+2, r30	; 0x02
 c78:	49 91       	ld	r20, Y+
 c7a:	59 91       	ld	r21, Y+
 c7c:	c4 0f       	add	r28, r20
 c7e:	d5 1f       	adc	r29, r21
 c80:	ec 17       	cp	r30, r28
 c82:	fd 07       	cpc	r31, r29
 c84:	61 f4       	brne	.+24     	; 0xc9e <free+0xbe>
 c86:	80 81       	ld	r24, Z
 c88:	91 81       	ldd	r25, Z+1	; 0x01
 c8a:	84 0f       	add	r24, r20
 c8c:	95 1f       	adc	r25, r21
 c8e:	02 96       	adiw	r24, 0x02	; 2
 c90:	e9 01       	movw	r28, r18
 c92:	99 83       	std	Y+1, r25	; 0x01
 c94:	88 83       	st	Y, r24
 c96:	82 81       	ldd	r24, Z+2	; 0x02
 c98:	93 81       	ldd	r25, Z+3	; 0x03
 c9a:	9b 83       	std	Y+3, r25	; 0x03
 c9c:	8a 83       	std	Y+2, r24	; 0x02
 c9e:	e0 e0       	ldi	r30, 0x00	; 0
 ca0:	f0 e0       	ldi	r31, 0x00	; 0
 ca2:	12 96       	adiw	r26, 0x02	; 2
 ca4:	8d 91       	ld	r24, X+
 ca6:	9c 91       	ld	r25, X
 ca8:	13 97       	sbiw	r26, 0x03	; 3
 caa:	00 97       	sbiw	r24, 0x00	; 0
 cac:	19 f0       	breq	.+6      	; 0xcb4 <free+0xd4>
 cae:	fd 01       	movw	r30, r26
 cb0:	dc 01       	movw	r26, r24
 cb2:	f7 cf       	rjmp	.-18     	; 0xca2 <free+0xc2>
 cb4:	8d 91       	ld	r24, X+
 cb6:	9c 91       	ld	r25, X
 cb8:	11 97       	sbiw	r26, 0x01	; 1
 cba:	9d 01       	movw	r18, r26
 cbc:	2e 5f       	subi	r18, 0xFE	; 254
 cbe:	3f 4f       	sbci	r19, 0xFF	; 255
 cc0:	82 0f       	add	r24, r18
 cc2:	93 1f       	adc	r25, r19
 cc4:	20 91 96 00 	lds	r18, 0x0096	; 0x800096 <__brkval>
 cc8:	30 91 97 00 	lds	r19, 0x0097	; 0x800097 <__brkval+0x1>
 ccc:	28 17       	cp	r18, r24
 cce:	39 07       	cpc	r19, r25
 cd0:	69 f4       	brne	.+26     	; 0xcec <free+0x10c>
 cd2:	30 97       	sbiw	r30, 0x00	; 0
 cd4:	29 f4       	brne	.+10     	; 0xce0 <free+0x100>
 cd6:	10 92 99 00 	sts	0x0099, r1	; 0x800099 <__flp+0x1>
 cda:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__flp>
 cde:	02 c0       	rjmp	.+4      	; 0xce4 <free+0x104>
 ce0:	13 82       	std	Z+3, r1	; 0x03
 ce2:	12 82       	std	Z+2, r1	; 0x02
 ce4:	b0 93 97 00 	sts	0x0097, r27	; 0x800097 <__brkval+0x1>
 ce8:	a0 93 96 00 	sts	0x0096, r26	; 0x800096 <__brkval>
 cec:	df 91       	pop	r29
 cee:	cf 91       	pop	r28
 cf0:	08 95       	ret

00000cf2 <realloc>:
 cf2:	a0 e0       	ldi	r26, 0x00	; 0
 cf4:	b0 e0       	ldi	r27, 0x00	; 0
 cf6:	ee e7       	ldi	r30, 0x7E	; 126
 cf8:	f6 e0       	ldi	r31, 0x06	; 6
 cfa:	c7 c0       	rjmp	.+398    	; 0xe8a <__prologue_saves__+0x8>
 cfc:	ec 01       	movw	r28, r24
 cfe:	00 97       	sbiw	r24, 0x00	; 0
 d00:	19 f4       	brne	.+6      	; 0xd08 <realloc+0x16>
 d02:	cb 01       	movw	r24, r22
 d04:	d5 de       	rcall	.-598    	; 0xab0 <malloc>
 d06:	b0 c0       	rjmp	.+352    	; 0xe68 <realloc+0x176>
 d08:	fc 01       	movw	r30, r24
 d0a:	e6 0f       	add	r30, r22
 d0c:	f7 1f       	adc	r31, r23
 d0e:	9c 01       	movw	r18, r24
 d10:	22 50       	subi	r18, 0x02	; 2
 d12:	31 09       	sbc	r19, r1
 d14:	e2 17       	cp	r30, r18
 d16:	f3 07       	cpc	r31, r19
 d18:	08 f4       	brcc	.+2      	; 0xd1c <realloc+0x2a>
 d1a:	a4 c0       	rjmp	.+328    	; 0xe64 <realloc+0x172>
 d1c:	d9 01       	movw	r26, r18
 d1e:	0d 91       	ld	r16, X+
 d20:	1c 91       	ld	r17, X
 d22:	11 97       	sbiw	r26, 0x01	; 1
 d24:	06 17       	cp	r16, r22
 d26:	17 07       	cpc	r17, r23
 d28:	a8 f0       	brcs	.+42     	; 0xd54 <realloc+0x62>
 d2a:	05 30       	cpi	r16, 0x05	; 5
 d2c:	11 05       	cpc	r17, r1
 d2e:	08 f4       	brcc	.+2      	; 0xd32 <realloc+0x40>
 d30:	97 c0       	rjmp	.+302    	; 0xe60 <realloc+0x16e>
 d32:	c8 01       	movw	r24, r16
 d34:	04 97       	sbiw	r24, 0x04	; 4
 d36:	86 17       	cp	r24, r22
 d38:	97 07       	cpc	r25, r23
 d3a:	08 f4       	brcc	.+2      	; 0xd3e <realloc+0x4c>
 d3c:	91 c0       	rjmp	.+290    	; 0xe60 <realloc+0x16e>
 d3e:	02 50       	subi	r16, 0x02	; 2
 d40:	11 09       	sbc	r17, r1
 d42:	06 1b       	sub	r16, r22
 d44:	17 0b       	sbc	r17, r23
 d46:	01 93       	st	Z+, r16
 d48:	11 93       	st	Z+, r17
 d4a:	6d 93       	st	X+, r22
 d4c:	7c 93       	st	X, r23
 d4e:	cf 01       	movw	r24, r30
 d50:	47 df       	rcall	.-370    	; 0xbe0 <free>
 d52:	86 c0       	rjmp	.+268    	; 0xe60 <realloc+0x16e>
 d54:	5b 01       	movw	r10, r22
 d56:	a0 1a       	sub	r10, r16
 d58:	b1 0a       	sbc	r11, r17
 d5a:	4c 01       	movw	r8, r24
 d5c:	80 0e       	add	r8, r16
 d5e:	91 1e       	adc	r9, r17
 d60:	a0 91 98 00 	lds	r26, 0x0098	; 0x800098 <__flp>
 d64:	b0 91 99 00 	lds	r27, 0x0099	; 0x800099 <__flp+0x1>
 d68:	61 2c       	mov	r6, r1
 d6a:	71 2c       	mov	r7, r1
 d6c:	e1 2c       	mov	r14, r1
 d6e:	f1 2c       	mov	r15, r1
 d70:	10 97       	sbiw	r26, 0x00	; 0
 d72:	09 f4       	brne	.+2      	; 0xd76 <realloc+0x84>
 d74:	46 c0       	rjmp	.+140    	; 0xe02 <realloc+0x110>
 d76:	8d 91       	ld	r24, X+
 d78:	9c 91       	ld	r25, X
 d7a:	11 97       	sbiw	r26, 0x01	; 1
 d7c:	a8 15       	cp	r26, r8
 d7e:	b9 05       	cpc	r27, r9
 d80:	b1 f5       	brne	.+108    	; 0xdee <realloc+0xfc>
 d82:	6c 01       	movw	r12, r24
 d84:	42 e0       	ldi	r20, 0x02	; 2
 d86:	c4 0e       	add	r12, r20
 d88:	d1 1c       	adc	r13, r1
 d8a:	ca 14       	cp	r12, r10
 d8c:	db 04       	cpc	r13, r11
 d8e:	78 f1       	brcs	.+94     	; 0xdee <realloc+0xfc>
 d90:	4c 01       	movw	r8, r24
 d92:	8a 18       	sub	r8, r10
 d94:	9b 08       	sbc	r9, r11
 d96:	64 01       	movw	r12, r8
 d98:	42 e0       	ldi	r20, 0x02	; 2
 d9a:	c4 0e       	add	r12, r20
 d9c:	d1 1c       	adc	r13, r1
 d9e:	12 96       	adiw	r26, 0x02	; 2
 da0:	bc 90       	ld	r11, X
 da2:	12 97       	sbiw	r26, 0x02	; 2
 da4:	13 96       	adiw	r26, 0x03	; 3
 da6:	ac 91       	ld	r26, X
 da8:	b5 e0       	ldi	r27, 0x05	; 5
 daa:	cb 16       	cp	r12, r27
 dac:	d1 04       	cpc	r13, r1
 dae:	40 f0       	brcs	.+16     	; 0xdc0 <realloc+0xce>
 db0:	b2 82       	std	Z+2, r11	; 0x02
 db2:	a3 83       	std	Z+3, r26	; 0x03
 db4:	91 82       	std	Z+1, r9	; 0x01
 db6:	80 82       	st	Z, r8
 db8:	d9 01       	movw	r26, r18
 dba:	6d 93       	st	X+, r22
 dbc:	7c 93       	st	X, r23
 dbe:	09 c0       	rjmp	.+18     	; 0xdd2 <realloc+0xe0>
 dc0:	0e 5f       	subi	r16, 0xFE	; 254
 dc2:	1f 4f       	sbci	r17, 0xFF	; 255
 dc4:	80 0f       	add	r24, r16
 dc6:	91 1f       	adc	r25, r17
 dc8:	f9 01       	movw	r30, r18
 dca:	91 83       	std	Z+1, r25	; 0x01
 dcc:	80 83       	st	Z, r24
 dce:	eb 2d       	mov	r30, r11
 dd0:	fa 2f       	mov	r31, r26
 dd2:	e1 14       	cp	r14, r1
 dd4:	f1 04       	cpc	r15, r1
 dd6:	31 f0       	breq	.+12     	; 0xde4 <realloc+0xf2>
 dd8:	d7 01       	movw	r26, r14
 dda:	13 96       	adiw	r26, 0x03	; 3
 ddc:	fc 93       	st	X, r31
 dde:	ee 93       	st	-X, r30
 de0:	12 97       	sbiw	r26, 0x02	; 2
 de2:	3e c0       	rjmp	.+124    	; 0xe60 <realloc+0x16e>
 de4:	f0 93 99 00 	sts	0x0099, r31	; 0x800099 <__flp+0x1>
 de8:	e0 93 98 00 	sts	0x0098, r30	; 0x800098 <__flp>
 dec:	39 c0       	rjmp	.+114    	; 0xe60 <realloc+0x16e>
 dee:	68 16       	cp	r6, r24
 df0:	79 06       	cpc	r7, r25
 df2:	08 f4       	brcc	.+2      	; 0xdf6 <realloc+0x104>
 df4:	3c 01       	movw	r6, r24
 df6:	7d 01       	movw	r14, r26
 df8:	12 96       	adiw	r26, 0x02	; 2
 dfa:	0d 90       	ld	r0, X+
 dfc:	bc 91       	ld	r27, X
 dfe:	a0 2d       	mov	r26, r0
 e00:	b7 cf       	rjmp	.-146    	; 0xd70 <realloc+0x7e>
 e02:	80 91 96 00 	lds	r24, 0x0096	; 0x800096 <__brkval>
 e06:	90 91 97 00 	lds	r25, 0x0097	; 0x800097 <__brkval+0x1>
 e0a:	88 16       	cp	r8, r24
 e0c:	99 06       	cpc	r9, r25
 e0e:	e1 f4       	brne	.+56     	; 0xe48 <realloc+0x156>
 e10:	66 16       	cp	r6, r22
 e12:	77 06       	cpc	r7, r23
 e14:	c8 f4       	brcc	.+50     	; 0xe48 <realloc+0x156>
 e16:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 e1a:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 e1e:	00 97       	sbiw	r24, 0x00	; 0
 e20:	41 f4       	brne	.+16     	; 0xe32 <realloc+0x140>
 e22:	8d b7       	in	r24, 0x3d	; 61
 e24:	9e b7       	in	r25, 0x3e	; 62
 e26:	40 91 64 00 	lds	r20, 0x0064	; 0x800064 <__malloc_margin>
 e2a:	50 91 65 00 	lds	r21, 0x0065	; 0x800065 <__malloc_margin+0x1>
 e2e:	84 1b       	sub	r24, r20
 e30:	95 0b       	sbc	r25, r21
 e32:	e8 17       	cp	r30, r24
 e34:	f9 07       	cpc	r31, r25
 e36:	b0 f4       	brcc	.+44     	; 0xe64 <realloc+0x172>
 e38:	f0 93 97 00 	sts	0x0097, r31	; 0x800097 <__brkval+0x1>
 e3c:	e0 93 96 00 	sts	0x0096, r30	; 0x800096 <__brkval>
 e40:	f9 01       	movw	r30, r18
 e42:	71 83       	std	Z+1, r23	; 0x01
 e44:	60 83       	st	Z, r22
 e46:	0c c0       	rjmp	.+24     	; 0xe60 <realloc+0x16e>
 e48:	cb 01       	movw	r24, r22
 e4a:	32 de       	rcall	.-924    	; 0xab0 <malloc>
 e4c:	7c 01       	movw	r14, r24
 e4e:	00 97       	sbiw	r24, 0x00	; 0
 e50:	49 f0       	breq	.+18     	; 0xe64 <realloc+0x172>
 e52:	a8 01       	movw	r20, r16
 e54:	be 01       	movw	r22, r28
 e56:	0c d0       	rcall	.+24     	; 0xe70 <memcpy>
 e58:	ce 01       	movw	r24, r28
 e5a:	c2 de       	rcall	.-636    	; 0xbe0 <free>
 e5c:	c7 01       	movw	r24, r14
 e5e:	04 c0       	rjmp	.+8      	; 0xe68 <realloc+0x176>
 e60:	ce 01       	movw	r24, r28
 e62:	02 c0       	rjmp	.+4      	; 0xe68 <realloc+0x176>
 e64:	80 e0       	ldi	r24, 0x00	; 0
 e66:	90 e0       	ldi	r25, 0x00	; 0
 e68:	cd b7       	in	r28, 0x3d	; 61
 e6a:	de b7       	in	r29, 0x3e	; 62
 e6c:	ee e0       	ldi	r30, 0x0E	; 14
 e6e:	29 c0       	rjmp	.+82     	; 0xec2 <__epilogue_restores__+0x8>

00000e70 <memcpy>:
 e70:	fb 01       	movw	r30, r22
 e72:	dc 01       	movw	r26, r24
 e74:	02 c0       	rjmp	.+4      	; 0xe7a <memcpy+0xa>
 e76:	01 90       	ld	r0, Z+
 e78:	0d 92       	st	X+, r0
 e7a:	41 50       	subi	r20, 0x01	; 1
 e7c:	50 40       	sbci	r21, 0x00	; 0
 e7e:	d8 f7       	brcc	.-10     	; 0xe76 <memcpy+0x6>
 e80:	08 95       	ret

00000e82 <__prologue_saves__>:
 e82:	2f 92       	push	r2
 e84:	3f 92       	push	r3
 e86:	4f 92       	push	r4
 e88:	5f 92       	push	r5
 e8a:	6f 92       	push	r6
 e8c:	7f 92       	push	r7
 e8e:	8f 92       	push	r8
 e90:	9f 92       	push	r9
 e92:	af 92       	push	r10
 e94:	bf 92       	push	r11
 e96:	cf 92       	push	r12
 e98:	df 92       	push	r13
 e9a:	ef 92       	push	r14
 e9c:	ff 92       	push	r15
 e9e:	0f 93       	push	r16
 ea0:	1f 93       	push	r17
 ea2:	cf 93       	push	r28
 ea4:	df 93       	push	r29
 ea6:	cd b7       	in	r28, 0x3d	; 61
 ea8:	de b7       	in	r29, 0x3e	; 62
 eaa:	ca 1b       	sub	r28, r26
 eac:	db 0b       	sbc	r29, r27
 eae:	0f b6       	in	r0, 0x3f	; 63
 eb0:	f8 94       	cli
 eb2:	de bf       	out	0x3e, r29	; 62
 eb4:	0f be       	out	0x3f, r0	; 63
 eb6:	cd bf       	out	0x3d, r28	; 61
 eb8:	09 94       	ijmp

00000eba <__epilogue_restores__>:
 eba:	2a 88       	ldd	r2, Y+18	; 0x12
 ebc:	39 88       	ldd	r3, Y+17	; 0x11
 ebe:	48 88       	ldd	r4, Y+16	; 0x10
 ec0:	5f 84       	ldd	r5, Y+15	; 0x0f
 ec2:	6e 84       	ldd	r6, Y+14	; 0x0e
 ec4:	7d 84       	ldd	r7, Y+13	; 0x0d
 ec6:	8c 84       	ldd	r8, Y+12	; 0x0c
 ec8:	9b 84       	ldd	r9, Y+11	; 0x0b
 eca:	aa 84       	ldd	r10, Y+10	; 0x0a
 ecc:	b9 84       	ldd	r11, Y+9	; 0x09
 ece:	c8 84       	ldd	r12, Y+8	; 0x08
 ed0:	df 80       	ldd	r13, Y+7	; 0x07
 ed2:	ee 80       	ldd	r14, Y+6	; 0x06
 ed4:	fd 80       	ldd	r15, Y+5	; 0x05
 ed6:	0c 81       	ldd	r16, Y+4	; 0x04
 ed8:	1b 81       	ldd	r17, Y+3	; 0x03
 eda:	aa 81       	ldd	r26, Y+2	; 0x02
 edc:	b9 81       	ldd	r27, Y+1	; 0x01
 ede:	ce 0f       	add	r28, r30
 ee0:	d1 1d       	adc	r29, r1
 ee2:	0f b6       	in	r0, 0x3f	; 63
 ee4:	f8 94       	cli
 ee6:	de bf       	out	0x3e, r29	; 62
 ee8:	0f be       	out	0x3f, r0	; 63
 eea:	cd bf       	out	0x3d, r28	; 61
 eec:	ed 01       	movw	r28, r26
 eee:	08 95       	ret

00000ef0 <_exit>:
 ef0:	f8 94       	cli

00000ef2 <__stop_program>:
 ef2:	ff cf       	rjmp	.-2      	; 0xef2 <__stop_program>
