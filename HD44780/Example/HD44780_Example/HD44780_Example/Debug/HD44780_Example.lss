
HD44780_Example.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000008d8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001e  00800060  000008d8  0000096c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  0080007e  0080007e  0000098a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000098a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000009bc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000130  00000000  00000000  000009f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002488  00000000  00000000  00000b28  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c0a  00000000  00000000  00002fb0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b0e  00000000  00000000  00003bba  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000354  00000000  00000000  000046c8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000008a0  00000000  00000000  00004a1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000102b  00000000  00000000  000052bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000100  00000000  00000000  000062e7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	e8 ed       	ldi	r30, 0xD8	; 216
  3a:	f8 e0       	ldi	r31, 0x08	; 8
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	ae 37       	cpi	r26, 0x7E	; 126
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
  48:	20 e0       	ldi	r18, 0x00	; 0
  4a:	ae e7       	ldi	r26, 0x7E	; 126
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	a2 38       	cpi	r26, 0x82	; 130
  54:	b2 07       	cpc	r27, r18
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	19 d2       	rcall	.+1074   	; 0x48c <main>
  5a:	3c c4       	rjmp	.+2168   	; 0x8d4 <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <_ZN7HD44780nwEj>:
	if(CursorOverside(slot, line)) return;
	SetCursorPosition(slot, line);	
	
	NormaliseLength(length, slot);
	for(uint8_t i = 0; i < length; i++) SendByte(' ', LCD_Data);
}
  5e:	cf 93       	push	r28
  60:	df 93       	push	r29
  62:	ec 01       	movw	r28, r24
  64:	ce 01       	movw	r24, r28
  66:	15 d3       	rcall	.+1578   	; 0x692 <malloc>
  68:	00 97       	sbiw	r24, 0x00	; 0
  6a:	e1 f3       	breq	.-8      	; 0x64 <_ZN7HD44780nwEj+0x6>
  6c:	df 91       	pop	r29
  6e:	cf 91       	pop	r28
  70:	08 95       	ret

00000072 <_ZN7HD4478012SelectDeviceEv>:
  72:	fc 01       	movw	r30, r24
  74:	84 81       	ldd	r24, Z+4	; 0x04
  76:	95 81       	ldd	r25, Z+5	; 0x05
  78:	ac d2       	rcall	.+1368   	; 0x5d2 <_ZN4Port3SetEv>
  7a:	08 95       	ret

0000007c <_ZN7HD447809LatchDataEv>:
  7c:	fc 01       	movw	r30, r24
  7e:	84 81       	ldd	r24, Z+4	; 0x04
  80:	95 81       	ldd	r25, Z+5	; 0x05
  82:	b9 d2       	rcall	.+1394   	; 0x5f6 <_ZN4Port5ClearEv>
  84:	08 95       	ret

00000086 <_ZN7HD447804WaitEv>:
  86:	ff 92       	push	r15
  88:	0f 93       	push	r16
  8a:	1f 93       	push	r17
  8c:	cf 93       	push	r28
  8e:	df 93       	push	r29
  90:	ec 01       	movw	r28, r24
  92:	f1 2c       	mov	r15, r1
  94:	83 e0       	ldi	r24, 0x03	; 3
  96:	8f 15       	cp	r24, r15
  98:	90 f0       	brcs	.+36     	; 0xbe <_ZN7HD447804WaitEv+0x38>
  9a:	0f 2d       	mov	r16, r15
  9c:	10 e0       	ldi	r17, 0x00	; 0
  9e:	0d 5f       	subi	r16, 0xFD	; 253
  a0:	1f 4f       	sbci	r17, 0xFF	; 255
  a2:	00 0f       	add	r16, r16
  a4:	11 1f       	adc	r17, r17
  a6:	0c 0f       	add	r16, r28
  a8:	1d 1f       	adc	r17, r29
  aa:	f8 01       	movw	r30, r16
  ac:	80 81       	ld	r24, Z
  ae:	91 81       	ldd	r25, Z+1	; 0x01
  b0:	90 d2       	rcall	.+1312   	; 0x5d2 <_ZN4Port3SetEv>
  b2:	f8 01       	movw	r30, r16
  b4:	80 81       	ld	r24, Z
  b6:	91 81       	ldd	r25, Z+1	; 0x01
  b8:	64 d2       	rcall	.+1224   	; 0x582 <_ZN4Port10SetAsInputEv>
  ba:	f3 94       	inc	r15
  bc:	eb cf       	rjmp	.-42     	; 0x94 <_ZN7HD447804WaitEv+0xe>
  be:	8a 81       	ldd	r24, Y+2	; 0x02
  c0:	9b 81       	ldd	r25, Y+3	; 0x03
  c2:	87 d2       	rcall	.+1294   	; 0x5d2 <_ZN4Port3SetEv>
  c4:	88 81       	ld	r24, Y
  c6:	99 81       	ldd	r25, Y+1	; 0x01
  c8:	96 d2       	rcall	.+1324   	; 0x5f6 <_ZN4Port5ClearEv>
  ca:	ce 01       	movw	r24, r28
  cc:	d2 df       	rcall	.-92     	; 0x72 <_ZN7HD4478012SelectDeviceEv>
  ce:	8c 85       	ldd	r24, Y+12	; 0x0c
  d0:	9d 85       	ldd	r25, Y+13	; 0x0d
  d2:	b7 d2       	rcall	.+1390   	; 0x642 <_ZN4Port5IsSetEv>
  d4:	18 2f       	mov	r17, r24
  d6:	ce 01       	movw	r24, r28
  d8:	d1 df       	rcall	.-94     	; 0x7c <_ZN7HD447809LatchDataEv>
  da:	ce 01       	movw	r24, r28
  dc:	ca df       	rcall	.-108    	; 0x72 <_ZN7HD4478012SelectDeviceEv>
  de:	ce 01       	movw	r24, r28
  e0:	cd df       	rcall	.-102    	; 0x7c <_ZN7HD447809LatchDataEv>
  e2:	11 11       	cpse	r17, r1
  e4:	f2 cf       	rjmp	.-28     	; 0xca <_ZN7HD447804WaitEv+0x44>
  e6:	f1 2c       	mov	r15, r1
  e8:	f3 e0       	ldi	r31, 0x03	; 3
  ea:	ff 15       	cp	r31, r15
  ec:	90 f0       	brcs	.+36     	; 0x112 <_ZN7HD447804WaitEv+0x8c>
  ee:	0f 2d       	mov	r16, r15
  f0:	10 e0       	ldi	r17, 0x00	; 0
  f2:	0d 5f       	subi	r16, 0xFD	; 253
  f4:	1f 4f       	sbci	r17, 0xFF	; 255
  f6:	00 0f       	add	r16, r16
  f8:	11 1f       	adc	r17, r17
  fa:	0c 0f       	add	r16, r28
  fc:	1d 1f       	adc	r17, r29
  fe:	f8 01       	movw	r30, r16
 100:	80 81       	ld	r24, Z
 102:	91 81       	ldd	r25, Z+1	; 0x01
 104:	53 d2       	rcall	.+1190   	; 0x5ac <_ZN4Port11SetAsOutputEv>
 106:	f8 01       	movw	r30, r16
 108:	80 81       	ld	r24, Z
 10a:	91 81       	ldd	r25, Z+1	; 0x01
 10c:	74 d2       	rcall	.+1256   	; 0x5f6 <_ZN4Port5ClearEv>
 10e:	f3 94       	inc	r15
 110:	eb cf       	rjmp	.-42     	; 0xe8 <_ZN7HD447804WaitEv+0x62>
 112:	8a 81       	ldd	r24, Y+2	; 0x02
 114:	9b 81       	ldd	r25, Y+3	; 0x03
 116:	6f d2       	rcall	.+1246   	; 0x5f6 <_ZN4Port5ClearEv>
 118:	df 91       	pop	r29
 11a:	cf 91       	pop	r28
 11c:	1f 91       	pop	r17
 11e:	0f 91       	pop	r16
 120:	ff 90       	pop	r15
 122:	08 95       	ret

00000124 <_ZN7HD447808SendByteEc16HD44780_DataType>:
 124:	ef 92       	push	r14
 126:	ff 92       	push	r15
 128:	0f 93       	push	r16
 12a:	1f 93       	push	r17
 12c:	cf 93       	push	r28
 12e:	df 93       	push	r29
 130:	ec 01       	movw	r28, r24
 132:	e6 2e       	mov	r14, r22
 134:	14 2f       	mov	r17, r20
 136:	a7 df       	rcall	.-178    	; 0x86 <_ZN7HD447804WaitEv>
 138:	11 30       	cpi	r17, 0x01	; 1
 13a:	21 f4       	brne	.+8      	; 0x144 <_ZN7HD447808SendByteEc16HD44780_DataType+0x20>
 13c:	88 81       	ld	r24, Y
 13e:	99 81       	ldd	r25, Y+1	; 0x01
 140:	5a d2       	rcall	.+1204   	; 0x5f6 <_ZN4Port5ClearEv>
 142:	05 c0       	rjmp	.+10     	; 0x14e <_ZN7HD447808SendByteEc16HD44780_DataType+0x2a>
 144:	11 11       	cpse	r17, r1
 146:	03 c0       	rjmp	.+6      	; 0x14e <_ZN7HD447808SendByteEc16HD44780_DataType+0x2a>
 148:	88 81       	ld	r24, Y
 14a:	99 81       	ldd	r25, Y+1	; 0x01
 14c:	42 d2       	rcall	.+1156   	; 0x5d2 <_ZN4Port3SetEv>
 14e:	0e 2d       	mov	r16, r14
 150:	10 e0       	ldi	r17, 0x00	; 0
 152:	15 95       	asr	r17
 154:	07 95       	ror	r16
 156:	15 95       	asr	r17
 158:	07 95       	ror	r16
 15a:	15 95       	asr	r17
 15c:	07 95       	ror	r16
 15e:	15 95       	asr	r17
 160:	07 95       	ror	r16
 162:	f1 2c       	mov	r15, r1
 164:	81 e0       	ldi	r24, 0x01	; 1
 166:	8f 15       	cp	r24, r15
 168:	58 f1       	brcs	.+86     	; 0x1c0 <_ZN7HD447808SendByteEc16HD44780_DataType+0x9c>
 16a:	ce 01       	movw	r24, r28
 16c:	82 df       	rcall	.-252    	; 0x72 <_ZN7HD4478012SelectDeviceEv>
 16e:	10 e0       	ldi	r17, 0x00	; 0
 170:	14 30       	cpi	r17, 0x04	; 4
 172:	08 f5       	brcc	.+66     	; 0x1b6 <_ZN7HD447808SendByteEc16HD44780_DataType+0x92>
 174:	81 2f       	mov	r24, r17
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	20 2f       	mov	r18, r16
 17a:	30 e0       	ldi	r19, 0x00	; 0
 17c:	01 2e       	mov	r0, r17
 17e:	02 c0       	rjmp	.+4      	; 0x184 <_ZN7HD447808SendByteEc16HD44780_DataType+0x60>
 180:	35 95       	asr	r19
 182:	27 95       	ror	r18
 184:	0a 94       	dec	r0
 186:	e2 f7       	brpl	.-8      	; 0x180 <_ZN7HD447808SendByteEc16HD44780_DataType+0x5c>
 188:	20 ff       	sbrs	r18, 0
 18a:	0a c0       	rjmp	.+20     	; 0x1a0 <_ZN7HD447808SendByteEc16HD44780_DataType+0x7c>
 18c:	fc 01       	movw	r30, r24
 18e:	33 96       	adiw	r30, 0x03	; 3
 190:	ee 0f       	add	r30, r30
 192:	ff 1f       	adc	r31, r31
 194:	ec 0f       	add	r30, r28
 196:	fd 1f       	adc	r31, r29
 198:	80 81       	ld	r24, Z
 19a:	91 81       	ldd	r25, Z+1	; 0x01
 19c:	1a d2       	rcall	.+1076   	; 0x5d2 <_ZN4Port3SetEv>
 19e:	09 c0       	rjmp	.+18     	; 0x1b2 <_ZN7HD447808SendByteEc16HD44780_DataType+0x8e>
 1a0:	fc 01       	movw	r30, r24
 1a2:	33 96       	adiw	r30, 0x03	; 3
 1a4:	ee 0f       	add	r30, r30
 1a6:	ff 1f       	adc	r31, r31
 1a8:	ec 0f       	add	r30, r28
 1aa:	fd 1f       	adc	r31, r29
 1ac:	80 81       	ld	r24, Z
 1ae:	91 81       	ldd	r25, Z+1	; 0x01
 1b0:	22 d2       	rcall	.+1092   	; 0x5f6 <_ZN4Port5ClearEv>
 1b2:	1f 5f       	subi	r17, 0xFF	; 255
 1b4:	dd cf       	rjmp	.-70     	; 0x170 <_ZN7HD447808SendByteEc16HD44780_DataType+0x4c>
 1b6:	ce 01       	movw	r24, r28
 1b8:	61 df       	rcall	.-318    	; 0x7c <_ZN7HD447809LatchDataEv>
 1ba:	f3 94       	inc	r15
 1bc:	0e 2d       	mov	r16, r14
 1be:	d2 cf       	rjmp	.-92     	; 0x164 <_ZN7HD447808SendByteEc16HD44780_DataType+0x40>
 1c0:	df 91       	pop	r29
 1c2:	cf 91       	pop	r28
 1c4:	1f 91       	pop	r17
 1c6:	0f 91       	pop	r16
 1c8:	ff 90       	pop	r15
 1ca:	ef 90       	pop	r14
 1cc:	08 95       	ret

000001ce <_ZN7HD447802OnEv>:
 1ce:	41 e0       	ldi	r20, 0x01	; 1
 1d0:	6c e0       	ldi	r22, 0x0C	; 12
 1d2:	a8 df       	rcall	.-176    	; 0x124 <_ZN7HD447808SendByteEc16HD44780_DataType>
 1d4:	08 95       	ret

000001d6 <_ZN7HD447803OffEv>:
 1d6:	41 e0       	ldi	r20, 0x01	; 1
 1d8:	68 e0       	ldi	r22, 0x08	; 8
 1da:	a4 df       	rcall	.-184    	; 0x124 <_ZN7HD447808SendByteEc16HD44780_DataType>
 1dc:	08 95       	ret

000001de <_ZN7HD447805ClearEv>:
 1de:	41 e0       	ldi	r20, 0x01	; 1
 1e0:	61 e0       	ldi	r22, 0x01	; 1
 1e2:	a0 df       	rcall	.-192    	; 0x124 <_ZN7HD447808SendByteEc16HD44780_DataType>
 1e4:	08 95       	ret

000001e6 <_ZN7HD44780C1EP4PortS1_S1_S1_S1_S1_S1_12HD44780_Type>:
 1e6:	2f 92       	push	r2
 1e8:	3f 92       	push	r3
 1ea:	4f 92       	push	r4
 1ec:	5f 92       	push	r5
 1ee:	6f 92       	push	r6
 1f0:	7f 92       	push	r7
 1f2:	8f 92       	push	r8
 1f4:	9f 92       	push	r9
 1f6:	af 92       	push	r10
 1f8:	bf 92       	push	r11
 1fa:	cf 92       	push	r12
 1fc:	df 92       	push	r13
 1fe:	ef 92       	push	r14
 200:	ff 92       	push	r15
 202:	0f 93       	push	r16
 204:	1f 93       	push	r17
 206:	cf 93       	push	r28
 208:	df 93       	push	r29
 20a:	cd b7       	in	r28, 0x3d	; 61
 20c:	de b7       	in	r29, 0x3e	; 62
 20e:	3c 01       	movw	r6, r24
 210:	fb 01       	movw	r30, r22
 212:	dc 01       	movw	r26, r24
 214:	15 96       	adiw	r26, 0x05	; 5
 216:	3c 93       	st	X, r19
 218:	2e 93       	st	-X, r18
 21a:	14 97       	sbiw	r26, 0x04	; 4
 21c:	18 01       	movw	r2, r16
 21e:	24 01       	movw	r4, r8
 220:	56 94       	lsr	r5
 222:	47 94       	ror	r4
 224:	56 94       	lsr	r5
 226:	47 94       	ror	r4
 228:	92 01       	movw	r18, r4
 22a:	ab e7       	ldi	r26, 0x7B	; 123
 22c:	b4 e1       	ldi	r27, 0x14	; 20
 22e:	25 d2       	rcall	.+1098   	; 0x67a <__umulhisi3>
 230:	8c 01       	movw	r16, r24
 232:	16 95       	lsr	r17
 234:	07 95       	ror	r16
 236:	d3 01       	movw	r26, r6
 238:	1e 96       	adiw	r26, 0x0e	; 14
 23a:	0c 93       	st	X, r16
 23c:	24 e6       	ldi	r18, 0x64	; 100
 23e:	20 9f       	mul	r18, r16
 240:	c0 01       	movw	r24, r0
 242:	21 9f       	mul	r18, r17
 244:	90 0d       	add	r25, r0
 246:	11 24       	eor	r1, r1
 248:	88 1a       	sub	r8, r24
 24a:	99 0a       	sbc	r9, r25
 24c:	d3 01       	movw	r26, r6
 24e:	1f 96       	adiw	r26, 0x0f	; 15
 250:	8c 92       	st	X, r8
 252:	1f 97       	sbiw	r26, 0x0f	; 15
 254:	11 96       	adiw	r26, 0x01	; 1
 256:	fc 93       	st	X, r31
 258:	ee 93       	st	-X, r30
 25a:	13 96       	adiw	r26, 0x03	; 3
 25c:	5c 93       	st	X, r21
 25e:	4e 93       	st	-X, r20
 260:	12 97       	sbiw	r26, 0x02	; 2
 262:	17 96       	adiw	r26, 0x07	; 7
 264:	3c 92       	st	X, r3
 266:	2e 92       	st	-X, r2
 268:	16 97       	sbiw	r26, 0x06	; 6
 26a:	19 96       	adiw	r26, 0x09	; 9
 26c:	fc 92       	st	X, r15
 26e:	ee 92       	st	-X, r14
 270:	18 97       	sbiw	r26, 0x08	; 8
 272:	1b 96       	adiw	r26, 0x0b	; 11
 274:	dc 92       	st	X, r13
 276:	ce 92       	st	-X, r12
 278:	1a 97       	sbiw	r26, 0x0a	; 10
 27a:	1d 96       	adiw	r26, 0x0d	; 13
 27c:	bc 92       	st	X, r11
 27e:	ae 92       	st	-X, r10
 280:	1c 97       	sbiw	r26, 0x0c	; 12
 282:	cf 01       	movw	r24, r30
 284:	93 d1       	rcall	.+806    	; 0x5ac <_ZN4Port11SetAsOutputEv>
 286:	f3 01       	movw	r30, r6
 288:	82 81       	ldd	r24, Z+2	; 0x02
 28a:	93 81       	ldd	r25, Z+3	; 0x03
 28c:	8f d1       	rcall	.+798    	; 0x5ac <_ZN4Port11SetAsOutputEv>
 28e:	d3 01       	movw	r26, r6
 290:	14 96       	adiw	r26, 0x04	; 4
 292:	8d 91       	ld	r24, X+
 294:	9c 91       	ld	r25, X
 296:	15 97       	sbiw	r26, 0x05	; 5
 298:	89 d1       	rcall	.+786    	; 0x5ac <_ZN4Port11SetAsOutputEv>
 29a:	f3 01       	movw	r30, r6
 29c:	82 81       	ldd	r24, Z+2	; 0x02
 29e:	93 81       	ldd	r25, Z+3	; 0x03
 2a0:	aa d1       	rcall	.+852    	; 0x5f6 <_ZN4Port5ClearEv>
 2a2:	f1 2c       	mov	r15, r1
 2a4:	f3 e0       	ldi	r31, 0x03	; 3
 2a6:	ff 15       	cp	r31, r15
 2a8:	90 f0       	brcs	.+36     	; 0x2ce <__EEPROM_REGION_LENGTH__+0xce>
 2aa:	0f 2d       	mov	r16, r15
 2ac:	10 e0       	ldi	r17, 0x00	; 0
 2ae:	0d 5f       	subi	r16, 0xFD	; 253
 2b0:	1f 4f       	sbci	r17, 0xFF	; 255
 2b2:	00 0f       	add	r16, r16
 2b4:	11 1f       	adc	r17, r17
 2b6:	06 0d       	add	r16, r6
 2b8:	17 1d       	adc	r17, r7
 2ba:	d8 01       	movw	r26, r16
 2bc:	8d 91       	ld	r24, X+
 2be:	9c 91       	ld	r25, X
 2c0:	75 d1       	rcall	.+746    	; 0x5ac <_ZN4Port11SetAsOutputEv>
 2c2:	f8 01       	movw	r30, r16
 2c4:	80 81       	ld	r24, Z
 2c6:	91 81       	ldd	r25, Z+1	; 0x01
 2c8:	96 d1       	rcall	.+812    	; 0x5f6 <_ZN4Port5ClearEv>
 2ca:	f3 94       	inc	r15
 2cc:	eb cf       	rjmp	.-42     	; 0x2a4 <__EEPROM_REGION_LENGTH__+0xa4>
 2ce:	d3 01       	movw	r26, r6
 2d0:	16 96       	adiw	r26, 0x06	; 6
 2d2:	8d 91       	ld	r24, X+
 2d4:	9c 91       	ld	r25, X
 2d6:	17 97       	sbiw	r26, 0x07	; 7
 2d8:	7c d1       	rcall	.+760    	; 0x5d2 <_ZN4Port3SetEv>
 2da:	f3 01       	movw	r30, r6
 2dc:	80 85       	ldd	r24, Z+8	; 0x08
 2de:	91 85       	ldd	r25, Z+9	; 0x09
 2e0:	78 d1       	rcall	.+752    	; 0x5d2 <_ZN4Port3SetEv>
 2e2:	10 e0       	ldi	r17, 0x00	; 0
 2e4:	12 30       	cpi	r17, 0x02	; 2
 2e6:	60 f4       	brcc	.+24     	; 0x300 <__EEPROM_REGION_LENGTH__+0x100>
 2e8:	c3 01       	movw	r24, r6
 2ea:	c3 de       	rcall	.-634    	; 0x72 <_ZN7HD4478012SelectDeviceEv>
 2ec:	c3 01       	movw	r24, r6
 2ee:	c6 de       	rcall	.-628    	; 0x7c <_ZN7HD447809LatchDataEv>
 2f0:	8f e0       	ldi	r24, 0x0F	; 15
 2f2:	97 e2       	ldi	r25, 0x27	; 39
 2f4:	01 97       	sbiw	r24, 0x01	; 1
 2f6:	f1 f7       	brne	.-4      	; 0x2f4 <__EEPROM_REGION_LENGTH__+0xf4>
 2f8:	00 c0       	rjmp	.+0      	; 0x2fa <__EEPROM_REGION_LENGTH__+0xfa>
 2fa:	00 00       	nop
 2fc:	1f 5f       	subi	r17, 0xFF	; 255
 2fe:	f2 cf       	rjmp	.-28     	; 0x2e4 <__EEPROM_REGION_LENGTH__+0xe4>
 300:	d3 01       	movw	r26, r6
 302:	16 96       	adiw	r26, 0x06	; 6
 304:	8d 91       	ld	r24, X+
 306:	9c 91       	ld	r25, X
 308:	17 97       	sbiw	r26, 0x07	; 7
 30a:	75 d1       	rcall	.+746    	; 0x5f6 <_ZN4Port5ClearEv>
 30c:	c3 01       	movw	r24, r6
 30e:	b1 de       	rcall	.-670    	; 0x72 <_ZN7HD4478012SelectDeviceEv>
 310:	c3 01       	movw	r24, r6
 312:	b4 de       	rcall	.-664    	; 0x7c <_ZN7HD447809LatchDataEv>
 314:	e7 ec       	ldi	r30, 0xC7	; 199
 316:	f0 e0       	ldi	r31, 0x00	; 0
 318:	31 97       	sbiw	r30, 0x01	; 1
 31a:	f1 f7       	brne	.-4      	; 0x318 <__EEPROM_REGION_LENGTH__+0x118>
 31c:	00 c0       	rjmp	.+0      	; 0x31e <__EEPROM_REGION_LENGTH__+0x11e>
 31e:	00 00       	nop
 320:	41 e0       	ldi	r20, 0x01	; 1
 322:	68 e2       	ldi	r22, 0x28	; 40
 324:	c3 01       	movw	r24, r6
 326:	fe de       	rcall	.-516    	; 0x124 <_ZN7HD447808SendByteEc16HD44780_DataType>
 328:	c3 01       	movw	r24, r6
 32a:	55 df       	rcall	.-342    	; 0x1d6 <_ZN7HD447803OffEv>
 32c:	c3 01       	movw	r24, r6
 32e:	57 df       	rcall	.-338    	; 0x1de <_ZN7HD447805ClearEv>
 330:	41 e0       	ldi	r20, 0x01	; 1
 332:	66 e0       	ldi	r22, 0x06	; 6
 334:	c3 01       	movw	r24, r6
 336:	f6 de       	rcall	.-532    	; 0x124 <_ZN7HD447808SendByteEc16HD44780_DataType>
 338:	c3 01       	movw	r24, r6
 33a:	49 df       	rcall	.-366    	; 0x1ce <_ZN7HD447802OnEv>
 33c:	df 91       	pop	r29
 33e:	cf 91       	pop	r28
 340:	1f 91       	pop	r17
 342:	0f 91       	pop	r16
 344:	ff 90       	pop	r15
 346:	ef 90       	pop	r14
 348:	df 90       	pop	r13
 34a:	cf 90       	pop	r12
 34c:	bf 90       	pop	r11
 34e:	af 90       	pop	r10
 350:	9f 90       	pop	r9
 352:	8f 90       	pop	r8
 354:	7f 90       	pop	r7
 356:	6f 90       	pop	r6
 358:	5f 90       	pop	r5
 35a:	4f 90       	pop	r4
 35c:	3f 90       	pop	r3
 35e:	2f 90       	pop	r2
 360:	08 95       	ret

00000362 <_ZN7HD4478017SetCursorPositionEhh>:
 362:	42 30       	cpi	r20, 0x02	; 2
 364:	20 f0       	brcs	.+8      	; 0x36e <_ZN7HD4478017SetCursorPositionEhh+0xc>
 366:	41 70       	andi	r20, 0x01	; 1
 368:	fc 01       	movw	r30, r24
 36a:	26 85       	ldd	r18, Z+14	; 0x0e
 36c:	62 0f       	add	r22, r18
 36e:	f0 e4       	ldi	r31, 0x40	; 64
 370:	4f 9f       	mul	r20, r31
 372:	60 0d       	add	r22, r0
 374:	11 24       	eor	r1, r1
 376:	60 68       	ori	r22, 0x80	; 128
 378:	41 e0       	ldi	r20, 0x01	; 1
 37a:	d4 de       	rcall	.-600    	; 0x124 <_ZN7HD447808SendByteEc16HD44780_DataType>
 37c:	08 95       	ret

0000037e <_ZN7HD4478014CursorOversideEhh>:
 37e:	fc 01       	movw	r30, r24
 380:	26 85       	ldd	r18, Z+14	; 0x0e
 382:	62 17       	cp	r22, r18
 384:	28 f4       	brcc	.+10     	; 0x390 <_ZN7HD4478014CursorOversideEhh+0x12>
 386:	87 85       	ldd	r24, Z+15	; 0x0f
 388:	48 17       	cp	r20, r24
 38a:	20 f0       	brcs	.+8      	; 0x394 <_ZN7HD4478014CursorOversideEhh+0x16>
 38c:	81 e0       	ldi	r24, 0x01	; 1
 38e:	08 95       	ret
 390:	81 e0       	ldi	r24, 0x01	; 1
 392:	08 95       	ret
 394:	80 e0       	ldi	r24, 0x00	; 0
 396:	08 95       	ret

00000398 <_ZN7HD4478015NormaliseLengthERhh>:
 398:	fb 01       	movw	r30, r22
 39a:	50 81       	ld	r21, Z
 39c:	25 2f       	mov	r18, r21
 39e:	30 e0       	ldi	r19, 0x00	; 0
 3a0:	24 0f       	add	r18, r20
 3a2:	31 1d       	adc	r19, r1
 3a4:	fc 01       	movw	r30, r24
 3a6:	86 85       	ldd	r24, Z+14	; 0x0e
 3a8:	e8 2f       	mov	r30, r24
 3aa:	f0 e0       	ldi	r31, 0x00	; 0
 3ac:	e2 17       	cp	r30, r18
 3ae:	f3 07       	cpc	r31, r19
 3b0:	14 f4       	brge	.+4      	; 0x3b6 <_ZN7HD4478015NormaliseLengthERhh+0x1e>
 3b2:	58 2f       	mov	r21, r24
 3b4:	54 1b       	sub	r21, r20
 3b6:	fb 01       	movw	r30, r22
 3b8:	50 83       	st	Z, r21
 3ba:	08 95       	ret

000003bc <_ZN7HD447805PrintEPKchh>:
		SendByte(symbol[i], LCD_Data);
	}
}

void HD44780::Print(const char *text, uint8_t slot, uint8_t line)
{
 3bc:	af 92       	push	r10
 3be:	bf 92       	push	r11
 3c0:	cf 92       	push	r12
 3c2:	df 92       	push	r13
 3c4:	ff 92       	push	r15
 3c6:	0f 93       	push	r16
 3c8:	1f 93       	push	r17
 3ca:	cf 93       	push	r28
 3cc:	df 93       	push	r29
 3ce:	1f 92       	push	r1
 3d0:	cd b7       	in	r28, 0x3d	; 61
 3d2:	de b7       	in	r29, 0x3e	; 62
 3d4:	5c 01       	movw	r10, r24
 3d6:	8b 01       	movw	r16, r22
 3d8:	f4 2e       	mov	r15, r20
 3da:	d2 2e       	mov	r13, r18
	if(CursorOverside(slot, line)) return;
 3dc:	42 2f       	mov	r20, r18
 3de:	6f 2d       	mov	r22, r15
 3e0:	ce df       	rcall	.-100    	; 0x37e <_ZN7HD4478014CursorOversideEhh>
 3e2:	81 11       	cpse	r24, r1
 3e4:	22 c0       	rjmp	.+68     	; 0x42a <__DATA_REGION_LENGTH__+0x2a>
	SetCursorPosition(slot, line);
 3e6:	4d 2d       	mov	r20, r13
 3e8:	6f 2d       	mov	r22, r15
 3ea:	c5 01       	movw	r24, r10
 3ec:	ba df       	rcall	.-140    	; 0x362 <_ZN7HD4478017SetCursorPositionEhh>
	
	uint8_t length = strlen(text);
 3ee:	f8 01       	movw	r30, r16
 3f0:	01 90       	ld	r0, Z+
 3f2:	00 20       	and	r0, r0
 3f4:	e9 f7       	brne	.-6      	; 0x3f0 <_ZN7HD447805PrintEPKchh+0x34>
 3f6:	31 97       	sbiw	r30, 0x01	; 1
 3f8:	e0 1b       	sub	r30, r16
 3fa:	f1 0b       	sbc	r31, r17
 3fc:	e9 83       	std	Y+1, r30	; 0x01
	NormaliseLength(length, slot);
 3fe:	4f 2d       	mov	r20, r15
 400:	be 01       	movw	r22, r28
 402:	6f 5f       	subi	r22, 0xFF	; 255
 404:	7f 4f       	sbci	r23, 0xFF	; 255
 406:	c5 01       	movw	r24, r10
 408:	c7 df       	rcall	.-114    	; 0x398 <_ZN7HD4478015NormaliseLengthERhh>
	for(uint8_t i = 0; i < length; i++)
 40a:	f1 2c       	mov	r15, r1
 40c:	89 81       	ldd	r24, Y+1	; 0x01
 40e:	f8 16       	cp	r15, r24
 410:	60 f4       	brcc	.+24     	; 0x42a <__DATA_REGION_LENGTH__+0x2a>
	{
		SendByte(*text++, LCD_Data);
 412:	68 01       	movw	r12, r16
 414:	8f ef       	ldi	r24, 0xFF	; 255
 416:	c8 1a       	sub	r12, r24
 418:	d8 0a       	sbc	r13, r24
 41a:	f8 01       	movw	r30, r16
 41c:	60 81       	ld	r22, Z
 41e:	40 e0       	ldi	r20, 0x00	; 0
 420:	c5 01       	movw	r24, r10
 422:	80 de       	rcall	.-768    	; 0x124 <_ZN7HD447808SendByteEc16HD44780_DataType>
	if(CursorOverside(slot, line)) return;
	SetCursorPosition(slot, line);
	
	uint8_t length = strlen(text);
	NormaliseLength(length, slot);
	for(uint8_t i = 0; i < length; i++)
 424:	f3 94       	inc	r15
	{
		SendByte(*text++, LCD_Data);
 426:	86 01       	movw	r16, r12
	if(CursorOverside(slot, line)) return;
	SetCursorPosition(slot, line);
	
	uint8_t length = strlen(text);
	NormaliseLength(length, slot);
	for(uint8_t i = 0; i < length; i++)
 428:	f1 cf       	rjmp	.-30     	; 0x40c <__DATA_REGION_LENGTH__+0xc>
	{
		SendByte(*text++, LCD_Data);
	}
}
 42a:	0f 90       	pop	r0
 42c:	df 91       	pop	r29
 42e:	cf 91       	pop	r28
 430:	1f 91       	pop	r17
 432:	0f 91       	pop	r16
 434:	ff 90       	pop	r15
 436:	df 90       	pop	r13
 438:	cf 90       	pop	r12
 43a:	bf 90       	pop	r11
 43c:	af 90       	pop	r10
 43e:	08 95       	ret

00000440 <_ZN7HD4478014PrintAlignmentEPKch17HD44780_Alignment>:

void HD44780::PrintAlignment(const char* text, uint8_t line, HD44780_Alignment alignment)
{
 440:	54 2f       	mov	r21, r20
	uint8_t slot = 0;
	
	switch(alignment)
 442:	21 30       	cpi	r18, 0x01	; 1
 444:	19 f0       	breq	.+6      	; 0x44c <_ZN7HD4478014PrintAlignmentEPKch17HD44780_Alignment+0xc>
 446:	22 30       	cpi	r18, 0x02	; 2
 448:	69 f0       	breq	.+26     	; 0x464 <__stack+0x5>
 44a:	1c c0       	rjmp	.+56     	; 0x484 <__stack+0x25>
			slot = 0;
		}break;
		
		case RIGHT_SIDE:
		{
			slot = this->symbols - strlen(text);
 44c:	fc 01       	movw	r30, r24
 44e:	26 85       	ldd	r18, Z+14	; 0x0e
 450:	fb 01       	movw	r30, r22
 452:	01 90       	ld	r0, Z+
 454:	00 20       	and	r0, r0
 456:	e9 f7       	brne	.-6      	; 0x452 <_ZN7HD4478014PrintAlignmentEPKch17HD44780_Alignment+0x12>
 458:	31 97       	sbiw	r30, 0x01	; 1
 45a:	e6 1b       	sub	r30, r22
 45c:	f7 0b       	sbc	r31, r23
 45e:	42 2f       	mov	r20, r18
 460:	4e 1b       	sub	r20, r30
		}break;
 462:	11 c0       	rjmp	.+34     	; 0x486 <__stack+0x27>
		
		case CENTER_SCREEN:
		{
			slot = (this->symbols - strlen(text)) / 2;
 464:	fc 01       	movw	r30, r24
 466:	26 85       	ldd	r18, Z+14	; 0x0e
 468:	fb 01       	movw	r30, r22
 46a:	01 90       	ld	r0, Z+
 46c:	00 20       	and	r0, r0
 46e:	e9 f7       	brne	.-6      	; 0x46a <__stack+0xb>
 470:	31 97       	sbiw	r30, 0x01	; 1
 472:	e6 1b       	sub	r30, r22
 474:	f7 0b       	sbc	r31, r23
 476:	30 e0       	ldi	r19, 0x00	; 0
 478:	2e 1b       	sub	r18, r30
 47a:	3f 0b       	sbc	r19, r31
 47c:	36 95       	lsr	r19
 47e:	27 95       	ror	r18
 480:	42 2f       	mov	r20, r18
		}break;
 482:	01 c0       	rjmp	.+2      	; 0x486 <__stack+0x27>
	}
}

void HD44780::PrintAlignment(const char* text, uint8_t line, HD44780_Alignment alignment)
{
	uint8_t slot = 0;
 484:	40 e0       	ldi	r20, 0x00	; 0
		{
			slot = (this->symbols - strlen(text)) / 2;
		}break;
	}
	
	Print(text, slot, line);
 486:	25 2f       	mov	r18, r21
 488:	99 df       	rcall	.-206    	; 0x3bc <_ZN7HD447805PrintEPKchh>
 48a:	08 95       	ret

0000048c <main>:
#include "Port.h"
#include "HD44780.h"


int main(void)
{
 48c:	cf 93       	push	r28
 48e:	df 93       	push	r29
 490:	00 d0       	rcall	.+0      	; 0x492 <main+0x6>
 492:	00 d0       	rcall	.+0      	; 0x494 <main+0x8>
 494:	cd b7       	in	r28, 0x3d	; 61
 496:	de b7       	in	r29, 0x3e	; 62
	Port *rs = new Port(&PORTB, &DDRB, &PINB, 0);
 498:	87 e0       	ldi	r24, 0x07	; 7
 49a:	90 e0       	ldi	r25, 0x00	; 0
 49c:	e4 d0       	rcall	.+456    	; 0x666 <_ZN4PortnwEj>
 49e:	3c 01       	movw	r6, r24
 4a0:	00 e0       	ldi	r16, 0x00	; 0
 4a2:	26 e3       	ldi	r18, 0x36	; 54
 4a4:	30 e0       	ldi	r19, 0x00	; 0
 4a6:	47 e3       	ldi	r20, 0x37	; 55
 4a8:	50 e0       	ldi	r21, 0x00	; 0
 4aa:	68 e3       	ldi	r22, 0x38	; 56
 4ac:	70 e0       	ldi	r23, 0x00	; 0
 4ae:	b7 d0       	rcall	.+366    	; 0x61e <_ZN4PortC1EPVhS1_S1_h>
	Port *rw = new Port(&PORTB, &DDRB, &PINB, 1);
 4b0:	87 e0       	ldi	r24, 0x07	; 7
 4b2:	90 e0       	ldi	r25, 0x00	; 0
 4b4:	d8 d0       	rcall	.+432    	; 0x666 <_ZN4PortnwEj>
 4b6:	2c 01       	movw	r4, r24
 4b8:	01 e0       	ldi	r16, 0x01	; 1
 4ba:	26 e3       	ldi	r18, 0x36	; 54
 4bc:	30 e0       	ldi	r19, 0x00	; 0
 4be:	47 e3       	ldi	r20, 0x37	; 55
 4c0:	50 e0       	ldi	r21, 0x00	; 0
 4c2:	68 e3       	ldi	r22, 0x38	; 56
 4c4:	70 e0       	ldi	r23, 0x00	; 0
 4c6:	ab d0       	rcall	.+342    	; 0x61e <_ZN4PortC1EPVhS1_S1_h>
	Port *e = new Port(&PORTB, &DDRB, &PINB, 2);
 4c8:	87 e0       	ldi	r24, 0x07	; 7
 4ca:	90 e0       	ldi	r25, 0x00	; 0
 4cc:	cc d0       	rcall	.+408    	; 0x666 <_ZN4PortnwEj>
 4ce:	1c 01       	movw	r2, r24
 4d0:	02 e0       	ldi	r16, 0x02	; 2
 4d2:	26 e3       	ldi	r18, 0x36	; 54
 4d4:	30 e0       	ldi	r19, 0x00	; 0
 4d6:	47 e3       	ldi	r20, 0x37	; 55
 4d8:	50 e0       	ldi	r21, 0x00	; 0
 4da:	68 e3       	ldi	r22, 0x38	; 56
 4dc:	70 e0       	ldi	r23, 0x00	; 0
 4de:	9f d0       	rcall	.+318    	; 0x61e <_ZN4PortC1EPVhS1_S1_h>
	Port *d4 = new Port(&PORTB, &DDRB, &PINB, 3);
 4e0:	87 e0       	ldi	r24, 0x07	; 7
 4e2:	90 e0       	ldi	r25, 0x00	; 0
 4e4:	c0 d0       	rcall	.+384    	; 0x666 <_ZN4PortnwEj>
 4e6:	9a 83       	std	Y+2, r25	; 0x02
 4e8:	89 83       	std	Y+1, r24	; 0x01
 4ea:	03 e0       	ldi	r16, 0x03	; 3
 4ec:	26 e3       	ldi	r18, 0x36	; 54
 4ee:	30 e0       	ldi	r19, 0x00	; 0
 4f0:	47 e3       	ldi	r20, 0x37	; 55
 4f2:	50 e0       	ldi	r21, 0x00	; 0
 4f4:	68 e3       	ldi	r22, 0x38	; 56
 4f6:	70 e0       	ldi	r23, 0x00	; 0
 4f8:	92 d0       	rcall	.+292    	; 0x61e <_ZN4PortC1EPVhS1_S1_h>
	Port *d5 = new Port(&PORTB, &DDRB, &PINB, 4);
 4fa:	87 e0       	ldi	r24, 0x07	; 7
 4fc:	90 e0       	ldi	r25, 0x00	; 0
 4fe:	b3 d0       	rcall	.+358    	; 0x666 <_ZN4PortnwEj>
 500:	7c 01       	movw	r14, r24
 502:	04 e0       	ldi	r16, 0x04	; 4
 504:	26 e3       	ldi	r18, 0x36	; 54
 506:	30 e0       	ldi	r19, 0x00	; 0
 508:	47 e3       	ldi	r20, 0x37	; 55
 50a:	50 e0       	ldi	r21, 0x00	; 0
 50c:	68 e3       	ldi	r22, 0x38	; 56
 50e:	70 e0       	ldi	r23, 0x00	; 0
 510:	86 d0       	rcall	.+268    	; 0x61e <_ZN4PortC1EPVhS1_S1_h>
	Port *d6 = new Port(&PORTB, &DDRB, &PINB, 5);
 512:	87 e0       	ldi	r24, 0x07	; 7
 514:	90 e0       	ldi	r25, 0x00	; 0
 516:	a7 d0       	rcall	.+334    	; 0x666 <_ZN4PortnwEj>
 518:	6c 01       	movw	r12, r24
 51a:	05 e0       	ldi	r16, 0x05	; 5
 51c:	26 e3       	ldi	r18, 0x36	; 54
 51e:	30 e0       	ldi	r19, 0x00	; 0
 520:	47 e3       	ldi	r20, 0x37	; 55
 522:	50 e0       	ldi	r21, 0x00	; 0
 524:	68 e3       	ldi	r22, 0x38	; 56
 526:	70 e0       	ldi	r23, 0x00	; 0
 528:	7a d0       	rcall	.+244    	; 0x61e <_ZN4PortC1EPVhS1_S1_h>
	Port *d7 = new Port(&PORTB, &DDRB, &PINB, 6);
 52a:	87 e0       	ldi	r24, 0x07	; 7
 52c:	90 e0       	ldi	r25, 0x00	; 0
 52e:	9b d0       	rcall	.+310    	; 0x666 <_ZN4PortnwEj>
 530:	5c 01       	movw	r10, r24
 532:	06 e0       	ldi	r16, 0x06	; 6
 534:	26 e3       	ldi	r18, 0x36	; 54
 536:	30 e0       	ldi	r19, 0x00	; 0
 538:	47 e3       	ldi	r20, 0x37	; 55
 53a:	50 e0       	ldi	r21, 0x00	; 0
 53c:	68 e3       	ldi	r22, 0x38	; 56
 53e:	70 e0       	ldi	r23, 0x00	; 0
 540:	6e d0       	rcall	.+220    	; 0x61e <_ZN4PortC1EPVhS1_S1_h>
	
	HD44780 *lcd = new HD44780(rs, rw, e, d4, d5, d6, d7, WH1602);
 542:	80 e1       	ldi	r24, 0x10	; 16
 544:	90 e0       	ldi	r25, 0x00	; 0
 546:	8b dd       	rcall	.-1258   	; 0x5e <_ZN7HD44780nwEj>
 548:	9c 83       	std	Y+4, r25	; 0x04
 54a:	8b 83       	std	Y+3, r24	; 0x03
 54c:	0f 2e       	mov	r0, r31
 54e:	f2 e4       	ldi	r31, 0x42	; 66
 550:	8f 2e       	mov	r8, r31
 552:	f6 e0       	ldi	r31, 0x06	; 6
 554:	9f 2e       	mov	r9, r31
 556:	f0 2d       	mov	r31, r0
 558:	09 81       	ldd	r16, Y+1	; 0x01
 55a:	1a 81       	ldd	r17, Y+2	; 0x02
 55c:	91 01       	movw	r18, r2
 55e:	a2 01       	movw	r20, r4
 560:	b3 01       	movw	r22, r6
 562:	41 de       	rcall	.-894    	; 0x1e6 <_ZN7HD44780C1EP4PortS1_S1_S1_S1_S1_S1_12HD44780_Type>
	
	lcd->Print("Hello my friend", 0, 1);
 564:	21 e0       	ldi	r18, 0x01	; 1
 566:	40 e0       	ldi	r20, 0x00	; 0
 568:	66 e6       	ldi	r22, 0x66	; 102
 56a:	70 e0       	ldi	r23, 0x00	; 0
 56c:	8b 81       	ldd	r24, Y+3	; 0x03
 56e:	9c 81       	ldd	r25, Y+4	; 0x04
 570:	25 df       	rcall	.-438    	; 0x3bc <_ZN7HD447805PrintEPKchh>
	lcd->PrintAlignment("CENTER", 0, CENTER_SCREEN);
 572:	22 e0       	ldi	r18, 0x02	; 2
 574:	40 e0       	ldi	r20, 0x00	; 0
 576:	66 e7       	ldi	r22, 0x76	; 118
 578:	70 e0       	ldi	r23, 0x00	; 0
 57a:	8b 81       	ldd	r24, Y+3	; 0x03
 57c:	9c 81       	ldd	r25, Y+4	; 0x04
 57e:	60 df       	rcall	.-320    	; 0x440 <_ZN7HD4478014PrintAlignmentEPKch17HD44780_Alignment>
 580:	ff cf       	rjmp	.-2      	; 0x580 <main+0xf4>

00000582 <_ZN4Port10SetAsInputEv>:
bool Port::IsClear()
{
	return !(*this->PIN & (1<<this->pinNum));
}

Port::~Port(){}
 582:	dc 01       	movw	r26, r24
 584:	12 96       	adiw	r26, 0x02	; 2
 586:	ed 91       	ld	r30, X+
 588:	fc 91       	ld	r31, X
 58a:	13 97       	sbiw	r26, 0x03	; 3
 58c:	40 81       	ld	r20, Z
 58e:	21 e0       	ldi	r18, 0x01	; 1
 590:	30 e0       	ldi	r19, 0x00	; 0
 592:	b9 01       	movw	r22, r18
 594:	16 96       	adiw	r26, 0x06	; 6
 596:	0c 90       	ld	r0, X
 598:	02 c0       	rjmp	.+4      	; 0x59e <_ZN4Port10SetAsInputEv+0x1c>
 59a:	66 0f       	add	r22, r22
 59c:	77 1f       	adc	r23, r23
 59e:	0a 94       	dec	r0
 5a0:	e2 f7       	brpl	.-8      	; 0x59a <_ZN4Port10SetAsInputEv+0x18>
 5a2:	cb 01       	movw	r24, r22
 5a4:	80 95       	com	r24
 5a6:	84 23       	and	r24, r20
 5a8:	80 83       	st	Z, r24
 5aa:	08 95       	ret

000005ac <_ZN4Port11SetAsOutputEv>:
 5ac:	dc 01       	movw	r26, r24
 5ae:	12 96       	adiw	r26, 0x02	; 2
 5b0:	ed 91       	ld	r30, X+
 5b2:	fc 91       	ld	r31, X
 5b4:	13 97       	sbiw	r26, 0x03	; 3
 5b6:	40 81       	ld	r20, Z
 5b8:	21 e0       	ldi	r18, 0x01	; 1
 5ba:	30 e0       	ldi	r19, 0x00	; 0
 5bc:	c9 01       	movw	r24, r18
 5be:	16 96       	adiw	r26, 0x06	; 6
 5c0:	0c 90       	ld	r0, X
 5c2:	02 c0       	rjmp	.+4      	; 0x5c8 <_ZN4Port11SetAsOutputEv+0x1c>
 5c4:	88 0f       	add	r24, r24
 5c6:	99 1f       	adc	r25, r25
 5c8:	0a 94       	dec	r0
 5ca:	e2 f7       	brpl	.-8      	; 0x5c4 <_ZN4Port11SetAsOutputEv+0x18>
 5cc:	84 2b       	or	r24, r20
 5ce:	80 83       	st	Z, r24
 5d0:	08 95       	ret

000005d2 <_ZN4Port3SetEv>:
 5d2:	dc 01       	movw	r26, r24
 5d4:	ed 91       	ld	r30, X+
 5d6:	fc 91       	ld	r31, X
 5d8:	11 97       	sbiw	r26, 0x01	; 1
 5da:	40 81       	ld	r20, Z
 5dc:	21 e0       	ldi	r18, 0x01	; 1
 5de:	30 e0       	ldi	r19, 0x00	; 0
 5e0:	c9 01       	movw	r24, r18
 5e2:	16 96       	adiw	r26, 0x06	; 6
 5e4:	0c 90       	ld	r0, X
 5e6:	02 c0       	rjmp	.+4      	; 0x5ec <_ZN4Port3SetEv+0x1a>
 5e8:	88 0f       	add	r24, r24
 5ea:	99 1f       	adc	r25, r25
 5ec:	0a 94       	dec	r0
 5ee:	e2 f7       	brpl	.-8      	; 0x5e8 <_ZN4Port3SetEv+0x16>
 5f0:	84 2b       	or	r24, r20
 5f2:	80 83       	st	Z, r24
 5f4:	08 95       	ret

000005f6 <_ZN4Port5ClearEv>:
 5f6:	dc 01       	movw	r26, r24
 5f8:	ed 91       	ld	r30, X+
 5fa:	fc 91       	ld	r31, X
 5fc:	11 97       	sbiw	r26, 0x01	; 1
 5fe:	40 81       	ld	r20, Z
 600:	21 e0       	ldi	r18, 0x01	; 1
 602:	30 e0       	ldi	r19, 0x00	; 0
 604:	b9 01       	movw	r22, r18
 606:	16 96       	adiw	r26, 0x06	; 6
 608:	0c 90       	ld	r0, X
 60a:	02 c0       	rjmp	.+4      	; 0x610 <_ZN4Port5ClearEv+0x1a>
 60c:	66 0f       	add	r22, r22
 60e:	77 1f       	adc	r23, r23
 610:	0a 94       	dec	r0
 612:	e2 f7       	brpl	.-8      	; 0x60c <_ZN4Port5ClearEv+0x16>
 614:	cb 01       	movw	r24, r22
 616:	80 95       	com	r24
 618:	84 23       	and	r24, r20
 61a:	80 83       	st	Z, r24
 61c:	08 95       	ret

0000061e <_ZN4PortC1EPVhS1_S1_h>:
 61e:	0f 93       	push	r16
 620:	cf 93       	push	r28
 622:	df 93       	push	r29
 624:	ec 01       	movw	r28, r24
 626:	79 83       	std	Y+1, r23	; 0x01
 628:	68 83       	st	Y, r22
 62a:	5b 83       	std	Y+3, r21	; 0x03
 62c:	4a 83       	std	Y+2, r20	; 0x02
 62e:	3d 83       	std	Y+5, r19	; 0x05
 630:	2c 83       	std	Y+4, r18	; 0x04
 632:	0e 83       	std	Y+6, r16	; 0x06
 634:	a6 df       	rcall	.-180    	; 0x582 <_ZN4Port10SetAsInputEv>
 636:	ce 01       	movw	r24, r28
 638:	de df       	rcall	.-68     	; 0x5f6 <_ZN4Port5ClearEv>
 63a:	df 91       	pop	r29
 63c:	cf 91       	pop	r28
 63e:	0f 91       	pop	r16
 640:	08 95       	ret

00000642 <_ZN4Port5IsSetEv>:
 642:	dc 01       	movw	r26, r24
 644:	14 96       	adiw	r26, 0x04	; 4
 646:	ed 91       	ld	r30, X+
 648:	fc 91       	ld	r31, X
 64a:	15 97       	sbiw	r26, 0x05	; 5
 64c:	20 81       	ld	r18, Z
 64e:	30 e0       	ldi	r19, 0x00	; 0
 650:	f9 01       	movw	r30, r18
 652:	16 96       	adiw	r26, 0x06	; 6
 654:	0c 90       	ld	r0, X
 656:	02 c0       	rjmp	.+4      	; 0x65c <_ZN4Port5IsSetEv+0x1a>
 658:	f5 95       	asr	r31
 65a:	e7 95       	ror	r30
 65c:	0a 94       	dec	r0
 65e:	e2 f7       	brpl	.-8      	; 0x658 <_ZN4Port5IsSetEv+0x16>
 660:	cf 01       	movw	r24, r30
 662:	81 70       	andi	r24, 0x01	; 1
 664:	08 95       	ret

00000666 <_ZN4PortnwEj>:

void* Port::operator new(size_t size)
{
 666:	cf 93       	push	r28
 668:	df 93       	push	r29
 66a:	ec 01       	movw	r28, r24
	void* ptr;
	do
	{
		ptr = malloc(size);
 66c:	ce 01       	movw	r24, r28
 66e:	11 d0       	rcall	.+34     	; 0x692 <malloc>
	}while(ptr == nullptr);
 670:	00 97       	sbiw	r24, 0x00	; 0
 672:	e1 f3       	breq	.-8      	; 0x66c <_ZN4PortnwEj+0x6>
	
	return ptr;
}
 674:	df 91       	pop	r29
 676:	cf 91       	pop	r28
 678:	08 95       	ret

0000067a <__umulhisi3>:
 67a:	a2 9f       	mul	r26, r18
 67c:	b0 01       	movw	r22, r0
 67e:	b3 9f       	mul	r27, r19
 680:	c0 01       	movw	r24, r0
 682:	a3 9f       	mul	r26, r19
 684:	01 d0       	rcall	.+2      	; 0x688 <__umulhisi3+0xe>
 686:	b2 9f       	mul	r27, r18
 688:	70 0d       	add	r23, r0
 68a:	81 1d       	adc	r24, r1
 68c:	11 24       	eor	r1, r1
 68e:	91 1d       	adc	r25, r1
 690:	08 95       	ret

00000692 <malloc>:
 692:	0f 93       	push	r16
 694:	1f 93       	push	r17
 696:	cf 93       	push	r28
 698:	df 93       	push	r29
 69a:	82 30       	cpi	r24, 0x02	; 2
 69c:	91 05       	cpc	r25, r1
 69e:	10 f4       	brcc	.+4      	; 0x6a4 <malloc+0x12>
 6a0:	82 e0       	ldi	r24, 0x02	; 2
 6a2:	90 e0       	ldi	r25, 0x00	; 0
 6a4:	e0 91 80 00 	lds	r30, 0x0080	; 0x800080 <__flp>
 6a8:	f0 91 81 00 	lds	r31, 0x0081	; 0x800081 <__flp+0x1>
 6ac:	20 e0       	ldi	r18, 0x00	; 0
 6ae:	30 e0       	ldi	r19, 0x00	; 0
 6b0:	a0 e0       	ldi	r26, 0x00	; 0
 6b2:	b0 e0       	ldi	r27, 0x00	; 0
 6b4:	30 97       	sbiw	r30, 0x00	; 0
 6b6:	19 f1       	breq	.+70     	; 0x6fe <malloc+0x6c>
 6b8:	40 81       	ld	r20, Z
 6ba:	51 81       	ldd	r21, Z+1	; 0x01
 6bc:	02 81       	ldd	r16, Z+2	; 0x02
 6be:	13 81       	ldd	r17, Z+3	; 0x03
 6c0:	48 17       	cp	r20, r24
 6c2:	59 07       	cpc	r21, r25
 6c4:	c8 f0       	brcs	.+50     	; 0x6f8 <malloc+0x66>
 6c6:	84 17       	cp	r24, r20
 6c8:	95 07       	cpc	r25, r21
 6ca:	69 f4       	brne	.+26     	; 0x6e6 <malloc+0x54>
 6cc:	10 97       	sbiw	r26, 0x00	; 0
 6ce:	31 f0       	breq	.+12     	; 0x6dc <malloc+0x4a>
 6d0:	12 96       	adiw	r26, 0x02	; 2
 6d2:	0c 93       	st	X, r16
 6d4:	12 97       	sbiw	r26, 0x02	; 2
 6d6:	13 96       	adiw	r26, 0x03	; 3
 6d8:	1c 93       	st	X, r17
 6da:	27 c0       	rjmp	.+78     	; 0x72a <malloc+0x98>
 6dc:	00 93 80 00 	sts	0x0080, r16	; 0x800080 <__flp>
 6e0:	10 93 81 00 	sts	0x0081, r17	; 0x800081 <__flp+0x1>
 6e4:	22 c0       	rjmp	.+68     	; 0x72a <malloc+0x98>
 6e6:	21 15       	cp	r18, r1
 6e8:	31 05       	cpc	r19, r1
 6ea:	19 f0       	breq	.+6      	; 0x6f2 <malloc+0x60>
 6ec:	42 17       	cp	r20, r18
 6ee:	53 07       	cpc	r21, r19
 6f0:	18 f4       	brcc	.+6      	; 0x6f8 <malloc+0x66>
 6f2:	9a 01       	movw	r18, r20
 6f4:	bd 01       	movw	r22, r26
 6f6:	ef 01       	movw	r28, r30
 6f8:	df 01       	movw	r26, r30
 6fa:	f8 01       	movw	r30, r16
 6fc:	db cf       	rjmp	.-74     	; 0x6b4 <malloc+0x22>
 6fe:	21 15       	cp	r18, r1
 700:	31 05       	cpc	r19, r1
 702:	f9 f0       	breq	.+62     	; 0x742 <malloc+0xb0>
 704:	28 1b       	sub	r18, r24
 706:	39 0b       	sbc	r19, r25
 708:	24 30       	cpi	r18, 0x04	; 4
 70a:	31 05       	cpc	r19, r1
 70c:	80 f4       	brcc	.+32     	; 0x72e <malloc+0x9c>
 70e:	8a 81       	ldd	r24, Y+2	; 0x02
 710:	9b 81       	ldd	r25, Y+3	; 0x03
 712:	61 15       	cp	r22, r1
 714:	71 05       	cpc	r23, r1
 716:	21 f0       	breq	.+8      	; 0x720 <malloc+0x8e>
 718:	fb 01       	movw	r30, r22
 71a:	93 83       	std	Z+3, r25	; 0x03
 71c:	82 83       	std	Z+2, r24	; 0x02
 71e:	04 c0       	rjmp	.+8      	; 0x728 <malloc+0x96>
 720:	90 93 81 00 	sts	0x0081, r25	; 0x800081 <__flp+0x1>
 724:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__flp>
 728:	fe 01       	movw	r30, r28
 72a:	32 96       	adiw	r30, 0x02	; 2
 72c:	44 c0       	rjmp	.+136    	; 0x7b6 <malloc+0x124>
 72e:	fe 01       	movw	r30, r28
 730:	e2 0f       	add	r30, r18
 732:	f3 1f       	adc	r31, r19
 734:	81 93       	st	Z+, r24
 736:	91 93       	st	Z+, r25
 738:	22 50       	subi	r18, 0x02	; 2
 73a:	31 09       	sbc	r19, r1
 73c:	39 83       	std	Y+1, r19	; 0x01
 73e:	28 83       	st	Y, r18
 740:	3a c0       	rjmp	.+116    	; 0x7b6 <malloc+0x124>
 742:	20 91 7e 00 	lds	r18, 0x007E	; 0x80007e <__data_end>
 746:	30 91 7f 00 	lds	r19, 0x007F	; 0x80007f <__data_end+0x1>
 74a:	23 2b       	or	r18, r19
 74c:	41 f4       	brne	.+16     	; 0x75e <malloc+0xcc>
 74e:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <__malloc_heap_start>
 752:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <__malloc_heap_start+0x1>
 756:	30 93 7f 00 	sts	0x007F, r19	; 0x80007f <__data_end+0x1>
 75a:	20 93 7e 00 	sts	0x007E, r18	; 0x80007e <__data_end>
 75e:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 762:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 766:	21 15       	cp	r18, r1
 768:	31 05       	cpc	r19, r1
 76a:	41 f4       	brne	.+16     	; 0x77c <malloc+0xea>
 76c:	2d b7       	in	r18, 0x3d	; 61
 76e:	3e b7       	in	r19, 0x3e	; 62
 770:	40 91 64 00 	lds	r20, 0x0064	; 0x800064 <__malloc_margin>
 774:	50 91 65 00 	lds	r21, 0x0065	; 0x800065 <__malloc_margin+0x1>
 778:	24 1b       	sub	r18, r20
 77a:	35 0b       	sbc	r19, r21
 77c:	e0 91 7e 00 	lds	r30, 0x007E	; 0x80007e <__data_end>
 780:	f0 91 7f 00 	lds	r31, 0x007F	; 0x80007f <__data_end+0x1>
 784:	e2 17       	cp	r30, r18
 786:	f3 07       	cpc	r31, r19
 788:	a0 f4       	brcc	.+40     	; 0x7b2 <malloc+0x120>
 78a:	2e 1b       	sub	r18, r30
 78c:	3f 0b       	sbc	r19, r31
 78e:	28 17       	cp	r18, r24
 790:	39 07       	cpc	r19, r25
 792:	78 f0       	brcs	.+30     	; 0x7b2 <malloc+0x120>
 794:	ac 01       	movw	r20, r24
 796:	4e 5f       	subi	r20, 0xFE	; 254
 798:	5f 4f       	sbci	r21, 0xFF	; 255
 79a:	24 17       	cp	r18, r20
 79c:	35 07       	cpc	r19, r21
 79e:	48 f0       	brcs	.+18     	; 0x7b2 <malloc+0x120>
 7a0:	4e 0f       	add	r20, r30
 7a2:	5f 1f       	adc	r21, r31
 7a4:	50 93 7f 00 	sts	0x007F, r21	; 0x80007f <__data_end+0x1>
 7a8:	40 93 7e 00 	sts	0x007E, r20	; 0x80007e <__data_end>
 7ac:	81 93       	st	Z+, r24
 7ae:	91 93       	st	Z+, r25
 7b0:	02 c0       	rjmp	.+4      	; 0x7b6 <malloc+0x124>
 7b2:	e0 e0       	ldi	r30, 0x00	; 0
 7b4:	f0 e0       	ldi	r31, 0x00	; 0
 7b6:	cf 01       	movw	r24, r30
 7b8:	df 91       	pop	r29
 7ba:	cf 91       	pop	r28
 7bc:	1f 91       	pop	r17
 7be:	0f 91       	pop	r16
 7c0:	08 95       	ret

000007c2 <free>:
 7c2:	cf 93       	push	r28
 7c4:	df 93       	push	r29
 7c6:	00 97       	sbiw	r24, 0x00	; 0
 7c8:	09 f4       	brne	.+2      	; 0x7cc <free+0xa>
 7ca:	81 c0       	rjmp	.+258    	; 0x8ce <free+0x10c>
 7cc:	fc 01       	movw	r30, r24
 7ce:	32 97       	sbiw	r30, 0x02	; 2
 7d0:	13 82       	std	Z+3, r1	; 0x03
 7d2:	12 82       	std	Z+2, r1	; 0x02
 7d4:	a0 91 80 00 	lds	r26, 0x0080	; 0x800080 <__flp>
 7d8:	b0 91 81 00 	lds	r27, 0x0081	; 0x800081 <__flp+0x1>
 7dc:	10 97       	sbiw	r26, 0x00	; 0
 7de:	81 f4       	brne	.+32     	; 0x800 <free+0x3e>
 7e0:	20 81       	ld	r18, Z
 7e2:	31 81       	ldd	r19, Z+1	; 0x01
 7e4:	82 0f       	add	r24, r18
 7e6:	93 1f       	adc	r25, r19
 7e8:	20 91 7e 00 	lds	r18, 0x007E	; 0x80007e <__data_end>
 7ec:	30 91 7f 00 	lds	r19, 0x007F	; 0x80007f <__data_end+0x1>
 7f0:	28 17       	cp	r18, r24
 7f2:	39 07       	cpc	r19, r25
 7f4:	51 f5       	brne	.+84     	; 0x84a <free+0x88>
 7f6:	f0 93 7f 00 	sts	0x007F, r31	; 0x80007f <__data_end+0x1>
 7fa:	e0 93 7e 00 	sts	0x007E, r30	; 0x80007e <__data_end>
 7fe:	67 c0       	rjmp	.+206    	; 0x8ce <free+0x10c>
 800:	ed 01       	movw	r28, r26
 802:	20 e0       	ldi	r18, 0x00	; 0
 804:	30 e0       	ldi	r19, 0x00	; 0
 806:	ce 17       	cp	r28, r30
 808:	df 07       	cpc	r29, r31
 80a:	40 f4       	brcc	.+16     	; 0x81c <free+0x5a>
 80c:	4a 81       	ldd	r20, Y+2	; 0x02
 80e:	5b 81       	ldd	r21, Y+3	; 0x03
 810:	9e 01       	movw	r18, r28
 812:	41 15       	cp	r20, r1
 814:	51 05       	cpc	r21, r1
 816:	f1 f0       	breq	.+60     	; 0x854 <free+0x92>
 818:	ea 01       	movw	r28, r20
 81a:	f5 cf       	rjmp	.-22     	; 0x806 <free+0x44>
 81c:	d3 83       	std	Z+3, r29	; 0x03
 81e:	c2 83       	std	Z+2, r28	; 0x02
 820:	40 81       	ld	r20, Z
 822:	51 81       	ldd	r21, Z+1	; 0x01
 824:	84 0f       	add	r24, r20
 826:	95 1f       	adc	r25, r21
 828:	c8 17       	cp	r28, r24
 82a:	d9 07       	cpc	r29, r25
 82c:	59 f4       	brne	.+22     	; 0x844 <free+0x82>
 82e:	88 81       	ld	r24, Y
 830:	99 81       	ldd	r25, Y+1	; 0x01
 832:	84 0f       	add	r24, r20
 834:	95 1f       	adc	r25, r21
 836:	02 96       	adiw	r24, 0x02	; 2
 838:	91 83       	std	Z+1, r25	; 0x01
 83a:	80 83       	st	Z, r24
 83c:	8a 81       	ldd	r24, Y+2	; 0x02
 83e:	9b 81       	ldd	r25, Y+3	; 0x03
 840:	93 83       	std	Z+3, r25	; 0x03
 842:	82 83       	std	Z+2, r24	; 0x02
 844:	21 15       	cp	r18, r1
 846:	31 05       	cpc	r19, r1
 848:	29 f4       	brne	.+10     	; 0x854 <free+0x92>
 84a:	f0 93 81 00 	sts	0x0081, r31	; 0x800081 <__flp+0x1>
 84e:	e0 93 80 00 	sts	0x0080, r30	; 0x800080 <__flp>
 852:	3d c0       	rjmp	.+122    	; 0x8ce <free+0x10c>
 854:	e9 01       	movw	r28, r18
 856:	fb 83       	std	Y+3, r31	; 0x03
 858:	ea 83       	std	Y+2, r30	; 0x02
 85a:	49 91       	ld	r20, Y+
 85c:	59 91       	ld	r21, Y+
 85e:	c4 0f       	add	r28, r20
 860:	d5 1f       	adc	r29, r21
 862:	ec 17       	cp	r30, r28
 864:	fd 07       	cpc	r31, r29
 866:	61 f4       	brne	.+24     	; 0x880 <free+0xbe>
 868:	80 81       	ld	r24, Z
 86a:	91 81       	ldd	r25, Z+1	; 0x01
 86c:	84 0f       	add	r24, r20
 86e:	95 1f       	adc	r25, r21
 870:	02 96       	adiw	r24, 0x02	; 2
 872:	e9 01       	movw	r28, r18
 874:	99 83       	std	Y+1, r25	; 0x01
 876:	88 83       	st	Y, r24
 878:	82 81       	ldd	r24, Z+2	; 0x02
 87a:	93 81       	ldd	r25, Z+3	; 0x03
 87c:	9b 83       	std	Y+3, r25	; 0x03
 87e:	8a 83       	std	Y+2, r24	; 0x02
 880:	e0 e0       	ldi	r30, 0x00	; 0
 882:	f0 e0       	ldi	r31, 0x00	; 0
 884:	12 96       	adiw	r26, 0x02	; 2
 886:	8d 91       	ld	r24, X+
 888:	9c 91       	ld	r25, X
 88a:	13 97       	sbiw	r26, 0x03	; 3
 88c:	00 97       	sbiw	r24, 0x00	; 0
 88e:	19 f0       	breq	.+6      	; 0x896 <free+0xd4>
 890:	fd 01       	movw	r30, r26
 892:	dc 01       	movw	r26, r24
 894:	f7 cf       	rjmp	.-18     	; 0x884 <free+0xc2>
 896:	8d 91       	ld	r24, X+
 898:	9c 91       	ld	r25, X
 89a:	11 97       	sbiw	r26, 0x01	; 1
 89c:	9d 01       	movw	r18, r26
 89e:	2e 5f       	subi	r18, 0xFE	; 254
 8a0:	3f 4f       	sbci	r19, 0xFF	; 255
 8a2:	82 0f       	add	r24, r18
 8a4:	93 1f       	adc	r25, r19
 8a6:	20 91 7e 00 	lds	r18, 0x007E	; 0x80007e <__data_end>
 8aa:	30 91 7f 00 	lds	r19, 0x007F	; 0x80007f <__data_end+0x1>
 8ae:	28 17       	cp	r18, r24
 8b0:	39 07       	cpc	r19, r25
 8b2:	69 f4       	brne	.+26     	; 0x8ce <free+0x10c>
 8b4:	30 97       	sbiw	r30, 0x00	; 0
 8b6:	29 f4       	brne	.+10     	; 0x8c2 <free+0x100>
 8b8:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__flp+0x1>
 8bc:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__flp>
 8c0:	02 c0       	rjmp	.+4      	; 0x8c6 <free+0x104>
 8c2:	13 82       	std	Z+3, r1	; 0x03
 8c4:	12 82       	std	Z+2, r1	; 0x02
 8c6:	b0 93 7f 00 	sts	0x007F, r27	; 0x80007f <__data_end+0x1>
 8ca:	a0 93 7e 00 	sts	0x007E, r26	; 0x80007e <__data_end>
 8ce:	df 91       	pop	r29
 8d0:	cf 91       	pop	r28
 8d2:	08 95       	ret

000008d4 <_exit>:
 8d4:	f8 94       	cli

000008d6 <__stop_program>:
 8d6:	ff cf       	rjmp	.-2      	; 0x8d6 <__stop_program>
